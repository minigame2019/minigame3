Shader "Hidden/Post FX/Builtin Debug Views" {
	Properties {
	}
	SubShader {
		Pass {
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 29575
			Program "vp" {
				SubProgram "d3d9 " {
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_ST         c8       1
					//
					
					    vs_3_0
					    def c9, 1, 0, 0, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    mad r0, v0.xyzx, c9.xxxy, c9.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mad o2.xy, v1, c8, c8.zwzw
					    mov o1.xy, v1
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 13 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mad o1.zw, v1.xxxy, cb0[3].xxxy, cb0[3].zzzw
					mov o1.xy, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _CameraDepthTexture;
					//   float4 _CameraDepthTexture_ST;
					//   float _DepthScale;
					//   float4 _ZBufferParams;
					//
					//
					// Registers:
					//
					//   Name                   Reg   Size
					//   ---------------------- ----- ----
					//   _ZBufferParams         c0       1
					//   _CameraDepthTexture_ST c1       1
					//   _DepthScale            c2       1
					//   _CameraDepthTexture    s0       1
					//
					
					    ps_3_0
					    def c3, 0.305306017, 0.682171106, 0.0125228781, 1
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    mad r0.xy, v0, c1, c1.zwzw
					    texld r0, r0, s0
					    mad r0.x, c0.x, r0.x, c0.y
					    rcp r0.x, r0.x
					    mul_pp r0.x, r0.x, c2.x
					    mad_pp r0.y, r0.x, c3.x, c3.y
					    mad_pp r0.y, r0.x, r0.y, c3.z
					    mul_pp oC0.xyz, r0.y, r0.x
					    mov oC0.w, c3.w
					
					// approximately 9 instruction slots used (1 texture, 8 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_constantbuffer CB1[8], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 1
					mad r0.xy, v1.xyxx, cb0[4].xyxx, cb0[4].zwzz
					sample r0.xyzw, r0.xyxx, t0.xyzw, s0
					mad r0.x, cb1[7].x, r0.x, cb1[7].y
					div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
					mul r0.x, r0.x, cb0[7].x
					mad r0.y, r0.x, l(0.305306), l(0.682171)
					mad r0.y, r0.x, r0.y, l(0.012523)
					mul o0.xyz, r0.yyyy, r0.xxxx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 73083
			Program "vp" {
				SubProgram "d3d9 " {
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_ST         c8       1
					//
					
					    vs_3_0
					    def c9, 1, 0, 0, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    mad r0, v0.xyzx, c9.xxxy, c9.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mad o2.xy, v1, c8, c8.zwzw
					    mov o1.xy, v1
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 13 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mad o1.zw, v1.xxxy, cb0[3].xxxy, cb0[3].zzzw
					mov o1.xy, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d9 " {
					Keywords { "SOURCE_GBUFFER" }
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_ST         c8       1
					//
					
					    vs_3_0
					    def c9, 1, 0, 0, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    mad r0, v0.xyzx, c9.xxxy, c9.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mad o2.xy, v1, c8, c8.zwzw
					    mov o1.xy, v1
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 13 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SOURCE_GBUFFER" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mad o1.zw, v1.xxxy, cb0[3].xxxy, cb0[3].zzzw
					mov o1.xy, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _CameraDepthNormalsTexture;
					//   float4 _CameraDepthNormalsTexture_ST;
					//
					//
					// Registers:
					//
					//   Name                          Reg   Size
					//   ----------------------------- ----- ----
					//   _CameraDepthNormalsTexture_ST c0       1
					//   _CameraDepthNormalsTexture    s0       1
					//
					
					    ps_3_0
					    def c1, 3.55539989, 0, -1.77769995, 1
					    def c2, 2, -1, 1, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    mad r0.xy, v0, c0, c0.zwzw
					    texld r0, r0, s0
					    mad r0.xyz, r0, c1.xxyw, c1.zzww
					    dp3 r0.z, r0, r0
					    rcp r0.z, r0.z
					    add r0.w, r0.z, r0.z
					    mad r1.z, r0.z, c2.x, c2.y
					    mul r1.xy, r0, r0.w
					    mul oC0.xyz, r1, c2.zzyw
					    mov oC0.w, c1.w
					
					// approximately 10 instruction slots used (1 texture, 9 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 2
					mad r0.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					sample r0.xyzw, r0.xyxx, t0.xyzw, s0
					mad r0.xyz, r0.xyzx, l(3.555400, 3.555400, 0.000000, 0.000000), l(-1.777700, -1.777700, 1.000000, 0.000000)
					dp3 r0.z, r0.xyzx, r0.xyzx
					div r0.z, l(2.000000), r0.z
					mul r1.xy, r0.xyxx, r0.zzzz
					add r1.z, r0.z, l(-1.000000)
					mul o0.xyz, r1.xyzx, l(1.000000, 1.000000, -1.000000, 0.000000)
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d9 " {
					Keywords { "SOURCE_GBUFFER" }
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _CameraDepthNormalsTexture_ST;
					//   sampler2D _CameraGBufferTexture2;
					//   row_major float4x4 unity_WorldToCamera;
					//
					//
					// Registers:
					//
					//   Name                          Reg   Size
					//   ----------------------------- ----- ----
					//   unity_WorldToCamera           c0       3
					//   _CameraDepthNormalsTexture_ST c3       1
					//   _CameraGBufferTexture2        s0       1
					//
					
					    ps_3_0
					    def c4, 2, -1, 1, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    mad r0.xy, v0, c3, c3.zwzw
					    texld r0, r0, s0
					    mad r0.xyz, r0, c4.x, c4.y
					    dp3 oC0.x, c0, r0
					    dp3 oC0.y, c1, r0
					    dp3 oC0.z, c2, r0
					    mov oC0.w, c4.z
					
					// approximately 7 instruction slots used (1 texture, 6 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SOURCE_GBUFFER" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[17], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 2
					mad r0.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
					sample r0.xyzw, r0.xyxx, t0.xyzw, s0
					mad r0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
					mul r1.xyz, r0.yyyy, cb1[15].xyzx
					mad r0.xyw, cb1[14].xyxz, r0.xxxx, r1.xyxz
					mad o0.xyz, cb1[16].xyzx, r0.zzzz, r0.xywx
					mov o0.w, l(1.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 174527
			Program "vp" {
				SubProgram "d3d9 " {
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_ST         c8       1
					//
					
					    vs_3_0
					    def c9, 1, 0, 0, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    mad r0, v0.xyzx, c9.xxxy, c9.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mad o2.xy, v1, c8, c8.zwzw
					    mov o1.xy, v1
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 13 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mad o1.zw, v1.xxxy, cb0[3].xxxy, cb0[3].zzzw
					mov o1.xy, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _MainTex;
					//   float _Opacity;
					//
					//
					// Registers:
					//
					//   Name         Reg   Size
					//   ------------ ----- ----
					//   _Opacity     c0       1
					//   _MainTex     s0       1
					//
					
					    ps_3_0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    texld r0, v0, s0
					    mul oC0.xyz, r0, c0.x
					    mov oC0.w, r0.w
					
					// approximately 3 instruction slots used (1 texture, 2 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 1
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mul o0.xyz, r0.xyzx, cb0[7].yyyy
					mov o0.w, r0.w
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 208950
			Program "vp" {
				SubProgram "d3d9 " {
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_ST         c8       1
					//
					
					    vs_3_0
					    def c9, 1, 0, 0, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    mad r0, v0.xyzx, c9.xxxy, c9.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mad o2.xy, v1, c8, c8.zwzw
					    mov o1.xy, v1
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 13 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mad o1.zw, v1.xxxy, cb0[3].xxxy, cb0[3].zzzw
					mov o1.xy, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d9 " {
					Keywords { "UNITY_COLORSPACE_GAMMA" }
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_ST         c8       1
					//
					
					    vs_3_0
					    def c9, 1, 0, 0, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    mad r0, v0.xyzx, c9.xxxy, c9.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mad o2.xy, v1, c8, c8.zwzw
					    mov o1.xy, v1
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 13 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_COLORSPACE_GAMMA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mad o1.zw, v1.xxxy, cb0[3].xxxy, cb0[3].zzzw
					mov o1.xy, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float _Amplitude;
					//   sampler2D _CameraMotionVectorsTexture;
					//   sampler2D _MainTex;
					//   float _Opacity;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _Opacity                    c0       1
					//   _Amplitude                  c1       1
					//   _MainTex                    s0       1
					//   _CameraMotionVectorsTexture s1       1
					//
					
					    ps_3_0
					    def c2, 0.0208350997, -0.0851330012, 0.180141002, -0.330299497
					    def c3, 0.999866009, 0, 1, 3.14159274
					    def c4, -2, 1.57079637, 0.318309873, 1
					    def c5, 3, -3, -2, -4
					    def c6, 1, -1, 2, 0.416666657
					    def c7, 1.05499995, -0.0549999997, 0.305306017, 0.682171106
					    def c8, 0.0125228781, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    texld r0, v0, s1
					    mul r0.yz, r0.xxyw, c1.x
					    mov r0.xw, -r0.z
					    add r1.xy, -r0_abs, r0_abs.yxzw
					    cmp r1.xz, r1.x, r0_abs.xyyw, r0_abs.yyxw
					    cmp r1.y, r1.y, c3.y, c3.z
					    rcp r1.z, r1.z
					    mul r1.x, r1.z, r1.x
					    mul r1.z, r1.x, r1.x
					    mad r1.w, r1.z, c2.x, c2.y
					    mad r1.w, r1.z, r1.w, c2.z
					    mad r1.w, r1.z, r1.w, c2.w
					    mad r1.z, r1.z, r1.w, c3.x
					    mul r1.x, r1.z, r1.x
					    mad r1.z, r1.x, c4.x, c4.y
					    mad r1.x, r1.z, r1.y, r1.x
					    cmp r1.y, r0.x, -c3.y, -c3.w
					    add r1.x, r1.y, r1.x
					    add r1.y, r1.x, r1.x
					    add r0.z, r0.z, r0.y
					    cmp r0.xz, r0.z, r0.xyyw, r0.yyxw
					    dp2add r0.y, r0.ywzw, r0.ywzw, c3.y
					    rsq r0.y, r0.y
					    rcp_sat r0.y, r0.y
					    mul r0.y, r0.y, c0.x
					    cmp r0.z, r0.z, c3.z, c3.y
					    cmp r0.x, r0.x, c3.y, r0.z
					    mad r0.x, r0.x, -r1.y, r1.x
					    mad r0.x, r0.x, c4.z, c4.w
					    mad r0.xzw, r0.x, c5.x, c5.yyzw
					    mad_sat r0.xzw, r0_abs, c6.xyyy, c6.yyzz
					    texld r1, v0, s0
					    max_pp r2.xyz, r1, c3.y
					    mov oC0.w, r1.w
					    log_pp r1.x, r2.x
					    log_pp r1.y, r2.y
					    log_pp r1.z, r2.z
					    mul_pp r1.xyz, r1, c6.w
					    exp_pp r2.x, r1.x
					    exp_pp r2.y, r1.y
					    exp_pp r2.z, r1.z
					    mad_pp r1.xyz, r2, c7.x, c7.y
					    max_pp r2.xyz, r1, c3.y
					    lrp_pp r1.xyz, r0.y, r0.xzww, r2
					    mad_pp r0.xyz, r1, c7.z, c7.w
					    mad_pp r0.xyz, r1, r0, c8.x
					    mul_pp oC0.xyz, r0, r1
					
					// approximately 48 instruction slots used (2 texture, 46 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 2
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					mul r0.yz, r0.xxyx, cb0[7].zzzz
					mov r0.xw, -r0.zzzz
					max r1.x, |r0.x|, |r0.y|
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					min r1.y, |r0.x|, |r0.y|
					mul r1.x, r1.x, r1.y
					mul r1.y, r1.x, r1.x
					mad r1.z, r1.y, l(0.020835), l(-0.085133)
					mad r1.z, r1.y, r1.z, l(0.180141)
					mad r1.z, r1.y, r1.z, l(-0.330299)
					mad r1.y, r1.y, r1.z, l(0.999866)
					mul r1.z, r1.y, r1.x
					mad r1.z, r1.z, l(-2.000000), l(1.570796)
					lt r1.w, |r0.x|, |r0.y|
					and r1.z, r1.w, r1.z
					mad r1.x, r1.x, r1.y, r1.z
					lt r0.z, r0.x, r0.z
					and r0.z, r0.z, l(0xc0490fdb)
					add r0.z, r0.z, r1.x
					min r1.x, r0.x, r0.y
					lt r1.x, r1.x, -r1.x
					max r0.x, r0.x, r0.y
					dp2 r0.y, r0.ywyy, r0.ywyy
					sqrt_sat r0.y, r0.y
					mul r0.y, r0.y, cb0[7].y
					ge r0.x, r0.x, -r0.x
					and r0.x, r0.x, r1.x
					movc r0.x, r0.x, -r0.z, r0.z
					mad r0.x, r0.x, l(0.318310), l(1.000000)
					mad r0.xzw, r0.xxxx, l(3.000000, 0.000000, 3.000000, 3.000000), l(-3.000000, 0.000000, -2.000000, -4.000000)
					mad_sat r0.xzw, |r0.xxzw|, l(1.000000, 0.000000, -1.000000, -1.000000), l(-1.000000, 0.000000, 2.000000, 2.000000)
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mov o0.w, r1.w
					log r1.xyz, r1.xyzx
					mul r1.xyz, r1.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r1.xyz, r1.xyzx
					mad r1.xyz, r1.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r0.xzw, r0.xxzw, -r1.xxyz
					mad r0.xyz, r0.yyyy, r0.xzwx, r1.xyzx
					mad r1.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r1.xyz, r0.xyzx, r1.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul o0.xyz, r0.xyzx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d9 " {
					Keywords { "UNITY_COLORSPACE_GAMMA" }
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float _Amplitude;
					//   sampler2D _CameraMotionVectorsTexture;
					//   sampler2D _MainTex;
					//   float _Opacity;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _Opacity                    c0       1
					//   _Amplitude                  c1       1
					//   _MainTex                    s0       1
					//   _CameraMotionVectorsTexture s1       1
					//
					
					    ps_3_0
					    def c2, 0.0208350997, -0.0851330012, 0.180141002, -0.330299497
					    def c3, 0.999866009, 0, 1, 3.14159274
					    def c4, -2, 1.57079637, 0.318309873, 1
					    def c5, 3, -3, -2, -4
					    def c6, 1, -1, 2, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    texld r0, v0, s1
					    mul r0.yz, r0.xxyw, c1.x
					    mov r0.xw, -r0.z
					    add r1.xy, -r0_abs, r0_abs.yxzw
					    cmp r1.xz, r1.x, r0_abs.xyyw, r0_abs.yyxw
					    cmp r1.y, r1.y, c3.y, c3.z
					    rcp r1.z, r1.z
					    mul r1.x, r1.z, r1.x
					    mul r1.z, r1.x, r1.x
					    mad r1.w, r1.z, c2.x, c2.y
					    mad r1.w, r1.z, r1.w, c2.z
					    mad r1.w, r1.z, r1.w, c2.w
					    mad r1.z, r1.z, r1.w, c3.x
					    mul r1.x, r1.z, r1.x
					    mad r1.z, r1.x, c4.x, c4.y
					    mad r1.x, r1.z, r1.y, r1.x
					    cmp r1.y, r0.x, -c3.y, -c3.w
					    add r1.x, r1.y, r1.x
					    add r1.y, r1.x, r1.x
					    add r0.z, r0.z, r0.y
					    cmp r0.xz, r0.z, r0.xyyw, r0.yyxw
					    dp2add r0.y, r0.ywzw, r0.ywzw, c3.y
					    rsq r0.y, r0.y
					    rcp_sat r0.y, r0.y
					    mul r0.y, r0.y, c0.x
					    cmp r0.z, r0.z, c3.z, c3.y
					    cmp r0.x, r0.x, c3.y, r0.z
					    mad r0.x, r0.x, -r1.y, r1.x
					    mad r0.x, r0.x, c4.z, c4.w
					    mad r0.xzw, r0.x, c5.x, c5.yyzw
					    mad_sat r0.xzw, r0_abs, c6.xyyy, c6.yyzz
					    texld r1, v0, s0
					    add r0.xzw, r0, -r1.xyyz
					    mad oC0.xyz, r0.y, r0.xzww, r1
					    mov oC0.w, r1.w
					
					// approximately 36 instruction slots used (2 texture, 34 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_COLORSPACE_GAMMA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 2
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					mul r0.yz, r0.xxyx, cb0[7].zzzz
					mov r0.xw, -r0.zzzz
					max r1.x, |r0.x|, |r0.y|
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					min r1.y, |r0.x|, |r0.y|
					mul r1.x, r1.x, r1.y
					mul r1.y, r1.x, r1.x
					mad r1.z, r1.y, l(0.020835), l(-0.085133)
					mad r1.z, r1.y, r1.z, l(0.180141)
					mad r1.z, r1.y, r1.z, l(-0.330299)
					mad r1.y, r1.y, r1.z, l(0.999866)
					mul r1.z, r1.y, r1.x
					mad r1.z, r1.z, l(-2.000000), l(1.570796)
					lt r1.w, |r0.x|, |r0.y|
					and r1.z, r1.w, r1.z
					mad r1.x, r1.x, r1.y, r1.z
					lt r0.z, r0.x, r0.z
					and r0.z, r0.z, l(0xc0490fdb)
					add r0.z, r0.z, r1.x
					min r1.x, r0.x, r0.y
					lt r1.x, r1.x, -r1.x
					max r0.x, r0.x, r0.y
					dp2 r0.y, r0.ywyy, r0.ywyy
					sqrt_sat r0.y, r0.y
					mul r0.y, r0.y, cb0[7].y
					ge r0.x, r0.x, -r0.x
					and r0.x, r0.x, r1.x
					movc r0.x, r0.x, -r0.z, r0.z
					mad r0.x, r0.x, l(0.318310), l(1.000000)
					mad r0.xzw, r0.xxxx, l(3.000000, 0.000000, 3.000000, 3.000000), l(-3.000000, 0.000000, -2.000000, -4.000000)
					mad_sat r0.xzw, |r0.xxzw|, l(1.000000, 0.000000, -1.000000, -1.000000), l(-1.000000, 0.000000, 2.000000, 2.000000)
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					add r0.xzw, r0.xxzw, -r1.xxyz
					mad o0.xyz, r0.yyyy, r0.xzwx, r1.xyzx
					mov o0.w, r1.w
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Blend SrcAlpha OneMinusSrcAlpha, SrcAlpha OneMinusSrcAlpha
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 272815
			Program "vp" {
				SubProgram "d3d9 " {
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float _Amplitude;
					//   sampler2D _CameraMotionVectorsTexture;
					//   float _Opacity;
					//   float4 _Scale;
					//   float4 _ScreenParams;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _ScreenParams               c0       1
					//   _Opacity                    c1       1
					//   _Amplitude                  c2       1
					//   _Scale                      c3       1
					//   _CameraMotionVectorsTexture s0       1
					//
					
					    vs_3_0
					    def c4, 0.0208350997, -0.0851330012, -0.330299497, 0.999866009
					    def c5, 1, -1, 0, 0.180141002
					    def c6, -2, 1.57079637, -3.14159274, 0.300000012
					    def c7, 0.318309873, 1, -1, 2
					    def c8, 3, -3, -2, -4
					    def c9, 0.5, 1, 0.305306017, 0.682171106
					    def c10, 0.0125228781, 0, 0, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_2d s0
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_color o2
					    mov r0.yz, -v0_abs.x
					    mov r0.x, v0.x
					    mad r1, v1.xyxx, c5.xyzz, c5.zxzz
					    texldl r1, r1, s0
					    mul r1.xy, r1, c2.x
					    mul r2.xy, r1, r1
					    add r0.w, r2.y, r2.x
					    rsq r0.w, r0.w
					    rcp_sat r1.w, r0.w
					    mul r0.xyz, r0, r1.w
					    mul_sat o2.w, r1.w, c1.x
					    mul r0.xyz, r0, c6.w
					    mov r1.z, -r1.y
					    mul r2.xyz, r0.w, r1.zxzw
					    mul r0.yzw, r0.xxyz, r2.xxyz
					    mad r2.y, -r2.y, r0.x, r0.w
					    add r2.x, r0.z, r0.y
					    mul r0.xy, r2, c3
					    mul r2.xyz, -r1.yxyw, v0.zzyw
					    mad r3.x, r1.x, v0.y, r2.x
					    add r3.y, r2.z, r2.y
					    mad r0.xy, r3, c3, r0
					    mad r0.xy, v1, -c6.x, r0
					    mul r0.xy, r0, c0
					    mad r0.xy, r0, c9.x, c9.x
					    frc r0.zw, r0.xyxy
					    add r0.xy, -r0.zwzw, r0
					    add r0.zw, r0.xyxy, c9.x
					    mov o1.xy, r0
					    mov r0.y, c5.y
					    add r0.xy, r0.y, c0.zwzw
					    mul r0.xy, r0, r0.zwzw
					    mad r4.xy, r0, c7.w, c7.z
					    abs r0.x, -r1.y
					    max r0.y, r0.x, r1_abs.x
					    rcp r0.y, r0.y
					    min r0.z, r0.x, r1_abs.x
					    slt r0.x, r0.x, r1_abs.x
					    mul r0.y, r0.y, r0.z
					    mul r0.z, r0.y, r0.y
					    mad r0.w, r0.z, c4.x, c4.y
					    mad r0.w, r0.z, r0.w, c5.w
					    mad r0.w, r0.z, r0.w, c4.z
					    mad r0.z, r0.z, r0.w, c4.w
					    mul r0.y, r0.z, r0.y
					    mad r0.z, r0.y, c6.x, c6.y
					    mad r0.x, r0.z, r0.x, r0.y
					    slt r0.y, -r1.y, r1.y
					    mad r0.x, r0.y, c6.z, r0.x
					    add r0.y, r0.x, r0.x
					    min r0.z, -r1.y, r1.x
					    max r0.w, -r1.y, r1.x
					    sge r0.w, r0.w, -r0.w
					    slt r0.z, r0.z, -r0.z
					    mul r0.z, r0.w, r0.z
					    mad r0.x, r0.z, -r0.y, r0.x
					    mad r0.x, r0.x, c7.x, c7.y
					    mad r0.xyz, r0.x, c8.x, c8.yzww
					    mad_sat r0.xyz, r0_abs, c7.yzzw, c7.zwww
					    lrp r1.xyz, c9.x, c9.y, r0
					    mad r0.xyz, r1, c9.z, c9.w
					    mad r0.xyz, r1, r0, c10.x
					    mul_sat o2.xyz, r0, r1
					    mov r4.zw, c5.xyzx
					    mad o0.xy, r4.w, c255, r4
					    mov o0.zw, r4
					
					// approximately 67 instruction slots used (2 texture, 65 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// COLOR                    0   xyzw        2     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[9], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o2.xyzw
					dcl_temps 5
					mov r0.y, -|v0.x|
					mov r0.x, v0.x
					mad r0.zw, v1.xxxy, l(0.000000, 0.000000, 1.000000, -1.000000), l(0.000000, 0.000000, 0.000000, 1.000000)
					sample_l r1.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
					mul r1.xy, r1.xyxx, cb0[7].zzzz
					mov r1.zw, -r1.yyyy
					dp2 r0.z, r1.xzxx, r1.xzxx
					sqrt_sat r0.w, r0.z
					rsq r0.z, r0.z
					mul r2.xy, r0.zzzz, r1.xwxx
					dp2 r3.x, r1.xwxx, v0.yzyy
					mul r0.xy, r0.wwww, r0.xyxx
					mul_sat o2.w, r0.w, cb0[7].y
					mul r0.xy, r0.xyxx, l(0.300000, 0.300000, 0.000000, 0.000000)
					mov r2.z, -r2.x
					dp2 r4.y, r2.zyzz, r0.xyxx
					dp2 r4.x, r2.yxyy, r0.xyxx
					mul r0.xy, r4.xyxx, cb0[8].xyxx
					dp2 r3.y, -r1.yxyy, v0.yzyy
					mad r0.xy, r3.xyxx, cb0[8].xyxx, r0.xyxx
					mad r0.xy, v1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), r0.xyxx
					mul r0.xy, r0.xyxx, cb1[6].xyxx
					mul r0.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					round_ne r0.xy, r0.xyxx
					add r0.zw, r0.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
					mov o1.xy, r0.xyxx
					add r0.xy, cb1[6].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r0.xy, r0.xyxx, r0.zwzz
					mad o0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mov o0.zw, l(0,0,0,1.000000)
					mov r0.x, |r1.y|
					max r0.y, r0.x, |r1.x|
					div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
					min r0.z, r0.x, |r1.x|
					lt r0.x, r0.x, |r1.x|
					mul r0.y, r0.y, r0.z
					mul r0.z, r0.y, r0.y
					mad r0.w, r0.z, l(0.020835), l(-0.085133)
					mad r0.w, r0.z, r0.w, l(0.180141)
					mad r0.w, r0.z, r0.w, l(-0.330299)
					mad r0.z, r0.z, r0.w, l(0.999866)
					mul r0.w, r0.z, r0.y
					mad r0.w, r0.w, l(-2.000000), l(1.570796)
					and r0.x, r0.x, r0.w
					mad r0.x, r0.y, r0.z, r0.x
					lt r0.y, -r1.y, r1.y
					and r0.y, r0.y, l(0xc0490fdb)
					add r0.x, r0.y, r0.x
					min r0.y, -r1.y, r1.x
					max r0.z, -r1.y, r1.x
					ge r0.z, r0.z, -r0.z
					lt r0.y, r0.y, -r0.y
					and r0.y, r0.z, r0.y
					movc r0.x, r0.y, -r0.x, r0.x
					mad r0.x, r0.x, l(0.318310), l(1.000000)
					mad r0.xyz, r0.xxxx, l(3.000000, 3.000000, 3.000000, 0.000000), l(-3.000000, -2.000000, -4.000000, 0.000000)
					mad_sat r0.xyz, |r0.xyzx|, l(1.000000, -1.000000, -1.000000, 0.000000), l(-1.000000, 2.000000, 2.000000, 0.000000)
					add r1.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
					mad r0.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r0.xyzx
					mad r1.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r1.xyz, r0.xyzx, r1.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul_sat o2.xyz, r0.xyzx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					    ps_3_0
					    def c0, -0.5, 0, 1.41442716, 0.0125228781
					    def c1, 0.431833118, 0.682171106, 0, 0
					    dcl_texcoord v0.xy
					    dcl_color v1
					    frc r0.xy, v0
					    add r0.xy, r0, c0.x
					    dp2add r0.x, r0, r0, c0.y
					    rsq r0.x, r0.x
					    rcp r0.x, r0.x
					    mad r0.y, r0.x, c1.x, c1.y
					    mul r0.x, r0.x, c0.z
					    mad r0.y, r0.x, r0.y, c0.w
					    mul r0.x, r0.y, r0.x
					    mul oC0.w, r0.x, v1.w
					    mov oC0.xyz, v1
					
					// approximately 12 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// COLOR                    0   xyzw        2     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.xyzw
					dcl_output o0.xyzw
					dcl_temps 1
					frc r0.xy, v1.xyxx
					add r0.xy, r0.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
					dp2 r0.x, r0.xyxx, r0.xyxx
					sqrt r0.x, r0.x
					mad r0.y, r0.x, l(0.431833), l(0.682171)
					mul r0.x, r0.x, l(1.414427)
					mad r0.y, r0.x, r0.y, l(0.012523)
					mul r0.x, r0.y, r0.x
					mul o0.w, r0.x, v2.w
					mov o0.xyz, v2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
}