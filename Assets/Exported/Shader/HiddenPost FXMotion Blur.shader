Shader "Hidden/Post FX/Motion Blur" {
	Properties {
	}
	SubShader {
		Pass {
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 65333
			Program "vp" {
				SubProgram "d3d9 " {
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_ST         c8       1
					//
					
					    vs_3_0
					    def c9, 1, 0, 0, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    mad r0, v0.xyzx, c9.xxxy, c9.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mad o2.xy, v1, c8, c8.zwzw
					    mov o1.xy, v1
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 13 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mad o1.zw, v1.xxxy, cb0[3].xxxy, cb0[3].zzzw
					mov o1.xy, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _CameraDepthTexture;
					//   sampler2D _CameraMotionVectorsTexture;
					//   float4 _CameraMotionVectorsTexture_TexelSize;
					//   float _RcpMaxBlurRadius;
					//   float _VelocityScale;
					//   float4 _ZBufferParams;
					//   float4 unity_OrthoParams;
					//
					//
					// Registers:
					//
					//   Name                                  Reg   Size
					//   ------------------------------------- ----- ----
					//   _ZBufferParams                        c0       1
					//   unity_OrthoParams                     c1       1
					//   _CameraMotionVectorsTexture_TexelSize c2       1
					//   _VelocityScale                        c3       1
					//   _RcpMaxBlurRadius                     c4       1
					//   _CameraDepthTexture                   s0       1
					//   _CameraMotionVectorsTexture           s1       1
					//
					
					    ps_3_0
					    def c5, 0.5, 0, 1, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    mov r0.xz, c5
					    add r0.y, r0.z, -c1.w
					    texld r1, v0, s0
					    mul r0.w, r1.x, c0.x
					    mad r0.y, r0.y, r0.w, c0.y
					    mad r0.w, c1.w, -r0.w, r0.z
					    rcp r0.y, r0.y
					    mul_pp oC0.z, r0.y, r0.w
					    mul r0.x, r0.x, c3.x
					    mul r0.xy, r0.x, c2.zwzw
					    texld r1, v0, s1
					    mul r0.xy, r0, r1
					    dp2add r0.w, r0, r0, c5.y
					    rsq r0.w, r0.w
					    rcp r0.w, r0.w
					    mul r1.x, r0.w, c4.x
					    mad r0.w, r0.w, -c4.x, r0.z
					    rcp r1.x, r1.x
					    cmp r0.w, r0.w, c5.z, r1.x
					    mul r0.xy, r0.w, r0
					    mad r0.xy, r0, c4.x, r0.z
					    mul_pp oC0.xy, r0, c5.x
					    mov_pp oC0.w, c5.y
					
					// approximately 24 instruction slots used (2 texture, 22 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_constantbuffer CB1[9], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 2
					mul r0.x, cb0[6].x, l(0.500000)
					mul r0.xy, r0.xxxx, cb0[4].zwzz
					sample r1.xyzw, v1.xyxx, t0.xyzw, s1
					mul r0.xy, r0.xyxx, r1.xyxx
					dp2 r0.z, r0.xyxx, r0.xyxx
					sqrt r0.z, r0.z
					mul r0.z, r0.z, cb0[7].y
					max r0.z, r0.z, l(1.000000)
					div r0.xy, r0.xyxx, r0.zzzz
					mad r0.xy, r0.xyxx, cb0[7].yyyy, l(1.000000, 1.000000, 0.000000, 0.000000)
					mul o0.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					add r0.x, -cb1[8].w, l(1.000000)
					sample r1.xyzw, v1.xyxx, t1.xyzw, s0
					mul r0.y, r1.x, cb1[7].x
					mad r0.x, r0.x, r0.y, cb1[7].y
					mad r0.y, -cb1[8].w, r0.y, l(1.000000)
					div o0.z, r0.y, r0.x
					mov o0.w, l(0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 88610
			Program "vp" {
				SubProgram "d3d9 " {
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_ST         c8       1
					//
					
					    vs_3_0
					    def c9, 1, 0, 0, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    mad r0, v0.xyzx, c9.xxxy, c9.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mad o2.xy, v1, c8, c8.zwzw
					    mov o1.xy, v1
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 13 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mad o1.zw, v1.xxxy, cb0[3].xxxy, cb0[3].zzzw
					mov o1.xy, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _MainTex;
					//   float4 _MainTex_TexelSize;
					//   float _MaxBlurRadius;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   _MainTex_TexelSize c0       1
					//   _MaxBlurRadius     c1       1
					//   _MainTex           s0       1
					//
					
					    ps_3_0
					    def c2, -0.5, 0.5, 2, -1
					    def c3, 0, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    mov r0.xy, c2
					    mad r1, c0.xyxy, r0.xxyx, v0.xyxy
					    texld_pp r2, r1.zwzw, s0
					    texld_pp r1, r1, s0
					    mad_pp r0.zw, r1.xyxy, c2.z, c2.w
					    mul_pp r0.zw, r0, c1.x
					    mad_pp r1.xy, r2, c2.z, c2.w
					    mul_pp r1.xy, r1, c1.x
					    dp2add_pp r1.z, r1, r1, c3.x
					    dp2add r1.z, r0.zwzw, r0.zwzw, -r1.z
					    cmp_pp r0.zw, r1.z, r0, r1.xyxy
					    mad r1, c0.xyxy, r0.xyyy, v0.xyxy
					    texld_pp r2, r1, s0
					    texld_pp r1, r1.zwzw, s0
					    mad_pp r0.xy, r1, c2.z, c2.w
					    mul_pp r0.xy, r0, c1.x
					    mad_pp r1.xy, r2, c2.z, c2.w
					    mul_pp r1.xy, r1, c1.x
					    dp2add_pp r1.z, r1, r1, c3.x
					    dp2add r1.z, r0.zwzw, r0.zwzw, -r1.z
					    cmp_pp r0.zw, r1.z, r0, r1.xyxy
					    dp2add_pp r1.x, r0, r0, c3.x
					    dp2add r1.x, r0.zwzw, r0.zwzw, -r1.x
					    cmp_pp oC0.xy, r1.x, r0.zwzw, r0
					    mov_pp oC0.zw, c3.x
					
					// approximately 31 instruction slots used (4 texture, 27 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 3
					mad r0.xyzw, cb0[2].xyxy, l(-0.500000, -0.500000, 0.500000, -0.500000), v1.xyxy
					sample r1.xyzw, r0.xyxx, t0.xyzw, s0
					sample r0.xyzw, r0.zwzz, t0.xyzw, s0
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mad r0.zw, r1.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r0.xyzw, r0.xyzw, cb0[7].xxxx
					dp2 r1.x, r0.zwzz, r0.zwzz
					dp2 r1.y, r0.xyxx, r0.xyxx
					lt r1.x, r1.x, r1.y
					movc r0.xy, r1.xxxx, r0.xyxx, r0.zwzz
					dp2 r0.z, r0.xyxx, r0.xyxx
					mad r1.xyzw, cb0[2].xyxy, l(-0.500000, 0.500000, 0.500000, 0.500000), v1.xyxy
					sample r2.xyzw, r1.xyxx, t0.xyzw, s0
					sample r1.xyzw, r1.zwzz, t0.xyzw, s0
					mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mad r1.zw, r2.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
					mul r1.xyzw, r1.xyzw, cb0[7].xxxx
					dp2 r0.w, r1.zwzz, r1.zwzz
					lt r0.z, r0.z, r0.w
					movc r0.xy, r0.zzzz, r1.zwzz, r0.xyxx
					dp2 r0.z, r0.xyxx, r0.xyxx
					dp2 r0.w, r1.xyxx, r1.xyxx
					lt r0.z, r0.z, r0.w
					movc o0.xy, r0.zzzz, r1.xyxx, r0.xyxx
					mov o0.zw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 159453
			Program "vp" {
				SubProgram "d3d9 " {
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_ST         c8       1
					//
					
					    vs_3_0
					    def c9, 1, 0, 0, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    mad r0, v0.xyzx, c9.xxxy, c9.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mad o2.xy, v1, c8, c8.zwzw
					    mov o1.xy, v1
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 13 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mad o1.zw, v1.xxxy, cb0[3].xxxy, cb0[3].zzzw
					mov o1.xy, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _MainTex;
					//   float4 _MainTex_TexelSize;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   _MainTex_TexelSize c0       1
					//   _MainTex           s0       1
					//
					
					    ps_3_0
					    def c1, -0.5, 0.5, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    mov r0.xy, c1
					    mad r1, c0.xyxy, r0.xxyx, v0.xyxy
					    texld_pp r2, r1.zwzw, s0
					    texld_pp r1, r1, s0
					    dp2add_pp r0.z, r2, r2, c1.z
					    dp2add r0.z, r1, r1, -r0.z
					    cmp_pp r0.zw, r0.z, r1.xyxy, r2.xyxy
					    mad r1, c0.xyxy, r0.xyyy, v0.xyxy
					    texld_pp r2, r1, s0
					    texld_pp r1, r1.zwzw, s0
					    dp2add_pp r0.x, r2, r2, c1.z
					    dp2add r0.x, r0.zwzw, r0.zwzw, -r0.x
					    cmp_pp r0.xy, r0.x, r0.zwzw, r2
					    dp2add_pp r0.z, r1, r1, c1.z
					    dp2add r0.z, r0, r0, -r0.z
					    cmp_pp oC0.xy, r0.z, r0, r1
					    mov_pp oC0.zw, c1.z
					
					// approximately 23 instruction slots used (4 texture, 19 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 3
					mad r0.xyzw, cb0[2].xyxy, l(-0.500000, -0.500000, 0.500000, -0.500000), v1.xyxy
					sample r1.xyzw, r0.xyxx, t0.xyzw, s0
					sample r0.xyzw, r0.zwzz, t0.xyzw, s0
					dp2 r0.z, r1.xyxx, r1.xyxx
					dp2 r0.w, r0.xyxx, r0.xyxx
					lt r0.z, r0.z, r0.w
					movc r0.xy, r0.zzzz, r0.xyxx, r1.xyxx
					dp2 r0.z, r0.xyxx, r0.xyxx
					mad r1.xyzw, cb0[2].xyxy, l(-0.500000, 0.500000, 0.500000, 0.500000), v1.xyxy
					sample r2.xyzw, r1.xyxx, t0.xyzw, s0
					sample r1.xyzw, r1.zwzz, t0.xyzw, s0
					dp2 r0.w, r2.xyxx, r2.xyxx
					lt r0.z, r0.z, r0.w
					movc r0.xy, r0.zzzz, r2.xyxx, r0.xyxx
					dp2 r0.z, r0.xyxx, r0.xyxx
					dp2 r0.w, r1.xyxx, r1.xyxx
					lt r0.z, r0.z, r0.w
					movc o0.xy, r0.zzzz, r1.xyxx, r0.xyxx
					mov o0.zw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 245116
			Program "vp" {
				SubProgram "d3d9 " {
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_ST         c8       1
					//
					
					    vs_3_0
					    def c9, 1, 0, 0, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    mad r0, v0.xyzx, c9.xxxy, c9.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mad o2.xy, v1, c8, c8.zwzw
					    mov o1.xy, v1
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 13 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mad o1.zw, v1.xxxy, cb0[3].xxxy, cb0[3].zzzw
					mov o1.xy, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _MainTex;
					//   float4 _MainTex_TexelSize;
					//   int _TileMaxLoop;
					//   float2 _TileMaxOffs;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   _TileMaxLoop       i0       1
					//   _MainTex_TexelSize c0       1
					//   _TileMaxOffs       c1       1
					//   _MainTex           s0       1
					//
					
					    ps_3_0
					    def c2, 1, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    mov r0.xy, c0
					    mad r0.zw, r0.xyxy, c1.xyxy, v0.xyxy
					    mul r1.xy, r0.x, c2
					    mul r0.xy, r0, c2.yxzw
					    mov_pp r1.zw, c2.y
					    mov r2.x, c2.y
					    rep i0
					      mad r2.yz, r1.xxyw, r2.x, r0.xzww
					      mov_pp r3.xy, r1.zwzw
					      mov r2.w, c2.y
					      rep i0
					        mad r3.zw, r0.xyxy, r2.w, r2.xyyz
					        texld_pp r4, r3.zwzw, s0
					        dp2add_pp r3.z, r4, r4, c2.y
					        dp2add r3.z, r3, r3, -r3.z
					        cmp_pp r3.xy, r3.z, r3, r4
					        add r2.w, r2.w, c2.x
					      endrep
					      mov_pp r1.zw, r3.xyxy
					      add r2.x, r2.x, c2.x
					    endrep
					    mov_pp oC0.xy, r1.zwzw
					    mov_pp oC0.zw, c2.y
					
					// approximately 31 instruction slots used (1 texture, 30 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 5
					mad r0.xy, cb0[2].xyxx, cb0[6].zwzz, v1.xyxx
					mov r1.yz, l(0,0,0,0)
					mov r1.xw, cb0[2].xxxy
					mov r0.zw, l(0,0,0,0)
					mov r2.x, l(0)
					loop 
					  ige r2.y, r2.x, cb0[6].y
					  breakc_nz r2.y
					  itof r2.y, r2.x
					  mad r2.yz, r1.xxyx, r2.yyyy, r0.xxyx
					  mov r3.xy, r0.zwzz
					  mov r2.w, l(0)
					  loop 
					    ige r3.z, r2.w, cb0[6].y
					    breakc_nz r3.z
					    itof r3.z, r2.w
					    mad r3.zw, r1.zzzw, r3.zzzz, r2.yyyz
					    sample r4.xyzw, r3.zwzz, t0.xyzw, s0
					    dp2 r3.z, r3.xyxx, r3.xyxx
					    dp2 r3.w, r4.xyxx, r4.xyxx
					    lt r3.z, r3.z, r3.w
					    movc r3.xy, r3.zzzz, r4.xyxx, r3.xyxx
					    iadd r2.w, r2.w, l(1)
					  endloop 
					  mov r0.zw, r3.xxxy
					  iadd r2.x, r2.x, l(1)
					endloop 
					mov o0.xy, r0.zwzz
					mov o0.zw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 278035
			Program "vp" {
				SubProgram "d3d9 " {
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_ST         c8       1
					//
					
					    vs_3_0
					    def c9, 1, 0, 0, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    mad r0, v0.xyzx, c9.xxxy, c9.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mad o2.xy, v1, c8, c8.zwzw
					    mov o1.xy, v1
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 13 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mad o1.zw, v1.xxxy, cb0[3].xxxy, cb0[3].zzzw
					mov o1.xy, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _MainTex;
					//   float4 _MainTex_TexelSize;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   _MainTex_TexelSize c0       1
					//   _MainTex           s0       1
					//
					
					    ps_3_0
					    def c1, 1, 0, -1, 1.00999999
					    def c2, 0.990099013, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    mov r0.xyz, c1
					    mad r1, c0.yyxy, r0.yxxx, v0.xyxy
					    texld_pp r2, r1.zwzw, s0
					    texld_pp r1, r1, s0
					    dp2add_pp r0.w, r2, r2, c1.y
					    dp2add r0.w, r1, r1, -r0.w
					    cmp_pp r1.xy, r0.w, r1, r2
					    dp2add_pp r0.w, r1, r1, c1.y
					    mad r2, c0.xyxy, r0.xyzx, v0.xyxy
					    texld_pp r3, r2.zwzw, s0
					    texld_pp r2, r2, s0
					    dp2add r0.w, r3, r3, -r0.w
					    cmp_pp r1.xy, r0.w, r3, r1
					    dp2add_pp r0.w, r1, r1, c1.y
					    dp2add_pp r1.z, r2, r2, c1.y
					    texld r3, v0, s0
					    mul_pp r2.zw, r3.xyxy, c1.w
					    dp2add r1.z, r2.zwzw, r2.zwzw, -r1.z
					    cmp_pp r1.zw, r1.z, r2, r2.xyxy
					    dp2add_pp r2.x, r1.zwzw, r1.zwzw, c1.y
					    mad r3, c0.xyxy, -r0.zxxy, v0.xyxy
					    texld_pp r4, r3.zwzw, s0
					    texld_pp r3, r3, s0
					    dp2add r0.z, r4, r4, -r2.x
					    cmp_pp r1.zw, r0.z, r4.xyxy, r1
					    dp2add r0.z, r1.zwzw, r1.zwzw, -r0.w
					    cmp_pp r0.zw, r0.z, r1, r1.xyxy
					    dp2add_pp r1.x, r0.zwzw, r0.zwzw, c1.y
					    dp2add_pp r1.y, r3, r3, c1.y
					    mad r2, c0.xyyy, -r0.xxyx, v0.xyxy
					    texld_pp r4, r2.zwzw, s0
					    texld_pp r2, r2, s0
					    dp2add r0.x, r4, r4, -r1.y
					    cmp_pp r0.xy, r0.x, r4, r3
					    dp2add_pp r1.y, r0, r0, c1.y
					    dp2add r1.y, r2, r2, -r1.y
					    cmp_pp r0.xy, r1.y, r2, r0
					    dp2add r1.x, r0, r0, -r1.x
					    cmp_pp r0.xy, r1.x, r0, r0.zwzw
					    mul_pp oC0.xy, r0, c2.x
					    mov_pp oC0.zw, c1.y
					
					// approximately 57 instruction slots used (9 texture, 48 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 4
					mad r0.xyzw, cb0[2].yyxy, l(0.000000, 1.000000, 1.000000, 1.000000), v1.xyxy
					sample r1.xyzw, r0.xyxx, t0.xyzw, s0
					sample r0.xyzw, r0.zwzz, t0.xyzw, s0
					dp2 r0.z, r1.xyxx, r1.xyxx
					dp2 r0.w, r0.xyxx, r0.xyxx
					lt r0.z, r0.z, r0.w
					movc r0.xy, r0.zzzz, r0.xyxx, r1.xyxx
					dp2 r0.z, r0.xyxx, r0.xyxx
					mad r1.xyzw, cb0[2].xyxy, l(1.000000, 0.000000, -1.000000, 1.000000), v1.xyxy
					sample r2.xyzw, r1.zwzz, t0.xyzw, s0
					sample r1.xyzw, r1.xyxx, t0.xyzw, s0
					dp2 r0.w, r2.xyxx, r2.xyxx
					lt r0.z, r0.w, r0.z
					movc r0.xy, r0.zzzz, r0.xyxx, r2.xyxx
					dp2 r0.z, r0.xyxx, r0.xyxx
					dp2 r0.w, r1.xyxx, r1.xyxx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s0
					mul r1.zw, r2.xxxy, l(0.000000, 0.000000, 1.010000, 1.010000)
					dp2 r2.x, r1.zwzz, r1.zwzz
					lt r0.w, r2.x, r0.w
					movc r1.xy, r0.wwww, r1.xyxx, r1.zwzz
					dp2 r0.w, r1.xyxx, r1.xyxx
					mad r2.xyzw, -cb0[2].xyxy, l(-1.000000, 1.000000, 1.000000, 0.000000), v1.xyxy
					sample r3.xyzw, r2.zwzz, t0.xyzw, s0
					sample r2.xyzw, r2.xyxx, t0.xyzw, s0
					dp2 r1.z, r3.xyxx, r3.xyxx
					lt r0.w, r1.z, r0.w
					movc r1.xy, r0.wwww, r1.xyxx, r3.xyxx
					dp2 r0.w, r1.xyxx, r1.xyxx
					lt r0.z, r0.w, r0.z
					movc r0.xy, r0.zzzz, r0.xyxx, r1.xyxx
					dp2 r0.z, r0.xyxx, r0.xyxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					mad r1.xyzw, -cb0[2].xyyy, l(1.000000, 1.000000, 0.000000, 1.000000), v1.xyxy
					sample r3.xyzw, r1.zwzz, t0.xyzw, s0
					sample r1.xyzw, r1.xyxx, t0.xyzw, s0
					dp2 r1.z, r3.xyxx, r3.xyxx
					lt r0.w, r1.z, r0.w
					movc r1.zw, r0.wwww, r2.xxxy, r3.xxxy
					dp2 r0.w, r1.zwzz, r1.zwzz
					dp2 r2.x, r1.xyxx, r1.xyxx
					lt r0.w, r2.x, r0.w
					movc r1.xy, r0.wwww, r1.zwzz, r1.xyxx
					dp2 r0.w, r1.xyxx, r1.xyxx
					lt r0.z, r0.w, r0.z
					movc r0.xy, r0.zzzz, r0.xyxx, r1.xyxx
					mul o0.xy, r0.xyxx, l(0.990099, 0.990099, 0.000000, 0.000000)
					mov o0.zw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 358164
			Program "vp" {
				SubProgram "d3d9 " {
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_TexelSize;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_TexelSize  c8       1
					//
					
					    vs_3_0
					    def c9, 1, 0, -2, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    mad r0, v0.xyzx, c9.xxxy, c9.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mov r0.y, c9.y
					    slt r0.x, c8.y, r0.y
					    mad r0.y, v1.y, c9.z, c9.x
					    mad o2.y, r0.x, r0.y, v1.y
					    mov o1.xy, v1
					    mov o2.x, v1.x
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 17 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.w, r0.x, r0.y, v1.y
					mov o1.xyz, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float _LoopCount;
					//   sampler2D _MainTex;
					//   float4 _MainTex_TexelSize;
					//   float _MaxBlurRadius;
					//   sampler2D _NeighborMaxTex;
					//   float2 _NeighborMaxTex_TexelSize;
					//   float4 _ScreenParams;
					//   sampler2D _VelocityTex;
					//   float2 _VelocityTex_TexelSize;
					//
					//
					// Registers:
					//
					//   Name                      Reg   Size
					//   ------------------------- ----- ----
					//   _ScreenParams             c0       1
					//   _MainTex_TexelSize        c1       1
					//   _VelocityTex_TexelSize    c2       1
					//   _NeighborMaxTex_TexelSize c3       1
					//   _MaxBlurRadius            c4       1
					//   _LoopCount                c5       1
					//   _MainTex                  s0       1
					//   _VelocityTex              s1       1
					//   _NeighborMaxTex           s2       1
					//
					
					    ps_3_0
					    def c6, 2, 0, 0.0671105608, 0.00583714992
					    def c7, 52.9829178, 0.5, 6.28318548, -3.14159274
					    def c8, 0.25, 1, 0, -2
					    def c9, 0.499000013, 20, 1.20000005, 0
					    def c10, 0.5, 1, 0, 0.25
					    def c11, 1, 0, 1.20000005, 0
					    defi i0, 255, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_texcoord1 v1.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    texld_pp r0, v0, s0
					    add r1.xy, c6, v1
					    mul r1.xy, r1, c0
					    frc r1.zw, r1.xyxy
					    add r1.xy, -r1.zwzw, r1
					    dp2add r1.x, c6.zwzw, r1, c6.y
					    frc r1.x, r1.x
					    mul r1.x, r1.x, c7.x
					    frc r1.x, r1.x
					    add r1.x, r1.x, c7.y
					    frc r1.x, r1.x
					    mad r1.x, r1.x, c7.z, c7.w
					    sincos r2.xy, r1.x
					    mul r1.xy, r2, c3
					    mad r1.xy, r1, c8.x, v1
					    texld_pp r1, r1, s2
					    dp2add_pp r1.z, r1, r1, c6.y
					    rsq_pp r1.z, r1.z
					    rcp_pp r1.z, r1.z
					    if_lt r1.z, c6.x
					    else
					      mul r2, c8.yyzz, v1.xyxx
					      texldl_pp r2, r2, s1
					      mad_pp r2.xy, r2, -c8.w, -c8.y
					      mul_pp r2.xy, r2, c4.x
					      dp2add_pp r1.w, r2, r2, c6.y
					      rsq_pp r1.w, r1.w
					      rcp_pp r1.w, r1.w
					      max_pp r3.xy, r1.w, c10
					      rcp_pp r1.w, r2.z
					      mad r2.w, r3.x, -c6.x, r1.z
					      rcp r3.x, r3.x
					      mul_pp r3.x, r1.z, r3.x
					      mul_pp r2.xy, r2, r3.x
					      cmp_pp r2.xy, r2.w, r1, r2
					      mul_pp r2.w, r1.z, c7.y
					      min_pp r3.x, r2.w, c5.x
					      frc_pp r2.w, r3.x
					      add_pp r2.w, -r2.w, r3.x
					      rcp_pp r3.x, r2.w
					      mul r3.zw, c0.xyxy, v0.xyxy
					      frc r4.xy, r3.zwzw
					      add r3.zw, r3, -r4.xyxy
					      dp2add r3.z, c6.zwzw, r3.zwzw, c6.y
					      frc r3.z, r3.z
					      mul r3.z, r3.z, c7.x
					      frc r3.z, r3.z
					      add r3.z, r3.z, -c7.y
					      mul_pp r3.w, r3.x, c8.x
					      mad_pp r4.x, r3.x, -c10.x, c10.y
					      mov r5.zw, c6.y
					      mov r6.zw, c6.y
					      mov_pp r7, c6.y
					      mov_pp r4.y, r4.x
					      mov_pp r4.z, c6.y
					      mov_pp r4.w, r3.y
					      rep i0
					        mov r8.x, r3.w
					        break_ge r8.x, r4.y
					        mul_pp r8.xy, r4.z, c10.wxzw
					        frc_pp r8.xy, r8
					        add r8.xy, -r8, c9.x
					        cmp_pp r8.xz, r8.x, r1.xyyw, r2.xyyw
					        cmp_pp r8.w, r8.y, r4.y, -r4.y
					        mad_pp r8.w, r3.z, r3.x, r8.w
					        mul r8.xz, r8.w, r8
					        mad r5.xy, r8.xzzw, c1, v0
					        mad r6.xy, r8.xzzw, c2, v1
					        texldl_pp r9, r5, s0
					        texldl_pp r10, r6, s1
					        mad_pp r5.xy, r10, -c8.w, -c8.y
					        mul_pp r5.xy, r5, c4.x
					        add_pp r6.x, r2.z, -r10.z
					        mul_pp r6.x, r1.w, r6.x
					        mul_sat_pp r6.x, r6.x, c9.y
					        dp2add_pp r5.x, r5, r5, c6.y
					        rsq_pp r5.x, r5.x
					        rcp_pp r5.x, r5.x
					        lrp_pp r8.x, r6.x, r5.x, r4.w
					        mad_sat_pp r5.x, r1.z, -r8_abs.w, r8.x
					        rcp r5.y, r8.x
					        mul_pp r5.x, r5.y, r5.x
					        add_pp r5.y, -r4.y, c9.z
					        mul_pp r5.x, r5.y, r5.x
					        mad_pp r9, r9.xyzx, c8.yyyz, c8.zzzy
					        mad_pp r7, r9, r5.x, r7
					        max_pp r5.x, r4.w, r8.x
					        add_pp r5.y, -r3.x, r4.y
					        cmp_pp r4.y, r8.y, r4.y, r5.y
					        add_pp r4.z, r4.z, c8.y
					        mov_pp r4.w, r5.x
					      endrep
					      dp2add_pp r1.x, r4.w, r2.w, c6.y
					      rcp r1.w, r1.x
					      mad_pp r2, r0.xyzx, c11.xxxy, c11.yyyz
					      mul r1.xyz, r1.w, c9.z
					      mad_pp r1, r2, r1, r7
					      rcp r1.w, r1.w
					      mul_pp r0.xyz, r1.w, r1
					    endif
					    mov_pp oC0, r0
					
					// approximately 124 instruction slots used (8 texture, 116 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v1.zw
					dcl_output o0.xyzw
					dcl_temps 10
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					add r1.xy, v1.zwzz, l(2.000000, 0.000000, 0.000000, 0.000000)
					mul r1.xy, r1.xyxx, cb1[6].xyxx
					round_ni r1.xy, r1.xyxx
					dp2 r1.x, l(0.067111, 0.005837, 0.000000, 0.000000), r1.xyxx
					frc r1.x, r1.x
					mul r1.x, r1.x, l(52.982918)
					frc r1.x, r1.x
					mul r1.x, r1.x, l(6.283185)
					sincos r1.x, r2.x, r1.x
					mov r2.y, r1.x
					mul r1.xy, r2.xyxx, cb0[5].zwzz
					mad r1.xy, r1.xyxx, l(0.250000, 0.250000, 0.000000, 0.000000), v1.zwzz
					sample r1.xyzw, r1.xyxx, t2.xyzw, s2
					dp2 r1.z, r1.xyxx, r1.xyxx
					sqrt r1.z, r1.z
					lt r1.w, r1.z, l(2.000000)
					if_nz r1.w
					  mov o0.xyzw, r0.xyzw
					  ret 
					endif 
					sample_l r2.xyzw, v1.zwzz, t1.xyzw, s1, l(0.000000)
					mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					mul r2.xy, r2.xyxx, cb0[7].xxxx
					dp2 r1.w, r2.xyxx, r2.xyxx
					sqrt r1.w, r1.w
					max r3.xy, r1.wwww, l(0.500000, 1.000000, 0.000000, 0.000000)
					div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.z
					add r2.w, r3.x, r3.x
					lt r2.w, r1.z, r2.w
					div r3.x, r1.z, r3.x
					mul r2.xy, r2.xyxx, r3.xxxx
					movc r2.xy, r2.wwww, r2.xyxx, r1.xyxx
					mul r2.w, r1.z, l(0.500000)
					min r2.w, r2.w, cb0[7].z
					round_ni r2.w, r2.w
					div r3.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
					mul r3.zw, v1.xxxy, cb1[6].xxxy
					round_ni r3.zw, r3.zzzw
					dp2 r3.z, l(0.067111, 0.005837, 0.000000, 0.000000), r3.zwzz
					frc r3.z, r3.z
					mul r3.zw, r3.zzzx, l(0.000000, 0.000000, 52.982918, 0.250000)
					frc r3.z, r3.z
					add r3.z, r3.z, l(-0.500000)
					mad r4.x, -r3.x, l(0.500000), l(1.000000)
					mov r5.w, l(1.000000)
					mov r6.xyzw, l(0,0,0,0)
					mov r4.y, r4.x
					mov r4.z, l(0)
					mov r4.w, r3.y
					loop 
					  ge r7.x, r3.w, r4.y
					  breakc_nz r7.x
					  mul r7.xy, r4.zzzz, l(0.250000, 0.500000, 0.000000, 0.000000)
					  frc r7.xy, r7.xyxx
					  lt r7.xy, l(0.499000, 0.499000, 0.000000, 0.000000), r7.xyxx
					  movc r7.xz, r7.xxxx, r2.xxyx, r1.xxyx
					  movc r7.w, r7.y, -r4.y, r4.y
					  mad r7.w, r3.z, r3.x, r7.w
					  mul r7.xz, r7.wwww, r7.xxzx
					  mad r8.xy, r7.xzxx, cb0[2].xyxx, v1.xyxx
					  mad r7.xz, r7.xxzx, cb0[5].xxyx, v1.zzwz
					  sample_l r8.xyzw, r8.xyxx, t0.xyzw, s0, l(0.000000)
					  sample_l r9.xyzw, r7.xzxx, t1.xyzw, s1, l(0.000000)
					  mad r7.xz, r9.xxyx, l(2.000000, 0.000000, 2.000000, 0.000000), l(-1.000000, 0.000000, -1.000000, 0.000000)
					  mul r7.xz, r7.xxzx, cb0[7].xxxx
					  add r8.w, r2.z, -r9.z
					  mul r8.w, r1.w, r8.w
					  mul_sat r8.w, r8.w, l(20.000000)
					  dp2 r7.x, r7.xzxx, r7.xzxx
					  sqrt r7.x, r7.x
					  add r7.x, -r4.w, r7.x
					  mad r7.x, r8.w, r7.x, r4.w
					  mad_sat r7.z, -r1.z, |r7.w|, r7.x
					  div r7.z, r7.z, r7.x
					  add r7.w, -r4.y, l(1.200000)
					  mul r7.z, r7.w, r7.z
					  mov r5.xyz, r8.xyzx
					  mad r6.xyzw, r5.xyzw, r7.zzzz, r6.xyzw
					  max r4.w, r4.w, r7.x
					  add r5.x, -r3.x, r4.y
					  movc r4.y, r7.y, r5.x, r4.y
					  add r4.z, r4.z, l(1.000000)
					endloop 
					dp2 r1.x, r4.wwww, r2.wwww
					div r1.x, l(1.200000), r1.x
					mov r2.xyz, r0.xyzx
					mov r2.w, l(1.000000)
					mad r1.xyzw, r2.xyzw, r1.xxxx, r6.xyzw
					div o0.xyz, r1.xyzx, r1.wwww
					mov o0.w, r0.w
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 396106
			Program "vp" {
				SubProgram "d3d9 " {
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					    vs_3_0
					    def c0, 1, -1, 0, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    mad o1.xy, v1, c0, c0.zxzw
					    mov r0, v0
					    mov o2.xy, c0.z
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 5 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_input v0.xyzw
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					mov o0.xyzw, v0.xyzw
					mad o1.xy, v1.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000), l(0.000000, 1.000000, 0.000000, 0.000000)
					mov o1.zw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d9 " {
					Keywords { "UNITY_COLORSPACE_GAMMA" }
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					    vs_3_0
					    def c0, 1, -1, 0, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    mad o1.xy, v1, c0, c0.zxzw
					    mov r0, v0
					    mov o2.xy, c0.z
					    mad o0.xy, r0.w, c255, r0
					    mov o0.zw, r0
					
					// approximately 5 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_COLORSPACE_GAMMA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_input v0.xyzw
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					mov o0.xyzw, v0.xyzw
					mad o1.xy, v1.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000), l(0.000000, 1.000000, 0.000000, 0.000000)
					mov o1.zw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _MainTex;
					//   float4 _ScreenParams;
					//
					//
					// Registers:
					//
					//   Name          Reg   Size
					//   ------------- ----- ----
					//   _ScreenParams c0       1
					//   _MainTex      s0       1
					//
					
					    ps_3_0
					    def c1, -1, 0.5, 2, 1
					    def c2, 0, 0.416666657, 1.05499995, -0.0549999997
					    def c3, 0.298999995, 0.587000012, 0.114, 0
					    def c4, -0.168735996, -0.331263989, 0.5, 0
					    def c5, 0.5, -0.418687999, -0.0813120008, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    texld_pp r0, v0, s0
					    max_pp r1.xyz, r0, c2.x
					    log_pp r0.x, r1.x
					    log_pp r0.y, r1.y
					    log_pp r0.z, r1.z
					    mul_pp r0.xyz, r0, c2.y
					    exp_pp r1.x, r0.x
					    exp_pp r1.y, r0.y
					    exp_pp r1.z, r0.z
					    mad_pp r0.xyz, r1, c2.z, c2.w
					    max_pp r1.xyz, r0, c2.x
					    dp3_pp oC0, c3, r1
					    mul r0.x, c0.x, v0.x
					    mul r0.x, r0.x, c1.y
					    frc r0.y, r0.x
					    add r0.x, -r0.y, r0.x
					    add r0.y, -r0.y, c1.y
					    mov r1.xyz, c4
					    cmp_pp r0.yzw, r0.y, r1.xxyz, c5.xxyz
					    mad r0.x, r0.x, c1.z, c1.w
					    mov r1.x, c1.x
					    add r1.x, r1.x, c0.z
					    mul r1.x, r0.x, r1.x
					    mov r1.y, v0.y
					    texld_pp r1, r1, s0
					    max_pp r2.xyz, r1, c2.x
					    log_pp r1.x, r2.x
					    log_pp r1.y, r2.y
					    log_pp r1.z, r2.z
					    mul_pp r1.xyz, r1, c2.y
					    exp_pp r2.x, r1.x
					    exp_pp r2.y, r1.y
					    exp_pp r2.z, r1.z
					    mad_pp r1.xyz, r2, c2.z, c2.w
					    max_pp r2.xyz, r1, c2.x
					    dp3_pp r0.x, r0.yzww, r2
					    add_pp oC1, r0.x, c1.y
					
					// approximately 37 instruction slots used (2 texture, 35 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_temps 2
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r0.xyz, r0.xyzx
					mul r0.xyz, r0.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r0.xyz, r0.xyzx
					mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					dp3 o0.xyzw, l(0.299000, 0.587000, 0.114000, 0.000000), r0.xyzx
					mul r0.x, v1.x, cb0[6].x
					mul r0.x, r0.x, l(0.500000)
					round_ni r0.y, r0.x
					frc r0.x, r0.x
					lt r0.x, l(0.500000), r0.x
					movc r0.xzw, r0.xxxx, l(0.500000,0,-0.418688,-0.081312), l(-0.168736,0,-0.331264,0.500000)
					mad r0.y, r0.y, l(2.000000), l(1.000000)
					add r1.x, cb0[6].z, l(-1.000000)
					mul r1.x, r0.y, r1.x
					mov r1.y, v1.y
					sample r1.xyzw, r1.xyxx, t0.xyzw, s0
					max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r1.xyz, r1.xyzx
					mul r1.xyz, r1.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r1.xyz, r1.xyzx
					mad r1.xyz, r1.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					dp3 r0.x, r0.xzwx, r1.xyzx
					add o1.xyzw, r0.xxxx, l(0.500000, 0.500000, 0.500000, 0.500000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d9 " {
					Keywords { "UNITY_COLORSPACE_GAMMA" }
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _MainTex;
					//   float4 _ScreenParams;
					//
					//
					// Registers:
					//
					//   Name          Reg   Size
					//   ------------- ----- ----
					//   _ScreenParams c0       1
					//   _MainTex      s0       1
					//
					
					    ps_3_0
					    def c1, -1, 0.5, 2, 1
					    def c2, 0.298999995, 0.587000012, 0.114, 0
					    def c3, -0.168735996, -0.331263989, 0.5, 0
					    def c4, 0.5, -0.418687999, -0.0813120008, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    texld_pp r0, v0, s0
					    dp3_pp oC0, c2, r0
					    mul r0.x, c0.x, v0.x
					    mul r0.x, r0.x, c1.y
					    frc r0.y, r0.x
					    add r0.x, -r0.y, r0.x
					    add r0.y, -r0.y, c1.y
					    mov r1.xyz, c3
					    cmp_pp r0.yzw, r0.y, r1.xxyz, c4.xxyz
					    mad r0.x, r0.x, c1.z, c1.w
					    mov r1.x, c1.x
					    add r1.x, r1.x, c0.z
					    mul r1.x, r0.x, r1.x
					    mov r1.y, v0.y
					    texld_pp r1, r1, s0
					    dp3_pp r0.x, r0.yzww, r1
					    add_pp oC1, r0.x, c1.y
					
					// approximately 17 instruction slots used (2 texture, 15 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_COLORSPACE_GAMMA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_temps 2
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					dp3 o0.xyzw, l(0.299000, 0.587000, 0.114000, 0.000000), r0.xyzx
					mul r0.x, v1.x, cb0[6].x
					mul r0.x, r0.x, l(0.500000)
					round_ni r0.y, r0.x
					frc r0.x, r0.x
					lt r0.x, l(0.500000), r0.x
					movc r0.xzw, r0.xxxx, l(0.500000,0,-0.418688,-0.081312), l(-0.168736,0,-0.331264,0.500000)
					mad r0.y, r0.y, l(2.000000), l(1.000000)
					add r1.x, cb0[6].z, l(-1.000000)
					mul r1.x, r0.y, r1.x
					mov r1.y, v1.y
					sample r1.xyzw, r1.xyxx, t0.xyzw, s0
					dp3 r0.x, r0.xzwx, r1.xyzx
					add o1.xyzw, r0.xxxx, l(0.500000, 0.500000, 0.500000, 0.500000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 484791
			Program "vp" {
				SubProgram "d3d9 " {
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_TexelSize;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_TexelSize  c8       1
					//
					
					    vs_3_0
					    def c9, 1, 0, -2, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    mad r0, v0.xyzx, c9.xxxy, c9.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mov r0.y, c9.y
					    slt r0.x, c8.y, r0.y
					    mad r0.y, v1.y, c9.z, c9.x
					    mad o2.y, r0.x, r0.y, v1.y
					    mov o1.xy, v1
					    mov o2.x, v1.x
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 17 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.w, r0.x, r0.y, v1.y
					mov o1.xyz, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d9 " {
					Keywords { "UNITY_COLORSPACE_GAMMA" }
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_TexelSize;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_TexelSize  c8       1
					//
					
					    vs_3_0
					    def c9, 1, 0, -2, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    mad r0, v0.xyzx, c9.xxxy, c9.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mov r0.y, c9.y
					    slt r0.x, c8.y, r0.y
					    mad r0.y, v1.y, c9.z, c9.x
					    mad o2.y, r0.x, r0.y, v1.y
					    mov o1.xy, v1
					    mov o2.x, v1.x
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 17 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_COLORSPACE_GAMMA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.w, r0.x, r0.y, v1.y
					mov o1.xyz, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _History1ChromaTex;
					//   sampler2D _History1LumaTex;
					//   float _History1Weight;
					//   sampler2D _History2ChromaTex;
					//   sampler2D _History2LumaTex;
					//   float _History2Weight;
					//   sampler2D _History3ChromaTex;
					//   sampler2D _History3LumaTex;
					//   float _History3Weight;
					//   sampler2D _History4ChromaTex;
					//   sampler2D _History4LumaTex;
					//   float _History4Weight;
					//   sampler2D _MainTex;
					//   float4 _MainTex_TexelSize;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   _MainTex_TexelSize c0       1
					//   _History1Weight    c1       1
					//   _History2Weight    c2       1
					//   _History3Weight    c3       1
					//   _History4Weight    c4       1
					//   _MainTex           s0       1
					//   _History1LumaTex   s1       1
					//   _History2LumaTex   s2       1
					//   _History3LumaTex   s3       1
					//   _History4LumaTex   s4       1
					//   _History1ChromaTex s5       1
					//   _History2ChromaTex s6       1
					//   _History3ChromaTex s7       1
					//   _History4ChromaTex s8       1
					//
					
					    ps_3_0
					    def c5, 0.5, 2, 0, 0.416666657
					    def c6, 1.05499995, -0.0549999997, 1.77199996, -0.344139993
					    def c7, 1.40199995, 0.714139998, 1, 0.0125228781
					    def c8, 0.305306017, 0.682171106, 0, 0
					    dcl_texcoord v0.xy
					    dcl_texcoord1 v1.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    dcl_2d s3
					    dcl_2d s4
					    dcl_2d s5
					    dcl_2d s6
					    dcl_2d s7
					    dcl_2d s8
					    texld_pp r0, v0, s0
					    max_pp r1.xyz, r0, c5.z
					    mov_pp oC0.w, r0.w
					    log_pp r0.x, r1.x
					    log_pp r0.y, r1.y
					    log_pp r0.z, r1.z
					    mul_pp r0.xyz, r0, c5.w
					    exp_pp r1.x, r0.x
					    exp_pp r1.y, r0.y
					    exp_pp r1.z, r0.z
					    mad_pp r0.xyz, r1, c6.x, c6.y
					    max_pp r1.xyz, r0, c5.z
					    texld_pp r0, v1, s1
					    mul r0.y, c0.z, v1.x
					    mul r0.y, r0.y, c5.x
					    frc r0.z, r0.y
					    add r0.y, -r0.z, r0.y
					    mad r0.y, r0.y, c5.y, c5.x
					    mad r2.z, r0.y, c0.x, c0.x
					    mul r2.x, r0.y, c0.x
					    mov r2.yw, v1.y
					    texld r3, r2.zwzw, s5
					    add_pp r0.y, r3.x, -c5.x
					    mul_pp r3.xy, r0.y, c7
					    texld r4, r2, s5
					    add_pp r0.y, r4.x, -c5.x
					    mad_pp r3.z, r0.y, c6.w, -r3.y
					    mul_pp r3.w, r0.y, c6.z
					    add_pp r0.xyz, r0.x, r3.xzww
					    mad_pp r0.xyz, r0, c1.x, r1
					    texld r1, r2.zwzw, s6
					    add_pp r0.w, r1.x, -c5.x
					    mul_pp r1.xy, r0.w, c7
					    texld r3, r2, s6
					    add_pp r0.w, r3.x, -c5.x
					    mad_pp r1.z, r0.w, c6.w, -r1.y
					    mul_pp r1.w, r0.w, c6.z
					    texld_pp r3, v1, s2
					    add_pp r1.xyz, r1.xzww, r3.x
					    mad_pp r0.xyz, r1, c2.x, r0
					    texld r1, r2.zwzw, s7
					    texld r3, r2.zwzw, s8
					    add_pp r0.w, r3.x, -c5.x
					    mul_pp r3.xy, r0.w, c7
					    add_pp r0.w, r1.x, -c5.x
					    mul_pp r1.xy, r0.w, c7
					    texld r4, r2, s7
					    texld r2, r2, s8
					    add_pp r0.w, r2.x, -c5.x
					    add_pp r2.x, r4.x, -c5.x
					    mad_pp r1.z, r2.x, c6.w, -r1.y
					    mul_pp r1.w, r2.x, c6.z
					    texld_pp r2, v1, s3
					    add_pp r1.xyz, r1.xzww, r2.x
					    mad_pp r0.xyz, r1, c3.x, r0
					    mad_pp r3.z, r0.w, c6.w, -r3.y
					    mul_pp r3.w, r0.w, c6.z
					    texld_pp r1, v1, s4
					    add_pp r1.xyz, r3.xzww, r1.x
					    mad_pp r0.xyz, r1, c4.x, r0
					    mov r1.x, c2.x
					    add_pp r0.w, r1.x, c1.x
					    add_pp r0.w, r0.w, c3.x
					    add_pp r0.w, r0.w, c4.x
					    add_pp r0.w, r0.w, c7.z
					    rcp r0.w, r0.w
					    mul_pp r0.xyz, r0.w, r0
					    mad_pp r1.xyz, r0, c8.x, c8.y
					    mad_pp r1.xyz, r0, r1, c7.w
					    mul_pp oC0.xyz, r0, r1
					
					// approximately 70 instruction slots used (13 texture, 57 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[9], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v1.zw
					dcl_output o0.xyzw
					dcl_temps 5
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mov o0.w, r0.w
					log r0.xyz, r0.xyzx
					mul r0.xyz, r0.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
					exp r0.xyz, r0.xyzx
					mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
					max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					sample r1.xyzw, v1.zwzz, t1.xyzw, s1
					mul r0.w, v1.z, cb0[2].z
					mul r0.w, r0.w, l(0.500000)
					round_ni r0.w, r0.w
					mad r0.w, r0.w, l(2.000000), l(0.500000)
					mad r2.z, r0.w, cb0[2].x, cb0[2].x
					mul r2.x, r0.w, cb0[2].x
					mov r2.yw, v1.wwww
					sample r3.xyzw, r2.zwzz, t2.xyzw, s5
					add r0.w, r3.x, l(-0.500000)
					mul r3.xy, r0.wwww, l(1.402000, 0.714140, 0.000000, 0.000000)
					sample r4.xyzw, r2.xyxx, t2.xyzw, s5
					add r0.w, r4.x, l(-0.500000)
					mad r3.z, r0.w, l(-0.344140), -r3.y
					mul r3.w, r0.w, l(1.772000)
					add r1.xyz, r1.xxxx, r3.xzwx
					mad r0.xyz, r1.xyzx, cb0[7].wwww, r0.xyzx
					sample r1.xyzw, v1.zwzz, t3.xyzw, s2
					sample r3.xyzw, r2.zwzz, t4.xyzw, s6
					add r0.w, r3.x, l(-0.500000)
					mul r3.xy, r0.wwww, l(1.402000, 0.714140, 0.000000, 0.000000)
					sample r4.xyzw, r2.xyxx, t4.xyzw, s6
					add r0.w, r4.x, l(-0.500000)
					mad r3.z, r0.w, l(-0.344140), -r3.y
					mul r3.w, r0.w, l(1.772000)
					add r1.xyz, r1.xxxx, r3.xzwx
					mad r0.xyz, r1.xyzx, cb0[8].xxxx, r0.xyzx
					sample r1.xyzw, r2.zwzz, t6.xyzw, s7
					sample r3.xyzw, r2.zwzz, t8.xyzw, s8
					add r0.w, r3.x, l(-0.500000)
					mul r3.xy, r0.wwww, l(1.402000, 0.714140, 0.000000, 0.000000)
					add r0.w, r1.x, l(-0.500000)
					mul r1.xy, r0.wwww, l(1.402000, 0.714140, 0.000000, 0.000000)
					sample r4.xyzw, r2.xyxx, t6.xyzw, s7
					sample r2.xyzw, r2.xyxx, t8.xyzw, s8
					add r0.w, r2.x, l(-0.500000)
					add r2.x, r4.x, l(-0.500000)
					mad r1.z, r2.x, l(-0.344140), -r1.y
					mul r1.w, r2.x, l(1.772000)
					sample r2.xyzw, v1.zwzz, t5.xyzw, s3
					add r1.xyz, r1.xzwx, r2.xxxx
					mad r0.xyz, r1.xyzx, cb0[8].yyyy, r0.xyzx
					mad r3.z, r0.w, l(-0.344140), -r3.y
					mul r3.w, r0.w, l(1.772000)
					sample r1.xyzw, v1.zwzz, t7.xyzw, s4
					add r1.xyz, r3.xzwx, r1.xxxx
					mad r0.xyz, r1.xyzx, cb0[8].zzzz, r0.xyzx
					add r0.w, cb0[7].w, cb0[8].x
					add r0.w, r0.w, cb0[8].y
					add r0.w, r0.w, cb0[8].z
					add r0.w, r0.w, l(1.000000)
					div r0.xyz, r0.xyzx, r0.wwww
					mad r1.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r1.xyz, r0.xyzx, r1.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul o0.xyz, r0.xyzx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d9 " {
					Keywords { "UNITY_COLORSPACE_GAMMA" }
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _History1ChromaTex;
					//   sampler2D _History1LumaTex;
					//   float _History1Weight;
					//   sampler2D _History2ChromaTex;
					//   sampler2D _History2LumaTex;
					//   float _History2Weight;
					//   sampler2D _History3ChromaTex;
					//   sampler2D _History3LumaTex;
					//   float _History3Weight;
					//   sampler2D _History4ChromaTex;
					//   sampler2D _History4LumaTex;
					//   float _History4Weight;
					//   sampler2D _MainTex;
					//   float4 _MainTex_TexelSize;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   _MainTex_TexelSize c0       1
					//   _History1Weight    c1       1
					//   _History2Weight    c2       1
					//   _History3Weight    c3       1
					//   _History4Weight    c4       1
					//   _MainTex           s0       1
					//   _History1LumaTex   s1       1
					//   _History2LumaTex   s2       1
					//   _History3LumaTex   s3       1
					//   _History4LumaTex   s4       1
					//   _History1ChromaTex s5       1
					//   _History2ChromaTex s6       1
					//   _History3ChromaTex s7       1
					//   _History4ChromaTex s8       1
					//
					
					    ps_3_0
					    def c5, 0.5, 2, -0.5, 1.77199996
					    def c6, 1.40199995, 0.714139998, -0.344139993, 1
					    dcl_texcoord v0.xy
					    dcl_texcoord1 v1.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    dcl_2d s3
					    dcl_2d s4
					    dcl_2d s5
					    dcl_2d s6
					    dcl_2d s7
					    dcl_2d s8
					    texld_pp r0, v1, s1
					    mul r0.y, c0.z, v1.x
					    mul r0.y, r0.y, c5.x
					    frc r0.z, r0.y
					    add r0.y, -r0.z, r0.y
					    mad r0.y, r0.y, c5.y, c5.x
					    mad r1.z, r0.y, c0.x, c0.x
					    mul r1.x, r0.y, c0.x
					    mov r1.yw, v1.y
					    texld r2, r1.zwzw, s5
					    add_pp r0.y, r2.x, c5.z
					    mul_pp r2.xy, r0.y, c6
					    texld r3, r1, s5
					    add_pp r0.y, r3.x, c5.z
					    mad_pp r2.z, r0.y, c6.z, -r2.y
					    mul_pp r2.w, r0.y, c5.w
					    add_pp r0.xyz, r0.x, r2.xzww
					    texld_pp r2, v0, s0
					    mad_pp r0.xyz, r0, c1.x, r2
					    mov_pp oC0.w, r2.w
					    texld r2, r1.zwzw, s6
					    add_pp r0.w, r2.x, c5.z
					    mul_pp r2.xy, r0.w, c6
					    texld r3, r1, s6
					    add_pp r0.w, r3.x, c5.z
					    mad_pp r2.z, r0.w, c6.z, -r2.y
					    mul_pp r2.w, r0.w, c5.w
					    texld_pp r3, v1, s2
					    add_pp r2.xyz, r2.xzww, r3.x
					    mad_pp r0.xyz, r2, c2.x, r0
					    texld r2, r1.zwzw, s7
					    texld r3, r1.zwzw, s8
					    add_pp r0.w, r3.x, c5.z
					    mul_pp r3.xy, r0.w, c6
					    add_pp r0.w, r2.x, c5.z
					    mul_pp r2.xy, r0.w, c6
					    texld r4, r1, s7
					    texld r1, r1, s8
					    add_pp r0.w, r1.x, c5.z
					    add_pp r1.x, r4.x, c5.z
					    mad_pp r2.z, r1.x, c6.z, -r2.y
					    mul_pp r2.w, r1.x, c5.w
					    texld_pp r1, v1, s3
					    add_pp r1.xyz, r2.xzww, r1.x
					    mad_pp r0.xyz, r1, c3.x, r0
					    mad_pp r3.z, r0.w, c6.z, -r3.y
					    mul_pp r3.w, r0.w, c5.w
					    texld_pp r1, v1, s4
					    add_pp r1.xyz, r3.xzww, r1.x
					    mad_pp r0.xyz, r1, c4.x, r0
					    mov r1.x, c2.x
					    add_pp r0.w, r1.x, c1.x
					    add_pp r0.w, r0.w, c3.x
					    add_pp r0.w, r0.w, c4.x
					    add_pp r0.w, r0.w, c6.w
					    rcp r0.w, r0.w
					    mul_pp oC0.xyz, r0.w, r0
					
					// approximately 57 instruction slots used (13 texture, 44 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_COLORSPACE_GAMMA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[9], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_sampler s7, mode_default
					dcl_sampler s8, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture2d (float,float,float,float) t6
					dcl_resource_texture2d (float,float,float,float) t7
					dcl_resource_texture2d (float,float,float,float) t8
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v1.zw
					dcl_output o0.xyzw
					dcl_temps 5
					sample r0.xyzw, v1.zwzz, t1.xyzw, s1
					mul r0.y, v1.z, cb0[2].z
					mul r0.y, r0.y, l(0.500000)
					round_ni r0.y, r0.y
					mad r0.y, r0.y, l(2.000000), l(0.500000)
					mad r1.z, r0.y, cb0[2].x, cb0[2].x
					mul r1.x, r0.y, cb0[2].x
					mov r1.yw, v1.wwww
					sample r2.xyzw, r1.zwzz, t2.xyzw, s5
					add r0.y, r2.x, l(-0.500000)
					mul r2.xy, r0.yyyy, l(1.402000, 0.714140, 0.000000, 0.000000)
					sample r3.xyzw, r1.xyxx, t2.xyzw, s5
					add r0.y, r3.x, l(-0.500000)
					mad r2.z, r0.y, l(-0.344140), -r2.y
					mul r2.w, r0.y, l(1.772000)
					add r0.xyz, r0.xxxx, r2.xzwx
					sample r2.xyzw, v1.xyxx, t0.xyzw, s0
					mad r0.xyz, r0.xyzx, cb0[7].wwww, r2.xyzx
					mov o0.w, r2.w
					sample r2.xyzw, v1.zwzz, t3.xyzw, s2
					sample r3.xyzw, r1.zwzz, t4.xyzw, s6
					add r0.w, r3.x, l(-0.500000)
					mul r3.xy, r0.wwww, l(1.402000, 0.714140, 0.000000, 0.000000)
					sample r4.xyzw, r1.xyxx, t4.xyzw, s6
					add r0.w, r4.x, l(-0.500000)
					mad r3.z, r0.w, l(-0.344140), -r3.y
					mul r3.w, r0.w, l(1.772000)
					add r2.xyz, r2.xxxx, r3.xzwx
					mad r0.xyz, r2.xyzx, cb0[8].xxxx, r0.xyzx
					sample r2.xyzw, r1.zwzz, t6.xyzw, s7
					sample r3.xyzw, r1.zwzz, t8.xyzw, s8
					add r0.w, r3.x, l(-0.500000)
					mul r3.xy, r0.wwww, l(1.402000, 0.714140, 0.000000, 0.000000)
					add r0.w, r2.x, l(-0.500000)
					mul r2.xy, r0.wwww, l(1.402000, 0.714140, 0.000000, 0.000000)
					sample r4.xyzw, r1.xyxx, t6.xyzw, s7
					sample r1.xyzw, r1.xyxx, t8.xyzw, s8
					add r0.w, r1.x, l(-0.500000)
					add r1.x, r4.x, l(-0.500000)
					mad r2.z, r1.x, l(-0.344140), -r2.y
					mul r2.w, r1.x, l(1.772000)
					sample r1.xyzw, v1.zwzz, t5.xyzw, s3
					add r1.xyz, r2.xzwx, r1.xxxx
					mad r0.xyz, r1.xyzx, cb0[8].yyyy, r0.xyzx
					mad r3.z, r0.w, l(-0.344140), -r3.y
					mul r3.w, r0.w, l(1.772000)
					sample r1.xyzw, v1.zwzz, t7.xyzw, s4
					add r1.xyz, r3.xzwx, r1.xxxx
					mad r0.xyz, r1.xyzx, cb0[8].zzzz, r0.xyzx
					add r0.w, cb0[7].w, cb0[8].x
					add r0.w, r0.w, cb0[8].y
					add r0.w, r0.w, cb0[8].z
					add r0.w, r0.w, l(1.000000)
					div o0.xyz, r0.xyzx, r0.wwww
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 539235
			Program "vp" {
				SubProgram "d3d9 " {
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_TexelSize;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_TexelSize  c8       1
					//
					
					    vs_3_0
					    def c9, 1, 0, -2, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    mad r0, v0.xyzx, c9.xxxy, c9.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mov r0.y, c9.y
					    slt r0.x, c8.y, r0.y
					    mad r0.y, v1.y, c9.z, c9.x
					    mad o2.y, r0.x, r0.y, v1.y
					    mov o1.xy, v1
					    mov o2.x, v1.x
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 17 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.w, r0.x, r0.y, v1.y
					mov o1.xyz, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _History1LumaTex;
					//   float _History1Weight;
					//   sampler2D _History2LumaTex;
					//   float _History2Weight;
					//   sampler2D _History3LumaTex;
					//   float _History3Weight;
					//   sampler2D _History4LumaTex;
					//   float _History4Weight;
					//   sampler2D _MainTex;
					//
					//
					// Registers:
					//
					//   Name             Reg   Size
					//   ---------------- ----- ----
					//   _History1Weight  c0       1
					//   _History2Weight  c1       1
					//   _History3Weight  c2       1
					//   _History4Weight  c3       1
					//   _MainTex         s0       1
					//   _History1LumaTex s1       1
					//   _History2LumaTex s2       1
					//   _History3LumaTex s3       1
					//   _History4LumaTex s4       1
					//
					
					    ps_3_0
					    def c4, 1, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    dcl_2d s3
					    dcl_2d s4
					    mov r0.x, c1.x
					    add_pp r0.x, r0.x, c0.x
					    add_pp r0.x, r0.x, c2.x
					    add_pp r0.x, r0.x, c3.x
					    add_pp r0.x, r0.x, c4.x
					    rcp r0.x, r0.x
					    texld r1, v0, s1
					    texld_pp r2, v0, s0
					    mad_pp r0.yzw, r1.xxyz, c0.x, r2.xxyz
					    mov_pp oC0.w, r2.w
					    texld r1, v0, s2
					    mad_pp r0.yzw, r1.xxyz, c1.x, r0
					    texld r1, v0, s3
					    mad_pp r0.yzw, r1.xxyz, c2.x, r0
					    texld r1, v0, s4
					    mad_pp r0.yzw, r1.xxyz, c3.x, r0
					    mul_pp oC0.xyz, r0.x, r0.yzww
					
					// approximately 17 instruction slots used (5 texture, 12 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[9], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 2
					sample r0.xyzw, v1.xyxx, t1.xyzw, s1
					sample r1.xyzw, v1.xyxx, t0.xyzw, s0
					mad r0.xyz, r0.xyzx, cb0[7].wwww, r1.xyzx
					mov o0.w, r1.w
					sample r1.xyzw, v1.xyxx, t2.xyzw, s2
					mad r0.xyz, r1.xyzx, cb0[8].xxxx, r0.xyzx
					sample r1.xyzw, v1.xyxx, t3.xyzw, s3
					mad r0.xyz, r1.xyzx, cb0[8].yyyy, r0.xyzx
					sample r1.xyzw, v1.xyxx, t4.xyzw, s4
					mad r0.xyz, r1.xyzx, cb0[8].zzzz, r0.xyzx
					add r0.w, cb0[7].w, cb0[8].x
					add r0.w, r0.w, cb0[8].y
					add r0.w, r0.w, cb0[8].z
					add r0.w, r0.w, l(1.000000)
					div o0.xyz, r0.xyzx, r0.wwww
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
}