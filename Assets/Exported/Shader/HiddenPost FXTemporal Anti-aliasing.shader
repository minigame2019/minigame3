Shader "Hidden/Post FX/Temporal Anti-aliasing" {
	Properties {
		_MainTex ("", 2D) = "black" {}
	}
	SubShader {
		Pass {
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 39808
			Program "vp" {
				SubProgram "d3d11 " {
					"!!vs_5_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					//
					vs_5_0
					dcl_globalFlags refactoringAllowed
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.y, r0.x, r0.y, v1.y
					mov o1.xzw, v1.xxxy
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!ps_5_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					//
					ps_5_0
					dcl_globalFlags refactoringAllowed
					dcl_constantbuffer CB0[9], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xyzw
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_temps 6
					lt r0.x, cb0[2].y, l(0.000000)
					mul r0.yz, cb0[6].xxyx, l(0.000000, 1.000000, -1.000000, 0.000000)
					movc r0.xy, r0.xxxx, r0.yzyy, cb0[6].xyxx
					add r0.xy, -r0.xyxx, v1.xyxx
					mad r0.zw, -cb0[2].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000), r0.xxxy
					sample_indexable(texture2d)(float,float,float,float) r1.xyz, r0.zwzz, t2.xyzw, s0
					max r0.z, r1.z, r1.y
					max r0.z, r0.z, r1.x
					add r0.z, r0.z, l(1.000000)
					rcp r0.z, r0.z
					mul r2.xyz, r0.zzzz, r1.xyzx
					mad r0.zw, cb0[2].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000), r0.xxxy
					sample_indexable(texture2d)(float,float,float,float) r3.xyz, r0.xyxx, t2.xyzw, s0
					sample_indexable(texture2d)(float,float,float,float) r0.xyz, r0.zwzz, t2.xyzw, s0
					max r0.w, r0.z, r0.y
					max r0.w, r0.w, r0.x
					add r0.w, r0.w, l(1.000000)
					rcp r0.w, r0.w
					mul r4.xyz, r0.wwww, r0.xyzx
					add r0.xyz, r0.xyzx, r1.xyzx
					min r1.xyz, r2.xyzx, r4.xyzx
					max r2.xyz, r2.xyzx, r4.xyzx
					add r4.xyz, r3.xyzx, r3.xyzx
					mad r0.xyz, r0.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), -r4.xyzx
					mad r4.xyz, -r0.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000), r3.xyzx
					mul r4.xyz, r4.xyzx, cb0[7].xxxx
					mad r3.xyz, r4.xyzx, l(2.718282, 2.718282, 2.718282, 0.000000), r3.xyzx
					max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r0.xyz, r0.xyzx, r3.xyzx
					mul r0.xyz, r0.xyzx, l(0.142857, 0.142857, 0.142857, 0.000000)
					max r0.w, r0.z, r0.y
					max r0.w, r0.w, r0.x
					add r0.w, r0.w, l(1.000000)
					rcp r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.x, r0.xyzx, l(0.039682, 0.458022, 0.006097, 0.000000)
					max r0.y, r3.z, r3.y
					max r0.y, r0.y, r3.x
					add r0.y, r0.y, l(1.000000)
					rcp r0.y, r0.y
					mul r3.xyz, r0.yyyy, r3.xyzx
					dp3 r0.y, r3.xyzx, l(0.039682, 0.458022, 0.006097, 0.000000)
					add r0.x, -r0.y, r0.x
					mad r0.yzw, -|r0.xxxx|, l(0.000000, 4.000000, 4.000000, 4.000000), r1.xxyz
					mad r1.xyz, |r0.xxxx|, l(4.000000, 4.000000, 4.000000, 0.000000), r2.xyzx
					add r2.xyz, -r0.yzwy, r1.xyzx
					add r0.xyz, r0.yzwy, r1.xyzx
					mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
					mul r1.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
					add r2.xy, v1.zwzz, -cb0[5].xyxx
					sample_indexable(texture2d)(float,float,float,float) r2.z, r2.xyxx, t0.yzxw, s3
					sample_indexable(texture2d)(float,float,float,float) r4.z, v1.zwzz, t0.yzxw, s3
					ge r1.w, r2.z, r4.z
					and r1.w, r1.w, l(0x3f800000)
					mov r2.xy, l(-1.000000,-1.000000,0,0)
					mov r4.xy, l(0,0,0,0)
					add r2.xyz, r2.xyzx, -r4.yyzy
					mad r2.xyz, r1.wwww, r2.xyzx, r4.xyzx
					mov r4.xy, l(1.000000,-1.000000,0,0)
					mad r5.xyzw, cb0[5].xyxy, l(1.000000, -1.000000, -1.000000, 1.000000), v1.zwzw
					sample_indexable(texture2d)(float,float,float,float) r4.z, r5.xyxx, t0.yzxw, s3
					sample_indexable(texture2d)(float,float,float,float) r5.z, r5.zwzz, t0.yzxw, s3
					ge r1.w, r4.z, r2.z
					and r1.w, r1.w, l(0x3f800000)
					add r4.xyz, -r2.yyzy, r4.xyzx
					mad r2.xyz, r1.wwww, r4.xyzx, r2.xyzx
					mov r5.xyw, l(-1.000000,1.000000,0,0)
					ge r1.w, r5.z, r2.z
					and r1.w, r1.w, l(0x3f800000)
					add r4.xyz, -r2.xyzx, r5.xyzx
					mad r2.xyz, r1.wwww, r4.xyzx, r2.xyzx
					add r4.xy, v1.zwzz, cb0[5].xyxx
					sample_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t0.yzwx, s3
					ge r1.w, r1.w, r2.z
					and r1.w, r1.w, l(0x3f800000)
					add r2.zw, -r2.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
					mad r2.xy, r1.wwww, r2.zwzz, r2.xyxx
					mad r2.xy, r2.xyxx, cb0[5].xyxx, v1.zwzz
					sample_indexable(texture2d)(float,float,float,float) r2.xy, r2.xyxx, t1.xyzw, s2
					add r2.zw, -r2.xxxy, v1.zzzw
					dp2 r1.w, r2.xyxx, r2.xyxx
					sqrt r1.w, r1.w
					sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r2.zwzz, t3.xyzw, s1
					max r4.x, r2.z, r2.y
					max r4.x, r2.x, r4.x
					add r4.x, r4.x, l(1.000000)
					rcp r4.x, r4.x
					mad r5.xyz, r2.xyzx, r4.xxxx, -r0.xyzx
					mul r4.xyz, r2.xyzx, r4.xxxx
					mov r0.w, r2.w
					div r1.xyz, r5.xyzx, r1.xyzx
					max r1.y, |r1.z|, |r1.y|
					max r1.x, r1.y, |r1.x|
					div r2.xyzw, r5.xyzw, r1.xxxx
					lt r1.x, l(1.000000), r1.x
					add r2.xyzw, r0.xyzw, r2.xyzw
					mov r4.w, r0.w
					movc r0.xyzw, r1.xxxx, r2.xyzw, r4.xyzw
					mad r1.x, -cb0[2].z, l(0.002000), r1.w
					mul r1.y, r1.w, cb0[8].z
					mul r1.z, cb0[2].z, l(0.001500)
					div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
					mul_sat r1.x, r1.z, r1.x
					mad r1.z, r1.x, l(-2.000000), l(3.000000)
					mul r1.x, r1.x, r1.x
					mul r1.x, r1.x, r1.z
					min r3.w, r1.x, l(1.000000)
					add r0.xyzw, r0.xyzw, -r3.xyzw
					add r1.x, -cb0[8].x, cb0[8].y
					mad r1.x, r1.y, r1.x, cb0[8].x
					max r1.x, r1.x, cb0[8].y
					min r1.x, r1.x, cb0[8].x
					mad r0.xyzw, r1.xxxx, r0.xyzw, r3.xyzw
					max r1.x, r0.z, r0.y
					max r1.x, r0.x, r1.x
					add r1.x, -r1.x, l(1.000000)
					rcp r1.x, r1.x
					mul r0.xyz, r0.xyzx, r1.xxxx
					mov o1.xyz, r0.xyzx
					mov o0.xyzw, r0.xyzw
					mul o1.w, r0.w, l(0.850000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 124378
			Program "vp" {
				SubProgram "d3d11 " {
					"!!vs_5_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					//
					vs_5_0
					dcl_globalFlags refactoringAllowed
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.y, r0.x, r0.y, v1.y
					mov o1.xzw, v1.xxxy
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!ps_5_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					//
					ps_5_0
					dcl_globalFlags refactoringAllowed
					dcl_constantbuffer CB0[9], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xyzw
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_temps 6
					lt r0.x, cb0[2].y, l(0.000000)
					mul r0.yz, cb0[6].xxyx, l(0.000000, 1.000000, -1.000000, 0.000000)
					movc r0.xy, r0.xxxx, r0.yzyy, cb0[6].xyxx
					add r0.xy, -r0.xyxx, v1.xyxx
					mad r0.zw, -cb0[2].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000), r0.xxxy
					sample_indexable(texture2d)(float,float,float,float) r1.xyz, r0.zwzz, t1.xyzw, s0
					max r0.z, r1.z, r1.y
					max r0.z, r0.z, r1.x
					add r0.z, r0.z, l(1.000000)
					rcp r0.z, r0.z
					mul r2.xyz, r0.zzzz, r1.xyzx
					mad r0.zw, cb0[2].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000), r0.xxxy
					sample_indexable(texture2d)(float,float,float,float) r3.xyz, r0.xyxx, t1.xyzw, s0
					sample_indexable(texture2d)(float,float,float,float) r0.xyz, r0.zwzz, t1.xyzw, s0
					max r0.w, r0.z, r0.y
					max r0.w, r0.w, r0.x
					add r0.w, r0.w, l(1.000000)
					rcp r0.w, r0.w
					mul r4.xyz, r0.wwww, r0.xyzx
					add r0.xyz, r0.xyzx, r1.xyzx
					min r1.xyz, r2.xyzx, r4.xyzx
					max r2.xyz, r2.xyzx, r4.xyzx
					add r4.xyz, r3.xyzx, r3.xyzx
					mad r0.xyz, r0.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), -r4.xyzx
					mad r4.xyz, -r0.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000), r3.xyzx
					mul r4.xyz, r4.xyzx, cb0[7].xxxx
					mad r3.xyz, r4.xyzx, l(2.718282, 2.718282, 2.718282, 0.000000), r3.xyzx
					max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r0.xyz, r0.xyzx, r3.xyzx
					mul r0.xyz, r0.xyzx, l(0.142857, 0.142857, 0.142857, 0.000000)
					max r0.w, r0.z, r0.y
					max r0.w, r0.w, r0.x
					add r0.w, r0.w, l(1.000000)
					rcp r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.x, r0.xyzx, l(0.039682, 0.458022, 0.006097, 0.000000)
					max r0.y, r3.z, r3.y
					max r0.y, r0.y, r3.x
					add r0.y, r0.y, l(1.000000)
					rcp r0.y, r0.y
					mul r3.xyz, r0.yyyy, r3.xyzx
					dp3 r0.y, r3.xyzx, l(0.039682, 0.458022, 0.006097, 0.000000)
					add r0.x, -r0.y, r0.x
					mad r0.yzw, -|r0.xxxx|, l(0.000000, 4.000000, 4.000000, 4.000000), r1.xxyz
					mad r1.xyz, |r0.xxxx|, l(4.000000, 4.000000, 4.000000, 0.000000), r2.xyzx
					add r2.xyz, r0.yzwy, r1.xyzx
					add r0.xyz, -r0.yzwy, r1.xyzx
					mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
					mul r1.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
					sample_indexable(texture2d)(float,float,float,float) r2.xy, v1.zwzz, t0.xyzw, s2
					add r2.zw, -r2.xxxy, v1.zzzw
					dp2 r0.w, r2.xyxx, r2.xyxx
					sqrt r0.w, r0.w
					sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r2.zwzz, t2.xyzw, s1
					max r4.x, r2.z, r2.y
					max r4.x, r2.x, r4.x
					add r4.x, r4.x, l(1.000000)
					rcp r4.x, r4.x
					mad r5.xyz, r2.xyzx, r4.xxxx, -r1.xyzx
					mul r4.xyz, r2.xyzx, r4.xxxx
					mov r1.w, r2.w
					div r0.xyz, r5.xyzx, r0.xyzx
					max r0.y, |r0.z|, |r0.y|
					max r0.x, r0.y, |r0.x|
					mov r5.w, l(0)
					div r2.xyzw, r5.xyzw, r0.xxxx
					lt r0.x, l(1.000000), r0.x
					add r2.xyzw, r1.xyzw, r2.xyzw
					mov r4.w, r1.w
					movc r1.xyzw, r0.xxxx, r2.xyzw, r4.xyzw
					mad r0.x, -cb0[2].z, l(0.002000), r0.w
					mul r0.y, r0.w, cb0[8].z
					mul r0.z, cb0[2].z, l(0.001500)
					div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					mul_sat r0.x, r0.z, r0.x
					mad r0.z, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r0.z
					min r3.w, r0.x, l(1.000000)
					add r1.xyzw, r1.xyzw, -r3.xyzw
					add r0.x, -cb0[8].x, cb0[8].y
					mad r0.x, r0.y, r0.x, cb0[8].x
					max r0.x, r0.x, cb0[8].y
					min r0.x, r0.x, cb0[8].x
					mad r0.xyzw, r0.xxxx, r1.xyzw, r3.xyzw
					max r1.x, r0.z, r0.y
					max r1.x, r0.x, r1.x
					add r1.x, -r1.x, l(1.000000)
					rcp r1.x, r1.x
					mul r0.xyz, r0.xyzx, r1.xxxx
					mov o1.xyz, r0.xyzx
					mov o0.xyzw, r0.xyzw
					mul o1.w, r0.w, l(0.850000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 170307
			Program "vp" {
				SubProgram "d3d11 " {
					"!!vs_5_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_5_0
					dcl_globalFlags refactoringAllowed
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mad o1.zw, v1.xxxy, cb0[3].xxxy, cb0[3].zzzw
					mov o1.xy, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!ps_5_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_5_0
					dcl_globalFlags refactoringAllowed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 1
					sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t0.xyzw, s0
					mov o0.xyz, r0.xyzx
					mov o0.w, l(0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
	SubShader {
		Pass {
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 205383
			Program "vp" {
				SubProgram "d3d9 " {
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_TexelSize;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_TexelSize  c8       1
					//
					
					    vs_3_0
					    def c9, 1, 0, -2, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1
					    mad r0, v0.xyzx, c9.xxxy, c9.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mov r0.y, c9.y
					    slt r0.x, c8.y, r0.y
					    mad r0.y, v1.y, c9.z, c9.x
					    mad o1.y, r0.x, r0.y, v1.y
					    mov o1.xzw, v1.xyxy
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 16 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.y, r0.x, r0.y, v1.y
					mov o1.xzw, v1.xxxy
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _CameraDepthTexture;
					//   float4 _CameraDepthTexture_TexelSize;
					//   sampler2D _CameraMotionVectorsTexture;
					//   float4 _FinalBlendParameters;
					//   sampler2D _HistoryTex;
					//   float2 _Jitter;
					//   sampler2D _MainTex;
					//   float4 _MainTex_TexelSize;
					//   float4 _SharpenParameters;
					//
					//
					// Registers:
					//
					//   Name                          Reg   Size
					//   ----------------------------- ----- ----
					//   _MainTex_TexelSize            c0       1
					//   _CameraDepthTexture_TexelSize c1       1
					//   _Jitter                       c2       1
					//   _SharpenParameters            c3       1
					//   _FinalBlendParameters         c4       1
					//   _MainTex                      s0       1
					//   _HistoryTex                   s1       1
					//   _CameraMotionVectorsTexture   s2       1
					//   _CameraDepthTexture           s3       1
					//
					
					    ps_3_0
					    def c5, 0.5, 4, 0.166666999, 2.71828198
					    def c6, 0.142857, 0.0396819152, 0.45802179, 0.00609653955
					    def c7, 0.00200000009, -2, 3, 0.850000024
					    def c8, 1, -1, 0, 0.00150000001
					    dcl_texcoord v0
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    dcl_2d s3
					    mov r0.xyw, c8
					    mul r1.xy, r0, c2
					    mov r2.xyz, c0
					    cmp r1.xy, r2.y, c2, r1
					    add r1.xy, -r1, v0
					    texld r3, r1, s0
					    add r4.xyz, r3, r3
					    mad r1.zw, r2.xyxy, -c5.x, r1.xyxy
					    mad r1.xy, r2, c5.x, r1
					    texld_pp r5, r1, s0
					    texld_pp r1, r1.zwzw, s0
					    add r2.xyw, r5.xyzz, r1.xyzz
					    mad r2.xyw, r2, c5.y, -r4.xyzz
					    mad r4.xyz, r2.xyww, -c5.z, r3
					    mul r4.xyz, r4, c3.x
					    mad_pp r3.xyz, r4, c5.w, r3
					    max_pp r4.xyz, r3, c8.z
					    add r2.xyw, r2, r4.xyzz
					    mul_pp r2.xyw, r2, c6.x
					    max_pp r0.z, r2.y, r2.w
					    max_pp r1.w, r2.x, r0.z
					    add r0.z, r1.w, c8.x
					    rcp r0.z, r0.z
					    mul_pp r2.xyw, r0.z, r2
					    dp3_pp r0.z, r2.xyww, c6.yzww
					    max_pp r1.w, r4.y, r4.z
					    max_pp r2.x, r4.x, r1.w
					    add r1.w, r2.x, c8.x
					    rcp r1.w, r1.w
					    mul_pp r3.xyz, r1.w, r4
					    dp3_pp r1.w, r3, c6.yzww
					    add r0.z, r0.z, -r1.w
					    max_pp r2.x, r1.y, r1.z
					    max_pp r4.x, r1.x, r2.x
					    add r1.w, r4.x, c8.x
					    rcp r1.w, r1.w
					    mul r1.xyz, r1.w, r1
					    max_pp r1.w, r5.y, r5.z
					    max_pp r2.x, r5.x, r1.w
					    add r1.w, r2.x, c8.x
					    rcp r1.w, r1.w
					    mul r2.xyw, r1.w, r5.xyzz
					    min r4.xyz, r1, r2.xyww
					    max r5.xyz, r1, r2.xyww
					    mad r1.xyz, r0_abs.z, c5.y, r5
					    mad r2.xyw, r0_abs.z, -c5.y, r4.xyzz
					    add r4.xyz, r1, -r2.xyww
					    add r1.xyz, r1, r2.xyww
					    mul r1.xyz, r1, c5.x
					    mul r2.xyw, r4.xyzz, c5.x
					    rcp r4.x, r2.x
					    rcp r4.y, r2.y
					    rcp r4.z, r2.w
					    add r2.xy, -c1, v0.zwzw
					    texld r5, r2, s3
					    mad r2.xyw, r5.x, c8.zzzx, c8.yyzz
					    texld r6, v0.zwzw, s3
					    add r0.z, -r5.x, r6.x
					    mul r5.xyz, r6.x, c8.zzxw
					    cmp r2.xyw, r0.z, r2, r5.xyzz
					    mad r5, c1.xyxy, r0.xyyx, v0.zwzw
					    texld r6, r5, s3
					    texld r5, r5.zwzw, s3
					    add r0.x, r2.w, -r6.x
					    mad r5.yzw, r6.x, c8.xzzx, c8.xxyz
					    cmp r0.xyz, r0.x, r5.yzww, r2.xyww
					    add r2.x, -r5.x, r0.z
					    mad r5.xyz, r5.x, c8.zzxw, c8.yxzw
					    cmp r0.xyz, r2.x, r5, r0
					    add r2.xy, c1, v0.zwzw
					    texld r5, r2, s3
					    add r0.z, r0.z, -r5.x
					    cmp r0.xy, r0.z, c8.x, r0
					    mad r0.xy, r0, c1, v0.zwzw
					    texld r5, r0, s2
					    add r0.xy, -r5, v0.zwzw
					    dp2add r0.z, r5, r5, c8.z
					    rsq r0.z, r0.z
					    rcp r0.z, r0.z
					    texld r5, r0, s1
					    max_pp r0.x, r5.y, r5.z
					    max_pp r2.x, r5.x, r0.x
					    add r0.x, r2.x, c8.x
					    rcp r0.x, r0.x
					    mad r6.xyz, r5, r0.x, -r1
					    mul r7.xyz, r0.x, r5
					    mov r1.w, r5.w
					    mul r2.xyw, r4.xyzz, r6.xyzz
					    max r0.x, r2_abs.y, r2_abs.w
					    max r4.x, r2_abs.x, r0.x
					    rcp r0.x, r4.x
					    add r0.y, -r4.x, c8.x
					    mov r6.w, c8.z
					    mad r4, r6, r0.x, r1
					    mov r7.w, r1.w
					    cmp r1, r0.y, r7, r4
					    mad r0.x, r2.z, -c7.x, r0.z
					    mul r0.y, r0.z, c4.z
					    lrp r2.x, r0.y, c4.y, c4.x
					    max r0.y, r2.x, c4.y
					    min r2.x, c4.x, r0.y
					    mul r0.y, r0.w, c0.z
					    rcp r0.y, r0.y
					    mul_sat r0.x, r0.y, r0.x
					    mad r0.y, r0.x, c7.y, c7.z
					    mul r0.x, r0.x, r0.x
					    mul_sat r3.w, r0.x, r0.y
					    lrp r0, r2.x, r1, r3
					    mul oC1.w, r0.w, c7.w
					    mov oC0.w, r0.w
					    max_pp r1.x, r0.y, r0.z
					    max_pp r2.x, r0.x, r1.x
					    add r0.w, -r2.x, c8.x
					    rcp r0.w, r0.w
					    mul r0.xyz, r0.w, r0
					    mov oC0.xyz, r0
					    mov oC1.xyz, r0
					
					// approximately 118 instruction slots used (10 texture, 108 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[9], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_input_ps linear v1.xyzw
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_temps 7
					lt r0.x, cb0[2].y, l(0.000000)
					mul r0.yz, cb0[6].xxyx, l(0.000000, 1.000000, -1.000000, 0.000000)
					movc r0.xy, r0.xxxx, r0.yzyy, cb0[6].xyxx
					add r0.xy, -r0.xyxx, v1.xyxx
					mad r0.zw, -cb0[2].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000), r0.xxxy
					sample r1.xyzw, r0.zwzz, t2.xyzw, s0
					max r0.z, r1.z, r1.y
					max r0.z, r0.z, r1.x
					add r0.z, r0.z, l(1.000000)
					div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					mul r2.xyz, r0.zzzz, r1.xyzx
					mad r0.zw, cb0[2].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000), r0.xxxy
					sample r3.xyzw, r0.xyxx, t2.xyzw, s0
					sample r0.xyzw, r0.zwzz, t2.xyzw, s0
					max r0.w, r0.z, r0.y
					max r0.w, r0.w, r0.x
					add r0.w, r0.w, l(1.000000)
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					mul r4.xyz, r0.wwww, r0.xyzx
					add r0.xyz, r0.xyzx, r1.xyzx
					min r1.xyz, r2.xyzx, r4.xyzx
					max r2.xyz, r2.xyzx, r4.xyzx
					add r4.xyz, r3.xyzx, r3.xyzx
					mad r0.xyz, r0.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), -r4.xyzx
					mad r4.xyz, -r0.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000), r3.xyzx
					mul r4.xyz, r4.xyzx, cb0[7].xxxx
					mad r3.xyz, r4.xyzx, l(2.718282, 2.718282, 2.718282, 0.000000), r3.xyzx
					max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r0.xyz, r0.xyzx, r3.xyzx
					mul r0.xyz, r0.xyzx, l(0.142857, 0.142857, 0.142857, 0.000000)
					max r0.w, r0.z, r0.y
					max r0.w, r0.w, r0.x
					add r0.w, r0.w, l(1.000000)
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.x, r0.xyzx, l(0.039682, 0.458022, 0.006097, 0.000000)
					max r0.y, r3.z, r3.y
					max r0.y, r0.y, r3.x
					add r0.y, r0.y, l(1.000000)
					div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
					mul r3.xyz, r0.yyyy, r3.xyzx
					dp3 r0.y, r3.xyzx, l(0.039682, 0.458022, 0.006097, 0.000000)
					add r0.x, -r0.y, r0.x
					mad r0.yzw, -|r0.xxxx|, l(0.000000, 4.000000, 4.000000, 4.000000), r1.xxyz
					mad r1.xyz, |r0.xxxx|, l(4.000000, 4.000000, 4.000000, 0.000000), r2.xyzx
					add r2.xyz, -r0.yzwy, r1.xyzx
					add r0.xyz, r0.yzwy, r1.xyzx
					mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
					mul r1.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
					add r2.xy, v1.zwzz, -cb0[5].xyxx
					sample r2.xyzw, r2.xyxx, t0.yzxw, s3
					sample r4.xyzw, v1.zwzz, t0.yzxw, s3
					ge r1.w, r2.z, r4.z
					and r1.w, r1.w, l(0x3f800000)
					mov r2.xy, l(-1.000000,-1.000000,0,0)
					mov r4.xy, l(0,0,0,0)
					add r2.xyz, r2.xyzx, -r4.yyzy
					mad r2.xyz, r1.wwww, r2.xyzx, r4.xyzx
					mov r4.xy, l(1.000000,-1.000000,0,0)
					mad r5.xyzw, cb0[5].xyxy, l(1.000000, -1.000000, -1.000000, 1.000000), v1.zwzw
					sample r6.xyzw, r5.xyxx, t0.xyzw, s3
					sample r5.xyzw, r5.zwzz, t0.yzxw, s3
					mov r4.z, r6.x
					ge r1.w, r6.x, r2.z
					and r1.w, r1.w, l(0x3f800000)
					add r4.xyz, -r2.yyzy, r4.xyzx
					mad r2.xyz, r1.wwww, r4.xyzx, r2.xyzx
					mov r5.xyw, l(-1.000000,1.000000,0,0)
					ge r1.w, r5.z, r2.z
					and r1.w, r1.w, l(0x3f800000)
					add r4.xyz, -r2.xyzx, r5.xyzx
					mad r2.xyz, r1.wwww, r4.xyzx, r2.xyzx
					add r4.xy, v1.zwzz, cb0[5].xyxx
					sample r4.xyzw, r4.xyxx, t0.xyzw, s3
					ge r1.w, r4.x, r2.z
					and r1.w, r1.w, l(0x3f800000)
					add r2.zw, -r2.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
					mad r2.xy, r1.wwww, r2.zwzz, r2.xyxx
					mad r2.xy, r2.xyxx, cb0[5].xyxx, v1.zwzz
					sample r2.xyzw, r2.xyxx, t1.xyzw, s2
					add r2.zw, -r2.xxxy, v1.zzzw
					dp2 r1.w, r2.xyxx, r2.xyxx
					sqrt r1.w, r1.w
					sample r2.xyzw, r2.zwzz, t3.xyzw, s1
					max r4.x, r2.z, r2.y
					max r4.x, r2.x, r4.x
					add r4.x, r4.x, l(1.000000)
					div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r4.x
					mad r5.xyz, r2.xyzx, r4.xxxx, -r0.xyzx
					mul r4.xyz, r2.xyzx, r4.xxxx
					mov r0.w, r2.w
					div r1.xyz, r5.xyzx, r1.xyzx
					max r1.y, |r1.z|, |r1.y|
					max r1.x, r1.y, |r1.x|
					div r2.xyzw, r5.xyzw, r1.xxxx
					lt r1.x, l(1.000000), r1.x
					add r2.xyzw, r0.xyzw, r2.xyzw
					mov r4.w, r0.w
					movc r0.xyzw, r1.xxxx, r2.xyzw, r4.xyzw
					mad r1.x, -cb0[2].z, l(0.002000), r1.w
					mul r1.y, r1.w, cb0[8].z
					mul r1.z, cb0[2].z, l(0.001500)
					div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
					mul_sat r1.x, r1.z, r1.x
					mad r1.z, r1.x, l(-2.000000), l(3.000000)
					mul r1.x, r1.x, r1.x
					mul r1.x, r1.x, r1.z
					min r3.w, r1.x, l(1.000000)
					add r0.xyzw, r0.xyzw, -r3.xyzw
					add r1.x, -cb0[8].x, cb0[8].y
					mad r1.x, r1.y, r1.x, cb0[8].x
					max r1.x, r1.x, cb0[8].y
					min r1.x, r1.x, cb0[8].x
					mad r0.xyzw, r1.xxxx, r0.xyzw, r3.xyzw
					max r1.x, r0.z, r0.y
					max r1.x, r0.x, r1.x
					add r1.x, -r1.x, l(1.000000)
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul r0.xyz, r0.xyzx, r1.xxxx
					mov o1.xyz, r0.xyzx
					mov o0.xyzw, r0.xyzw
					mul o1.w, r0.w, l(0.850000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 319200
			Program "vp" {
				SubProgram "d3d9 " {
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_TexelSize;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_TexelSize  c8       1
					//
					
					    vs_3_0
					    def c9, 1, 0, -2, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1
					    mad r0, v0.xyzx, c9.xxxy, c9.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mov r0.y, c9.y
					    slt r0.x, c8.y, r0.y
					    mad r0.y, v1.y, c9.z, c9.x
					    mad o1.y, r0.x, r0.y, v1.y
					    mov o1.xzw, v1.xyxy
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 16 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.y, r0.x, r0.y, v1.y
					mov o1.xzw, v1.xxxy
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _CameraMotionVectorsTexture;
					//   float4 _FinalBlendParameters;
					//   sampler2D _HistoryTex;
					//   float2 _Jitter;
					//   sampler2D _MainTex;
					//   float4 _MainTex_TexelSize;
					//   float4 _SharpenParameters;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _MainTex_TexelSize          c0       1
					//   _Jitter                     c1       1
					//   _SharpenParameters          c2       1
					//   _FinalBlendParameters       c3       1
					//   _MainTex                    s0       1
					//   _HistoryTex                 s1       1
					//   _CameraMotionVectorsTexture s2       1
					//
					
					    ps_3_0
					    def c4, 1, -1, 0.00150000001, 0.5
					    def c5, 4, 0.166666999, 2.71828198, 0
					    def c6, 0.142857, 0.0396819152, 0.45802179, 0.00609653955
					    def c7, 0.00200000009, -2, 3, 0.850000024
					    dcl_texcoord v0
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    mov r0, c4
					    mul r0.xy, r0, c1
					    mov r1.yz, c0
					    cmp r0.xy, r1.y, c1, r0
					    add r0.xy, -r0, v0
					    texld r2, r0, s0
					    add r1.xyw, r2.xyzz, r2.xyzz
					    mad r3.xy, c0, -r0.w, r0
					    mad r0.xy, c0, r0.w, r0
					    texld_pp r4, r0, s0
					    texld_pp r3, r3, s0
					    add r0.xyw, r4.xyzz, r3.xyzz
					    mad r0.xyw, r0, c5.x, -r1
					    mad r1.xyw, r0, -c5.y, r2.xyzz
					    mul r1.xyw, r1, c2.x
					    mad_pp r1.xyw, r1, c5.z, r2.xyzz
					    max_pp r2.xyz, r1.xyww, c5.w
					    add r0.xyw, r0, r2.xyzz
					    mul_pp r0.xyw, r0, c6.x
					    max_pp r1.x, r0.y, r0.w
					    max_pp r2.w, r0.x, r1.x
					    add r1.x, r2.w, c4.x
					    rcp r1.x, r1.x
					    mul_pp r0.xyw, r0, r1.x
					    dp3_pp r0.x, r0.xyww, c6.yzww
					    max_pp r0.y, r2.y, r2.z
					    max_pp r1.x, r2.x, r0.y
					    add r0.y, r1.x, c4.x
					    rcp r0.y, r0.y
					    mul_pp r2.xyz, r0.y, r2
					    dp3_pp r0.y, r2, c6.yzww
					    add r0.x, -r0.y, r0.x
					    max_pp r0.y, r3.y, r3.z
					    max_pp r1.x, r3.x, r0.y
					    add r0.y, r1.x, c4.x
					    rcp r0.y, r0.y
					    mul r1.xyw, r0.y, r3.xyzz
					    max_pp r0.y, r4.y, r4.z
					    max_pp r3.x, r4.x, r0.y
					    add r0.y, r3.x, c4.x
					    rcp r0.y, r0.y
					    mul r3.xyz, r0.y, r4
					    min r4.xyz, r1.xyww, r3
					    max r5.xyz, r1.xyww, r3
					    mad r1.xyw, r0_abs.x, c5.x, r5.xyzz
					    mad r0.xyw, r0_abs.x, -c5.x, r4.xyzz
					    add r3.xyz, r0.xyww, r1.xyww
					    add r0.xyw, -r0, r1
					    mul r0.xyw, r0, c4.w
					    mul r3.xyz, r3, c4.w
					    rcp r4.x, r0.x
					    rcp r4.y, r0.y
					    rcp r4.z, r0.w
					    texld r5, v0.zwzw, s2
					    add r0.xy, -r5, v0.zwzw
					    dp2add r0.w, r5, r5, c5.w
					    rsq r0.w, r0.w
					    rcp r0.w, r0.w
					    texld r5, r0, s1
					    max_pp r0.x, r5.y, r5.z
					    max_pp r1.x, r5.x, r0.x
					    add r0.x, r1.x, c4.x
					    rcp r0.x, r0.x
					    mad r6.xyz, r5, r0.x, -r3
					    mul r7.xyz, r0.x, r5
					    mov r3.w, r5.w
					    mul r1.xyw, r4.xyzz, r6.xyzz
					    max r0.x, r1_abs.y, r1_abs.w
					    max r4.x, r1_abs.x, r0.x
					    rcp r0.x, r4.x
					    add r0.y, -r4.x, c4.x
					    mov r6.w, c5.w
					    mad r4, r6, r0.x, r3
					    mov r7.w, r3.w
					    cmp r3, r0.y, r7, r4
					    mad r0.x, r1.z, -c7.x, r0.w
					    mul r0.y, r0.w, c3.z
					    lrp r1.x, r0.y, c3.y, c3.x
					    max r0.y, r1.x, c3.y
					    min r1.x, c3.x, r0.y
					    mul r0.y, r0.z, c0.z
					    rcp r0.y, r0.y
					    mul_sat r0.x, r0.y, r0.x
					    mad r0.y, r0.x, c7.y, c7.z
					    mul r0.x, r0.x, r0.x
					    mul_sat r2.w, r0.x, r0.y
					    lrp r0, r1.x, r3, r2
					    mul oC1.w, r0.w, c7.w
					    mov oC0.w, r0.w
					    max_pp r1.x, r0.y, r0.z
					    max_pp r2.x, r0.x, r1.x
					    add r0.w, -r2.x, c4.x
					    rcp r0.w, r0.w
					    mul r0.xyz, r0.w, r0
					    mov oC0.xyz, r0
					    mov oC1.xyz, r0
					
					// approximately 97 instruction slots used (5 texture, 92 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					// SV_Target                1   xyzw        1   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[9], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xyzw
					dcl_output o0.xyzw
					dcl_output o1.xyzw
					dcl_temps 6
					lt r0.x, cb0[2].y, l(0.000000)
					mul r0.yz, cb0[6].xxyx, l(0.000000, 1.000000, -1.000000, 0.000000)
					movc r0.xy, r0.xxxx, r0.yzyy, cb0[6].xyxx
					add r0.xy, -r0.xyxx, v1.xyxx
					mad r0.zw, -cb0[2].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000), r0.xxxy
					sample r1.xyzw, r0.zwzz, t1.xyzw, s0
					max r0.z, r1.z, r1.y
					max r0.z, r0.z, r1.x
					add r0.z, r0.z, l(1.000000)
					div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					mul r2.xyz, r0.zzzz, r1.xyzx
					mad r0.zw, cb0[2].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000), r0.xxxy
					sample r3.xyzw, r0.xyxx, t1.xyzw, s0
					sample r0.xyzw, r0.zwzz, t1.xyzw, s0
					max r0.w, r0.z, r0.y
					max r0.w, r0.w, r0.x
					add r0.w, r0.w, l(1.000000)
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					mul r4.xyz, r0.wwww, r0.xyzx
					add r0.xyz, r0.xyzx, r1.xyzx
					min r1.xyz, r2.xyzx, r4.xyzx
					max r2.xyz, r2.xyzx, r4.xyzx
					add r4.xyz, r3.xyzx, r3.xyzx
					mad r0.xyz, r0.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), -r4.xyzx
					mad r4.xyz, -r0.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000), r3.xyzx
					mul r4.xyz, r4.xyzx, cb0[7].xxxx
					mad r3.xyz, r4.xyzx, l(2.718282, 2.718282, 2.718282, 0.000000), r3.xyzx
					max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r0.xyz, r0.xyzx, r3.xyzx
					mul r0.xyz, r0.xyzx, l(0.142857, 0.142857, 0.142857, 0.000000)
					max r0.w, r0.z, r0.y
					max r0.w, r0.w, r0.x
					add r0.w, r0.w, l(1.000000)
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.x, r0.xyzx, l(0.039682, 0.458022, 0.006097, 0.000000)
					max r0.y, r3.z, r3.y
					max r0.y, r0.y, r3.x
					add r0.y, r0.y, l(1.000000)
					div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
					mul r3.xyz, r0.yyyy, r3.xyzx
					dp3 r0.y, r3.xyzx, l(0.039682, 0.458022, 0.006097, 0.000000)
					add r0.x, -r0.y, r0.x
					mad r0.yzw, -|r0.xxxx|, l(0.000000, 4.000000, 4.000000, 4.000000), r1.xxyz
					mad r1.xyz, |r0.xxxx|, l(4.000000, 4.000000, 4.000000, 0.000000), r2.xyzx
					add r2.xyz, r0.yzwy, r1.xyzx
					add r0.xyz, -r0.yzwy, r1.xyzx
					mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
					mul r1.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
					sample r2.xyzw, v1.zwzz, t0.xyzw, s2
					add r2.zw, -r2.xxxy, v1.zzzw
					dp2 r0.w, r2.xyxx, r2.xyxx
					sqrt r0.w, r0.w
					sample r2.xyzw, r2.zwzz, t2.xyzw, s1
					max r4.x, r2.z, r2.y
					max r4.x, r2.x, r4.x
					add r4.x, r4.x, l(1.000000)
					div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r4.x
					mad r5.xyz, r2.xyzx, r4.xxxx, -r1.xyzx
					mul r4.xyz, r2.xyzx, r4.xxxx
					mov r1.w, r2.w
					div r0.xyz, r5.xyzx, r0.xyzx
					max r0.y, |r0.z|, |r0.y|
					max r0.x, r0.y, |r0.x|
					mov r5.w, l(0)
					div r2.xyzw, r5.xyzw, r0.xxxx
					lt r0.x, l(1.000000), r0.x
					add r2.xyzw, r1.xyzw, r2.xyzw
					mov r4.w, r1.w
					movc r1.xyzw, r0.xxxx, r2.xyzw, r4.xyzw
					mad r0.x, -cb0[2].z, l(0.002000), r0.w
					mul r0.y, r0.w, cb0[8].z
					mul r0.z, cb0[2].z, l(0.001500)
					div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
					mul_sat r0.x, r0.z, r0.x
					mad r0.z, r0.x, l(-2.000000), l(3.000000)
					mul r0.x, r0.x, r0.x
					mul r0.x, r0.x, r0.z
					min r3.w, r0.x, l(1.000000)
					add r1.xyzw, r1.xyzw, -r3.xyzw
					add r0.x, -cb0[8].x, cb0[8].y
					mad r0.x, r0.y, r0.x, cb0[8].x
					max r0.x, r0.x, cb0[8].y
					min r0.x, r0.x, cb0[8].x
					mad r0.xyzw, r0.xxxx, r1.xyzw, r3.xyzw
					max r1.x, r0.z, r0.y
					max r1.x, r0.x, r1.x
					add r1.x, -r1.x, l(1.000000)
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul r0.xyz, r0.xyzx, r1.xxxx
					mov o1.xyz, r0.xyzx
					mov o0.xyzw, r0.xyzw
					mul o1.w, r0.w, l(0.850000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 356975
			Program "vp" {
				SubProgram "d3d9 " {
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_ST         c8       1
					//
					
					    vs_3_0
					    def c9, 1, 0, 0, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    mad r0, v0.xyzx, c9.xxxy, c9.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mad o2.xy, v1, c8, c8.zwzw
					    mov o1.xy, v1
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 13 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mad o1.zw, v1.xxxy, cb0[3].xxxy, cb0[3].zzzw
					mov o1.xy, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _MainTex;
					//
					//
					// Registers:
					//
					//   Name         Reg   Size
					//   ------------ ----- ----
					//   _MainTex     s0       1
					//
					
					    ps_3_0
					    def c0, 0, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    texld r0, v0, s0
					    mov oC0.xyz, r0
					    mov oC0.w, c0.x
					
					// approximately 3 instruction slots used (1 texture, 2 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 1
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mov o0.xyz, r0.xyzx
					mov o0.w, l(0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
}