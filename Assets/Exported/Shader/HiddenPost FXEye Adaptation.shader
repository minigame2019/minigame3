Shader "Hidden/Post FX/Eye Adaptation" {
	Properties {
		_MainTex ("Texture", 2D) = "white" {}
	}
	SubShader {
		Pass {
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 42405
			Program "vp" {
				SubProgram "d3d11 " {
					"!!vs_5_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_5_0
					dcl_globalFlags refactoringAllowed
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mad o1.zw, v1.xxxy, cb0[3].xxxy, cb0[3].zzzw
					mov o1.xy, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "AUTO_KEY_VALUE" }
					"!!vs_5_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_5_0
					dcl_globalFlags refactoringAllowed
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mad o1.zw, v1.xxxy, cb0[3].xxxy, cb0[3].zzzw
					mov o1.xy, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!ps_5_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float       
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_5_0
					dcl_globalFlags refactoringAllowed
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_structured t1, 4
					dcl_output o0.xyzw
					dcl_temps 4
					mov r0.xy, l(0,0,0,0)
					loop 
					  uge r0.z, r0.y, l(64)
					  breakc_nz r0.z
					  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r0.z, r0.y, l(0), t1.xxxx
					  umax r0.x, r0.z, r0.x
					  iadd r0.y, r0.y, l(1)
					endloop 
					utof r0.x, r0.x
					div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
					mov r0.yz, l(0,0,0,0)
					loop 
					  uge r0.w, r0.y, l(64)
					  breakc_nz r0.w
					  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r0.w, r0.y, l(0), t1.xxxx
					  utof r0.w, r0.w
					  mad r0.z, r0.w, r0.x, r0.z
					  iadd r0.y, r0.y, l(1)
					endloop 
					mul r0.yz, r0.zzzz, cb0[4].xxyx
					mov r1.xy, r0.yzyy
					mov r0.w, l(0)
					mov r2.xy, l(0,0,0,0)
					loop 
					  uge r1.w, r0.w, l(64)
					  breakc_nz r1.w
					  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r1.w, r0.w, l(0), t1.xxxx
					  utof r1.w, r1.w
					  mul r2.z, r0.x, r1.w
					  min r2.z, r1.x, r2.z
					  mad r1.w, r1.w, r0.x, -r2.z
					  add r1.xz, r1.xxyx, -r2.zzzz
					  min r3.y, r1.w, r1.z
					  add r1.y, r1.z, -r3.y
					  utof r1.z, r0.w
					  mad r1.z, r1.z, l(0.015625), -cb0[6].y
					  div r1.z, r1.z, cb0[6].x
					  exp r1.z, r1.z
					  mul r3.x, r3.y, r1.z
					  add r2.xy, r3.xyxx, r2.xyxx
					  iadd r0.w, r0.w, l(1)
					endloop 
					max r0.x, r2.y, l(0.000100)
					div r0.x, r2.x, r0.x
					max r0.x, r0.x, cb0[4].z
					min r0.x, r0.x, cb0[4].w
					max r0.x, r0.x, l(0.000100)
					div r0.x, cb0[7].x, r0.x
					sample_indexable(texture2d)(float,float,float,float) r0.y, l(0.500000, 0.500000, 0.000000, 0.000000), t0.yxzw, s0
					add r0.x, -r0.y, r0.x
					lt r0.z, l(0.000000), r0.x
					movc r0.z, r0.z, cb0[5].x, cb0[5].y
					mul r0.z, r0.z, -cb1[3].x
					exp r0.z, r0.z
					add r0.z, -r0.z, l(1.000000)
					mad o0.xyzw, r0.xxxx, r0.zzzz, r0.yyyy
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "AUTO_KEY_VALUE" }
					"!!ps_5_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float       
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_5_0
					dcl_globalFlags refactoringAllowed
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_structured t1, 4
					dcl_output o0.xyzw
					dcl_temps 4
					mov r0.xy, l(0,0,0,0)
					loop 
					  uge r0.z, r0.y, l(64)
					  breakc_nz r0.z
					  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r0.z, r0.y, l(0), t1.xxxx
					  umax r0.x, r0.z, r0.x
					  iadd r0.y, r0.y, l(1)
					endloop 
					utof r0.x, r0.x
					div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
					mov r0.yz, l(0,0,0,0)
					loop 
					  uge r0.w, r0.y, l(64)
					  breakc_nz r0.w
					  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r0.w, r0.y, l(0), t1.xxxx
					  utof r0.w, r0.w
					  mad r0.z, r0.w, r0.x, r0.z
					  iadd r0.y, r0.y, l(1)
					endloop 
					mul r0.yz, r0.zzzz, cb0[4].xxyx
					mov r1.xy, r0.yzyy
					mov r0.w, l(0)
					mov r2.xy, l(0,0,0,0)
					loop 
					  uge r1.w, r0.w, l(64)
					  breakc_nz r1.w
					  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r1.w, r0.w, l(0), t1.xxxx
					  utof r1.w, r1.w
					  mul r2.z, r0.x, r1.w
					  min r2.z, r1.x, r2.z
					  mad r1.w, r1.w, r0.x, -r2.z
					  add r1.xz, r1.xxyx, -r2.zzzz
					  min r3.y, r1.w, r1.z
					  add r1.y, r1.z, -r3.y
					  utof r1.z, r0.w
					  mad r1.z, r1.z, l(0.015625), -cb0[6].y
					  div r1.z, r1.z, cb0[6].x
					  exp r1.z, r1.z
					  mul r3.x, r3.y, r1.z
					  add r2.xy, r3.xyxx, r2.xyxx
					  iadd r0.w, r0.w, l(1)
					endloop 
					max r0.x, r2.y, l(0.000100)
					div r0.x, r2.x, r0.x
					max r0.x, r0.x, cb0[4].z
					min r0.x, r0.x, cb0[4].w
					max r0.x, r0.x, l(0.000100)
					add r0.y, r0.x, l(1.000000)
					log r0.y, r0.y
					add r0.y, r0.y, l(2.000000)
					div r0.y, l(2.000000), r0.y
					add r0.y, -r0.y, l(1.030000)
					div r0.x, r0.y, r0.x
					sample_indexable(texture2d)(float,float,float,float) r0.y, l(0.500000, 0.500000, 0.000000, 0.000000), t0.yxzw, s0
					add r0.x, -r0.y, r0.x
					lt r0.z, l(0.000000), r0.x
					movc r0.z, r0.z, cb0[5].x, cb0[5].y
					mul r0.z, r0.z, -cb1[3].x
					exp r0.z, r0.z
					add r0.z, -r0.z, l(1.000000)
					mad o0.xyzw, r0.xxxx, r0.zzzz, r0.yyyy
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 92698
			Program "vp" {
				SubProgram "d3d11 " {
					"!!vs_5_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_5_0
					dcl_globalFlags refactoringAllowed
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mad o1.zw, v1.xxxy, cb0[3].xxxy, cb0[3].zzzw
					mov o1.xy, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "AUTO_KEY_VALUE" }
					"!!vs_5_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_5_0
					dcl_globalFlags refactoringAllowed
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mad o1.zw, v1.xxxy, cb0[3].xxxy, cb0[3].zzzw
					mov o1.xy, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!ps_5_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float       
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_5_0
					dcl_globalFlags refactoringAllowed
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_resource_structured t0, 4
					dcl_output o0.xyzw
					dcl_temps 4
					mov r0.xy, l(0,0,0,0)
					loop 
					  uge r0.z, r0.y, l(64)
					  breakc_nz r0.z
					  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r0.z, r0.y, l(0), t0.xxxx
					  umax r0.x, r0.z, r0.x
					  iadd r0.y, r0.y, l(1)
					endloop 
					utof r0.x, r0.x
					div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
					mov r0.yz, l(0,0,0,0)
					loop 
					  uge r0.w, r0.y, l(64)
					  breakc_nz r0.w
					  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r0.w, r0.y, l(0), t0.xxxx
					  utof r0.w, r0.w
					  mad r0.z, r0.w, r0.x, r0.z
					  iadd r0.y, r0.y, l(1)
					endloop 
					mul r0.yz, r0.zzzz, cb0[4].xxyx
					mov r1.xy, r0.yzyy
					mov r0.w, l(0)
					mov r2.xy, l(0,0,0,0)
					loop 
					  uge r1.w, r0.w, l(64)
					  breakc_nz r1.w
					  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r1.w, r0.w, l(0), t0.xxxx
					  utof r1.w, r1.w
					  mul r2.z, r0.x, r1.w
					  min r2.z, r1.x, r2.z
					  mad r1.w, r1.w, r0.x, -r2.z
					  add r1.xz, r1.xxyx, -r2.zzzz
					  min r3.y, r1.w, r1.z
					  add r1.y, r1.z, -r3.y
					  utof r1.z, r0.w
					  mad r1.z, r1.z, l(0.015625), -cb0[6].y
					  div r1.z, r1.z, cb0[6].x
					  exp r1.z, r1.z
					  mul r3.x, r3.y, r1.z
					  add r2.xy, r3.xyxx, r2.xyxx
					  iadd r0.w, r0.w, l(1)
					endloop 
					max r0.x, r2.y, l(0.000100)
					div r0.x, r2.x, r0.x
					max r0.x, r0.x, cb0[4].z
					min r0.x, r0.x, cb0[4].w
					max r0.x, r0.x, l(0.000100)
					div o0.xyzw, cb0[7].xxxx, r0.xxxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "AUTO_KEY_VALUE" }
					"!!ps_5_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float       
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_5_0
					dcl_globalFlags refactoringAllowed
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_resource_structured t0, 4
					dcl_output o0.xyzw
					dcl_temps 4
					mov r0.xy, l(0,0,0,0)
					loop 
					  uge r0.z, r0.y, l(64)
					  breakc_nz r0.z
					  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r0.z, r0.y, l(0), t0.xxxx
					  umax r0.x, r0.z, r0.x
					  iadd r0.y, r0.y, l(1)
					endloop 
					utof r0.x, r0.x
					div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
					mov r0.yz, l(0,0,0,0)
					loop 
					  uge r0.w, r0.y, l(64)
					  breakc_nz r0.w
					  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r0.w, r0.y, l(0), t0.xxxx
					  utof r0.w, r0.w
					  mad r0.z, r0.w, r0.x, r0.z
					  iadd r0.y, r0.y, l(1)
					endloop 
					mul r0.yz, r0.zzzz, cb0[4].xxyx
					mov r1.xy, r0.yzyy
					mov r0.w, l(0)
					mov r2.xy, l(0,0,0,0)
					loop 
					  uge r1.w, r0.w, l(64)
					  breakc_nz r1.w
					  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r1.w, r0.w, l(0), t0.xxxx
					  utof r1.w, r1.w
					  mul r2.z, r0.x, r1.w
					  min r2.z, r1.x, r2.z
					  mad r1.w, r1.w, r0.x, -r2.z
					  add r1.xz, r1.xxyx, -r2.zzzz
					  min r3.y, r1.w, r1.z
					  add r1.y, r1.z, -r3.y
					  utof r1.z, r0.w
					  mad r1.z, r1.z, l(0.015625), -cb0[6].y
					  div r1.z, r1.z, cb0[6].x
					  exp r1.z, r1.z
					  mul r3.x, r3.y, r1.z
					  add r2.xy, r3.xyxx, r2.xyxx
					  iadd r0.w, r0.w, l(1)
					endloop 
					max r0.x, r2.y, l(0.000100)
					div r0.x, r2.x, r0.x
					max r0.x, r0.x, cb0[4].z
					min r0.x, r0.x, cb0[4].w
					max r0.x, r0.x, l(0.000100)
					add r0.y, r0.x, l(1.000000)
					log r0.y, r0.y
					add r0.y, r0.y, l(2.000000)
					div r0.y, l(2.000000), r0.y
					add r0.y, -r0.y, l(1.030000)
					div o0.xyzw, r0.yyyy, r0.xxxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 181592
			Program "vp" {
				SubProgram "d3d11 " {
					"!!vs_5_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     z         1     NONE   float     z 
					// TEXCOORD                 2      w        1     NONE   float      w
					//
					vs_5_0
					dcl_globalFlags refactoringAllowed
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_resource_structured t0, 4
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.z
					dcl_output o1.w
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mov r0.xy, l(0,0,0,0)
					loop 
					  uge r0.z, r0.y, l(64)
					  breakc_nz r0.z
					  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r0.z, r0.y, l(0), t0.xxxx
					  umax r0.x, r0.z, r0.x
					  iadd r0.y, r0.y, l(1)
					endloop 
					utof r0.x, r0.x
					div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
					mov r0.yz, l(0,0,0,0)
					loop 
					  uge r0.w, r0.y, l(64)
					  breakc_nz r0.w
					  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r0.w, r0.y, l(0), t0.xxxx
					  utof r0.w, r0.w
					  mad r0.z, r0.w, r0.x, r0.z
					  iadd r0.y, r0.y, l(1)
					endloop 
					mul r0.yz, r0.zzzz, cb0[4].xxyx
					mov r1.xy, r0.yzyy
					mov r0.w, l(0)
					mov r2.xy, l(0,0,0,0)
					loop 
					  uge r1.w, r0.w, l(64)
					  breakc_nz r1.w
					  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r1.w, r0.w, l(0), t0.xxxx
					  utof r1.w, r1.w
					  mul r2.z, r0.x, r1.w
					  min r2.z, r1.x, r2.z
					  mad r1.w, r1.w, r0.x, -r2.z
					  add r1.xz, r1.xxyx, -r2.zzzz
					  min r3.y, r1.w, r1.z
					  add r1.y, r1.z, -r3.y
					  utof r1.z, r0.w
					  mad r1.z, r1.z, l(0.015625), -cb0[6].y
					  div r1.z, r1.z, cb0[6].x
					  exp r1.z, r1.z
					  mul r3.x, r3.y, r1.z
					  add r2.xy, r3.xyxx, r2.xyxx
					  iadd r0.w, r0.w, l(1)
					endloop 
					max r0.y, r2.y, l(0.000100)
					div r0.y, r2.x, r0.y
					max r0.y, r0.y, cb0[4].z
					min o1.w, r0.y, cb0[4].w
					mov o1.xy, v1.xyxx
					mov o1.z, r0.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "AUTO_KEY_VALUE" }
					"!!vs_5_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     z         1     NONE   float     z 
					// TEXCOORD                 2      w        1     NONE   float      w
					//
					vs_5_0
					dcl_globalFlags refactoringAllowed
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_resource_structured t0, 4
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.z
					dcl_output o1.w
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mov r0.xy, l(0,0,0,0)
					loop 
					  uge r0.z, r0.y, l(64)
					  breakc_nz r0.z
					  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r0.z, r0.y, l(0), t0.xxxx
					  umax r0.x, r0.z, r0.x
					  iadd r0.y, r0.y, l(1)
					endloop 
					utof r0.x, r0.x
					div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
					mov r0.yz, l(0,0,0,0)
					loop 
					  uge r0.w, r0.y, l(64)
					  breakc_nz r0.w
					  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r0.w, r0.y, l(0), t0.xxxx
					  utof r0.w, r0.w
					  mad r0.z, r0.w, r0.x, r0.z
					  iadd r0.y, r0.y, l(1)
					endloop 
					mul r0.yz, r0.zzzz, cb0[4].xxyx
					mov r1.xy, r0.yzyy
					mov r0.w, l(0)
					mov r2.xy, l(0,0,0,0)
					loop 
					  uge r1.w, r0.w, l(64)
					  breakc_nz r1.w
					  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r1.w, r0.w, l(0), t0.xxxx
					  utof r1.w, r1.w
					  mul r2.z, r0.x, r1.w
					  min r2.z, r1.x, r2.z
					  mad r1.w, r1.w, r0.x, -r2.z
					  add r1.xz, r1.xxyx, -r2.zzzz
					  min r3.y, r1.w, r1.z
					  add r1.y, r1.z, -r3.y
					  utof r1.z, r0.w
					  mad r1.z, r1.z, l(0.015625), -cb0[6].y
					  div r1.z, r1.z, cb0[6].x
					  exp r1.z, r1.z
					  mul r3.x, r3.y, r1.z
					  add r2.xy, r3.xyxx, r2.xyxx
					  iadd r0.w, r0.w, l(1)
					endloop 
					max r0.y, r2.y, l(0.000100)
					div r0.y, r2.x, r0.y
					max r0.y, r0.y, cb0[4].z
					min o1.w, r0.y, cb0[4].w
					mov o1.xy, v1.xyxx
					mov o1.z, r0.x
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!ps_5_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   x   
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     z         1     NONE   float     z 
					// TEXCOORD                 2      w        1     NONE   float      w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_5_0
					dcl_globalFlags refactoringAllowed
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_resource_structured t0, 4
					dcl_input_ps_siv linear noperspective v0.x, position
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v1.z
					dcl_input_ps linear v1.w
					dcl_output o0.xyzw
					dcl_temps 2
					log r0.xy, cb0[4].zwzz
					mad_sat r0.xy, r0.xyxx, cb0[6].xxxx, cb0[6].yyyy
					lt r0.x, r0.x, v1.x
					lt r0.y, v1.x, r0.y
					and r0.x, r0.y, r0.x
					mul r0.y, v1.x, l(64.000000)
					round_ne r0.y, r0.y
					ftou r0.y, r0.y
					ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r0.y, r0.y, l(0), t0.xxxx
					utof r0.y, r0.y
					mul_sat r0.y, r0.y, v1.z
					ge r0.y, r0.y, v1.y
					and r0.z, r0.y, l(0x3f800000)
					movc r1.xyz, r0.yyyy, l(0.100000,0.800000,1.200000,0), l(0.050000,0.400000,0.600000,0)
					movc r0.xyz, r0.xxxx, r1.xyzx, r0.zzzz
					log r0.w, v1.w
					mad_sat r0.w, r0.w, cb0[6].x, cb0[6].y
					itof r1.x, cb0[7].y
					mad r0.w, -r0.w, r1.x, v0.x
					lt r0.w, |r0.w|, l(2.000000)
					movc o0.xyz, r0.wwww, l(0.800000,0.300000,0.050000,0), r0.xyzx
					mov o0.w, l(0.700000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "AUTO_KEY_VALUE" }
					"!!ps_5_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   x   
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     z         1     NONE   float     z 
					// TEXCOORD                 2      w        1     NONE   float      w
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_5_0
					dcl_globalFlags refactoringAllowed
					dcl_constantbuffer CB0[8], immediateIndexed
					dcl_resource_structured t0, 4
					dcl_input_ps_siv linear noperspective v0.x, position
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v1.z
					dcl_input_ps linear v1.w
					dcl_output o0.xyzw
					dcl_temps 2
					log r0.xy, cb0[4].zwzz
					mad_sat r0.xy, r0.xyxx, cb0[6].xxxx, cb0[6].yyyy
					lt r0.x, r0.x, v1.x
					lt r0.y, v1.x, r0.y
					and r0.x, r0.y, r0.x
					mul r0.y, v1.x, l(64.000000)
					round_ne r0.y, r0.y
					ftou r0.y, r0.y
					ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r0.y, r0.y, l(0), t0.xxxx
					utof r0.y, r0.y
					mul_sat r0.y, r0.y, v1.z
					ge r0.y, r0.y, v1.y
					and r0.z, r0.y, l(0x3f800000)
					movc r1.xyz, r0.yyyy, l(0.100000,0.800000,1.200000,0), l(0.050000,0.400000,0.600000,0)
					movc r0.xyz, r0.xxxx, r1.xyzx, r0.zzzz
					log r0.w, v1.w
					mad_sat r0.w, r0.w, cb0[6].x, cb0[6].y
					itof r1.x, cb0[7].y
					mad r0.w, -r0.w, r1.x, v0.x
					lt r0.w, |r0.w|, l(2.000000)
					movc o0.xyz, r0.wwww, l(0.800000,0.300000,0.050000,0), r0.xyzx
					mov o0.w, l(0.700000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
}