Shader "Example/Slices" {
	Properties {
		_Color ("Main Color", Vector) = (1,1,1,1)
		_SliceCount ("Slice Count", Range(0, 10)) = 5
		_SliceSpeed ("Slice Speed", Range(0, 60)) = 10
	}
	SubShader {
		Tags { "QUEUE" = "Transparent" "RenderType" = "Transparent" }
		Pass {
			Name "FORWARD"
			Tags { "LIGHTMODE" = "FORWARDBASE" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
			Blend SrcAlpha OneMinusSrcAlpha, SrcAlpha OneMinusSrcAlpha
			ColorMask RGB -1
			ZClip Off
			ZWrite Off
			Cull Off
			GpuProgramID 37384
			Program "vp" {
				SubProgram "d3d9 " {
					Keywords { "DIRECTIONAL" }
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//   float4 unity_SHAb;
					//   float4 unity_SHAg;
					//   float4 unity_SHAr;
					//   float4 unity_SHBb;
					//   float4 unity_SHBg;
					//   float4 unity_SHBr;
					//   float4 unity_SHC;
					//   row_major float4x4 unity_WorldToObject;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   unity_WorldToObject c8       3
					//   unity_SHAr          c11      1
					//   unity_SHAg          c12      1
					//   unity_SHAb          c13      1
					//   unity_SHBr          c14      1
					//   unity_SHBg          c15      1
					//   unity_SHBb          c16      1
					//   unity_SHC           c17      1
					//
					
					    vs_3_0
					    def c18, 1, 0, 0, 0
					    dcl_position v0
					    dcl_normal v1
					    dcl_position o0
					    dcl_texcoord o1.xyz
					    dcl_texcoord1 o2.xyz
					    dcl_texcoord2 o3.xyz
					    mad r0, v0.xyzx, c18.xxxy, c18.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r4.x, c4, r1
					    dp4 r4.y, c5, r1
					    dp4 r4.z, c6, r1
					    dp4 r4.w, c7, r1
					    dp4 o2.x, c0, v0
					    dp4 o2.y, c1, v0
					    dp4 o2.z, c2, v0
					    mul r0.xyz, c9, v1.y
					    mad r0.xyz, v1.x, c8, r0
					    mad r0.xyz, v1.z, c10, r0
					    nrm r1.xyz, r0
					    mul r0.x, r1.y, r1.y
					    mad r0.x, r1.x, r1.x, -r0.x
					    mul r2, r1.yzzx, r1.xyzz
					    dp4 r3.x, c14, r2
					    dp4 r3.y, c15, r2
					    dp4 r3.z, c16, r2
					    mad r0.xyz, c17, r0.x, r3
					    mov r1.w, c18.x
					    dp4 r2.x, c11, r1
					    dp4 r2.y, c12, r1
					    dp4 r2.z, c13, r1
					    mov o1.xyz, r1
					    add r0.xyz, r0, r2
					    max o3.xyz, r0, c18.y
					    mad o0.xy, r4.w, c255, r4
					    mov o0.zw, r4
					
					// approximately 34 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[45], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_temps 4
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb2[18].xyzw
					mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb1[4].xyzx
					dp3 r0.y, v2.xyzx, cb1[5].xyzx
					dp3 r0.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mov o1.xyz, r0.xyzx
					mul r1.x, r0.y, r0.y
					mad r1.x, r0.x, r0.x, -r1.x
					mul r2.xyzw, r0.yzzx, r0.xyzz
					dp4 r3.x, cb0[41].xyzw, r2.xyzw
					dp4 r3.y, cb0[42].xyzw, r2.xyzw
					dp4 r3.z, cb0[43].xyzw, r2.xyzw
					mad r1.xyz, cb0[44].xyzx, r1.xxxx, r3.xyzx
					mov r0.w, l(1.000000)
					dp4 r2.x, cb0[38].xyzw, r0.xyzw
					dp4 r2.y, cb0[39].xyzw, r0.xyzw
					dp4 r2.z, cb0[40].xyzw, r0.xyzw
					add r0.xyz, r1.xyzx, r2.xyzx
					max o3.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d9 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 unity_4LightAtten0;
					//   float4 unity_4LightPosX0;
					//   float4 unity_4LightPosY0;
					//   float4 unity_4LightPosZ0;
					//   float4 unity_LightColor[8];
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//   float4 unity_SHAb;
					//   float4 unity_SHAg;
					//   float4 unity_SHAr;
					//   float4 unity_SHBb;
					//   float4 unity_SHBg;
					//   float4 unity_SHBr;
					//   float4 unity_SHC;
					//   row_major float4x4 unity_WorldToObject;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_LightColor    c0       4
					//   unity_ObjectToWorld c4       4
					//   unity_MatrixVP      c8       4
					//   unity_WorldToObject c12      3
					//   unity_4LightPosX0   c15      1
					//   unity_4LightPosY0   c16      1
					//   unity_4LightPosZ0   c17      1
					//   unity_4LightAtten0  c18      1
					//   unity_SHAr          c19      1
					//   unity_SHAg          c20      1
					//   unity_SHAb          c21      1
					//   unity_SHBr          c22      1
					//   unity_SHBg          c23      1
					//   unity_SHBb          c24      1
					//   unity_SHC           c25      1
					//
					
					    vs_3_0
					    def c26, 1, 0, 9.99999997e-007, 0
					    dcl_position v0
					    dcl_normal v1
					    dcl_position o0
					    dcl_texcoord o1.xyz
					    dcl_texcoord1 o2.xyz
					    dcl_texcoord2 o3.xyz
					    mad r0, v0.xyzx, c26.xxxy, c26.yyyx
					    dp4 r1.x, c4, r0
					    dp4 r1.y, c5, r0
					    dp4 r1.z, c6, r0
					    dp4 r1.w, c7, r0
					    dp4 r6.x, c8, r1
					    dp4 r6.y, c9, r1
					    dp4 r6.z, c10, r1
					    dp4 r6.w, c11, r1
					    mul r0.xyz, c13, v1.y
					    mad r0.xyz, v1.x, c12, r0
					    mad r0.xyz, v1.z, c14, r0
					    nrm r1.xyz, r0
					    mul r0.x, r1.y, r1.y
					    mad r0.x, r1.x, r1.x, -r0.x
					    mul r2, r1.yzzx, r1.xyzz
					    dp4 r3.x, c22, r2
					    dp4 r3.y, c23, r2
					    dp4 r3.z, c24, r2
					    mad r0.xyz, c25, r0.x, r3
					    mov r1.w, c26.x
					    dp4 r2.x, c19, r1
					    dp4 r2.y, c20, r1
					    dp4 r2.z, c21, r1
					    add r0.xyz, r0, r2
					    max r0.xyz, r0, c26.y
					    dp4 r2.y, c5, v0
					    add r3, -r2.y, c16
					    mul r4, r1.y, r3
					    mul r3, r3, r3
					    dp4 r2.x, c4, v0
					    add r5, -r2.x, c15
					    mad r4, r5, r1.x, r4
					    mad r3, r5, r5, r3
					    dp4 r2.z, c6, v0
					    add r5, -r2.z, c17
					    mov o2.xyz, r2
					    mad r2, r5, r1.z, r4
					    mov o1.xyz, r1
					    mad r1, r5, r5, r3
					    max r1, r1, c26.z
					    rsq r3.x, r1.x
					    rsq r3.y, r1.y
					    rsq r3.z, r1.z
					    rsq r3.w, r1.w
					    mov r4.x, c26.x
					    mad r1, r1, c18, r4.x
					    mul r2, r2, r3
					    max r2, r2, c26.y
					    rcp r3.x, r1.x
					    rcp r3.y, r1.y
					    rcp r3.z, r1.z
					    rcp r3.w, r1.w
					    mul r1, r2, r3
					    mul r2.xyz, r1.y, c1
					    mad r2.xyz, c0, r1.x, r2
					    mad r1.xyz, c2, r1.z, r2
					    mad r1.xyz, c3, r1.w, r1
					    add o3.xyz, r0, r1
					    mad o0.xy, r6.w, c255, r6
					    mov o0.zw, r6
					
					// approximately 63 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[45], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_output o3.xyz
					dcl_temps 6
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb1[3].xyzw
					mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
					mul r2.xyzw, r1.yyyy, cb2[18].xyzw
					mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
					mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
					mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
					dp3 r1.x, v2.xyzx, cb1[4].xyzx
					dp3 r1.y, v2.xyzx, cb1[5].xyzx
					dp3 r1.z, v2.xyzx, cb1[6].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mov o1.xyz, r1.xyzx
					mov o2.xyz, r0.xyzx
					mul r0.w, r1.y, r1.y
					mad r0.w, r1.x, r1.x, -r0.w
					mul r2.xyzw, r1.yzzx, r1.xyzz
					dp4 r3.x, cb0[41].xyzw, r2.xyzw
					dp4 r3.y, cb0[42].xyzw, r2.xyzw
					dp4 r3.z, cb0[43].xyzw, r2.xyzw
					mad r2.xyz, cb0[44].xyzx, r0.wwww, r3.xyzx
					mov r1.w, l(1.000000)
					dp4 r3.x, cb0[38].xyzw, r1.xyzw
					dp4 r3.y, cb0[39].xyzw, r1.xyzw
					dp4 r3.z, cb0[40].xyzw, r1.xyzw
					add r2.xyz, r2.xyzx, r3.xyzx
					max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
					add r3.xyzw, -r0.yyyy, cb0[3].xyzw
					mul r4.xyzw, r1.yyyy, r3.xyzw
					mul r3.xyzw, r3.xyzw, r3.xyzw
					add r5.xyzw, -r0.xxxx, cb0[2].xyzw
					add r0.xyzw, -r0.zzzz, cb0[4].xyzw
					mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
					mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
					mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
					mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb0[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r3.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb0[7].xyzx
					mad r1.xyz, cb0[6].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb0[8].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb0[9].xyzx, r0.wwww, r0.xyzx
					add o3.xyz, r2.xyzx, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					Keywords { "DIRECTIONAL" }
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _Color;
					//   float4 _LightColor0;
					//   float _SliceCount;
					//   float _SliceSpeed;
					//   float4 _Time;
					//   float4 _WorldSpaceLightPos0;
					//
					//
					// Registers:
					//
					//   Name                 Reg   Size
					//   -------------------- ----- ----
					//   _Time                c0       1
					//   _WorldSpaceLightPos0 c1       1
					//   _LightColor0         c2       1
					//   _Color               c3       1
					//   _SliceCount          c4       1
					//   _SliceSpeed          c5       1
					//
					
					    ps_3_0
					    def c6, -0.5, 0, 0, 0
					    dcl_texcoord_pp v0.xyz
					    dcl_texcoord1 v1.y
					    dcl_texcoord2_pp v2.xyz
					    mov r0.x, c0.x
					    mad r0.x, r0.x, c5.x, v1.y
					    mul r0.x, r0.x, c4.x
					    frc r0.x, r0.x
					    add r0, r0.x, c6.x
					    texkill r0
					    mov r0.xyz, c3
					    mul_pp r0.xyz, r0, c2
					    dp3_pp r0.w, v0, c1
					    mul_pp r0.xyz, r0.w, r0
					    cmp_pp r0.xyz, r0.w, r0, c6.y
					    mad_pp r0.xyz, c3, v2, r0
					    add_pp oC0.xyz, r0, c3
					    mov_pp oC0.w, c3.w
					
					// approximately 14 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture3d (float,float,float,float) t0
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v2.xyz
					dcl_input_ps linear v3.xyz
					dcl_output o0.xyzw
					dcl_temps 2
					mad r0.x, cb1[0].x, cb0[5].y, v2.y
					mul r0.x, r0.x, cb0[5].x
					frc r0.x, r0.x
					add r0.x, r0.x, l(-0.500000)
					lt r0.x, r0.x, l(0.000000)
					discard_nz r0.x
					eq r0.x, cb3[0].x, l(1.000000)
					if_nz r0.x
					  eq r0.x, cb3[0].y, l(1.000000)
					  mul r0.yzw, v2.yyyy, cb3[2].xxyz
					  mad r0.yzw, cb3[1].xxyz, v2.xxxx, r0.yyzw
					  mad r0.yzw, cb3[3].xxyz, v2.zzzz, r0.yyzw
					  add r0.yzw, r0.yyzw, cb3[4].xxyz
					  movc r0.xyz, r0.xxxx, r0.yzwy, v2.xyzx
					  add r0.xyz, r0.xyzx, -cb3[6].xyzx
					  mul r0.yzw, r0.xxyz, cb3[5].xxyz
					  mad r0.y, r0.y, l(0.250000), l(0.750000)
					  mad r1.x, cb3[0].z, l(0.500000), l(0.750000)
					  max r0.x, r0.y, r1.x
					  sample r0.xyzw, r0.xzwx, t0.xyzw, s0
					else 
					  mov r0.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.x, r0.xyzw, cb2[45].xyzw
					mul r0.xyz, r0.xxxx, cb0[2].xyzx
					dp3 r0.w, v1.xyzx, cb2[0].xyzx
					max r0.w, r0.w, l(0.000000)
					mul r0.xyz, r0.xyzx, cb0[4].xyzx
					mul r1.xyz, v3.xyzx, cb0[4].xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, r1.xyzx
					add o0.xyz, r0.xyzx, cb0[4].xyzx
					mov o0.w, cb0[4].w
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "FORWARD"
			Tags { "LIGHTMODE" = "FORWARDADD" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
			Blend SrcAlpha One, SrcAlpha One
			ColorMask RGB -1
			ZClip Off
			ZWrite Off
			Cull Off
			GpuProgramID 75614
			Program "vp" {
				SubProgram "d3d9 " {
					Keywords { "POINT" }
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//   row_major float4x4 unity_WorldToObject;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   unity_WorldToObject c8       3
					//
					
					    vs_3_0
					    def c11, 1, 0, 0, 0
					    dcl_position v0
					    dcl_normal v1
					    dcl_position o0
					    dcl_texcoord o1.xyz
					    dcl_texcoord1 o2.xyz
					    mad r0, v0.xyzx, c11.xxxy, c11.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    dp4 o2.x, c0, v0
					    dp4 o2.y, c1, v0
					    dp4 o2.z, c2, v0
					    mul r0.xyz, c9, v1.y
					    mad r0.xyz, v1.x, c8, r0
					    mad r0.xyz, v1.z, c10, r0
					    dp3 r0.w, r0, r0
					    rsq r0.w, r0.w
					    mul o1.xyz, r0.w, r0
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 20 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d9 " {
					Keywords { "DIRECTIONAL" }
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//   row_major float4x4 unity_WorldToObject;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   unity_WorldToObject c8       3
					//
					
					    vs_3_0
					    def c11, 1, 0, 0, 0
					    dcl_position v0
					    dcl_normal v1
					    dcl_position o0
					    dcl_texcoord o1.xyz
					    dcl_texcoord1 o2.xyz
					    mad r0, v0.xyzx, c11.xxxy, c11.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    dp4 o2.x, c0, v0
					    dp4 o2.y, c1, v0
					    dp4 o2.z, c2, v0
					    mul r0.xyz, c9, v1.y
					    mad r0.xyz, v1.x, c8, r0
					    mad r0.xyz, v1.z, c10, r0
					    dp3 r0.w, r0, r0
					    rsq r0.w, r0.w
					    mul o1.xyz, r0.w, r0
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 20 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d9 " {
					Keywords { "SPOT" }
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//   row_major float4x4 unity_WorldToObject;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   unity_WorldToObject c8       3
					//
					
					    vs_3_0
					    def c11, 1, 0, 0, 0
					    dcl_position v0
					    dcl_normal v1
					    dcl_position o0
					    dcl_texcoord o1.xyz
					    dcl_texcoord1 o2.xyz
					    mad r0, v0.xyzx, c11.xxxy, c11.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    dp4 o2.x, c0, v0
					    dp4 o2.y, c1, v0
					    dp4 o2.z, c2, v0
					    mul r0.xyz, c9, v1.y
					    mad r0.xyz, v1.x, c8, r0
					    mad r0.xyz, v1.z, c10, r0
					    dp3 r0.w, r0, r0
					    rsq r0.w, r0.w
					    mul o1.xyz, r0.w, r0
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 20 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d9 " {
					Keywords { "POINT_COOKIE" }
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//   row_major float4x4 unity_WorldToObject;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   unity_WorldToObject c8       3
					//
					
					    vs_3_0
					    def c11, 1, 0, 0, 0
					    dcl_position v0
					    dcl_normal v1
					    dcl_position o0
					    dcl_texcoord o1.xyz
					    dcl_texcoord1 o2.xyz
					    mad r0, v0.xyzx, c11.xxxy, c11.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    dp4 o2.x, c0, v0
					    dp4 o2.y, c1, v0
					    dp4 o2.z, c2, v0
					    mul r0.xyz, c9, v1.y
					    mad r0.xyz, v1.x, c8, r0
					    mad r0.xyz, v1.z, c10, r0
					    dp3 r0.w, r0, r0
					    rsq r0.w, r0.w
					    mul o1.xyz, r0.w, r0
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 20 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d9 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//   row_major float4x4 unity_WorldToObject;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   unity_WorldToObject c8       3
					//
					
					    vs_3_0
					    def c11, 1, 0, 0, 0
					    dcl_position v0
					    dcl_normal v1
					    dcl_position o0
					    dcl_texcoord o1.xyz
					    dcl_texcoord1 o2.xyz
					    mad r0, v0.xyzx, c11.xxxy, c11.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    dp4 o2.x, c0, v0
					    dp4 o2.y, c1, v0
					    dp4 o2.z, c2, v0
					    mul r0.xyz, c9, v1.y
					    mad r0.xyz, v1.x, c8, r0
					    mad r0.xyz, v1.z, c10, r0
					    dp3 r0.w, r0, r0
					    rsq r0.w, r0.w
					    mul o1.xyz, r0.w, r0
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 20 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float       
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v2.xyz
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_output o2.xyz
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb0[1].xyzw
					mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
					add r1.xyzw, r0.xyzw, cb0[3].xyzw
					mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb1[18].xyzw
					mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
					mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
					dp3 r0.x, v2.xyzx, cb0[4].xyzx
					dp3 r0.y, v2.xyzx, cb0[5].xyzx
					dp3 r0.z, v2.xyzx, cb0[6].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul o1.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					Keywords { "POINT" }
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _Color;
					//   float4 _LightColor0;
					//   sampler2D _LightTexture0;
					//   float _SliceCount;
					//   float _SliceSpeed;
					//   float4 _Time;
					//   float4 _WorldSpaceLightPos0;
					//   row_major float4x4 unity_WorldToLight;
					//
					//
					// Registers:
					//
					//   Name                 Reg   Size
					//   -------------------- ----- ----
					//   unity_WorldToLight   c0       3
					//   _Time                c3       1
					//   _WorldSpaceLightPos0 c4       1
					//   _LightColor0         c5       1
					//   _Color               c6       1
					//   _SliceCount          c7       1
					//   _SliceSpeed          c8       1
					//   _LightTexture0       s0       1
					//
					
					    ps_3_0
					    def c9, -0.5, 1, 0, 0
					    dcl_texcoord_pp v0.xyz
					    dcl_texcoord1 v1.xyz
					    dcl_2d s0
					    mov r0.x, c3.x
					    mad r0.x, r0.x, c8.x, v1.y
					    mul r0.x, r0.x, c7.x
					    frc r0.x, r0.x
					    add r0, r0.x, c9.x
					    texkill r0
					    mad r0, v1.xyzx, c9.yyyz, c9.zzzy
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp3 r0.x, r1, r1
					    texld_pp r0, r0.x, s0
					    mul_pp r0.xyz, r0.x, c5
					    mul_pp r0.xyz, r0, c6
					    add r1.xyz, c4, -v1
					    nrm_pp r2.xyz, r1
					    dp3_pp r0.w, v0, r2
					    max_pp r1.x, r0.w, c9.z
					    mul_pp oC0.xyz, r0, r1.x
					    mov_pp oC0.w, c6.w
					
					// approximately 22 instruction slots used (1 texture, 21 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 3
					add r0.xyz, -v2.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad r0.w, cb1[0].x, cb0[9].y, v2.y
					mul r0.w, r0.w, cb0[9].x
					frc r0.w, r0.w
					add r0.w, r0.w, l(-0.500000)
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mul r1.xyz, v2.yyyy, cb0[5].xyzx
					mad r1.xyz, cb0[4].xyzx, v2.xxxx, r1.xyzx
					mad r1.xyz, cb0[6].xyzx, v2.zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb0[7].xyzx
					eq r0.w, cb3[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb3[0].y, l(1.000000)
					  mul r2.xyz, v2.yyyy, cb3[2].xyzx
					  mad r2.xyz, cb3[1].xyzx, v2.xxxx, r2.xyzx
					  mad r2.xyz, cb3[3].xyzx, v2.zzzz, r2.xyzx
					  add r2.xyz, r2.xyzx, cb3[4].xyzx
					  movc r2.xyz, r0.wwww, r2.xyzx, v2.xyzx
					  add r2.xyz, r2.xyzx, -cb3[6].xyzx
					  mul r2.yzw, r2.xxyz, cb3[5].xxyz
					  mad r0.w, r2.y, l(0.250000), l(0.750000)
					  mad r1.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r2.x, r0.w, r1.w
					  sample r2.xyzw, r2.xzwx, t1.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r2.xyzw, cb2[45].xyzw
					dp3 r1.x, r1.xyzx, r1.xyzx
					sample r1.xyzw, r1.xxxx, t0.xyzw, s1
					mul r0.w, r0.w, r1.x
					mul r1.xyz, r0.wwww, cb0[2].xyzx
					dp3 r0.x, v1.xyzx, r0.xyzx
					max r0.x, r0.x, l(0.000000)
					mul r0.yzw, r1.xxyz, cb0[8].xxyz
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, cb0[8].w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d9 " {
					Keywords { "DIRECTIONAL" }
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _Color;
					//   float4 _LightColor0;
					//   float _SliceCount;
					//   float _SliceSpeed;
					//   float4 _Time;
					//   float4 _WorldSpaceLightPos0;
					//
					//
					// Registers:
					//
					//   Name                 Reg   Size
					//   -------------------- ----- ----
					//   _Time                c0       1
					//   _WorldSpaceLightPos0 c1       1
					//   _LightColor0         c2       1
					//   _Color               c3       1
					//   _SliceCount          c4       1
					//   _SliceSpeed          c5       1
					//
					
					    ps_3_0
					    def c6, -0.5, 0, 0, 0
					    dcl_texcoord_pp v0.xyz
					    dcl_texcoord1 v1.y
					    mov r0.x, c0.x
					    mad r0.x, r0.x, c5.x, v1.y
					    mul r0.x, r0.x, c4.x
					    frc r0.x, r0.x
					    add r0, r0.x, c6.x
					    texkill r0
					    mov r0.xyz, c3
					    mul_pp r0.xyz, r0, c2
					    dp3_pp r0.w, v0, c1
					    mul_pp r0.xyz, r0.w, r0
					    cmp_pp oC0.xyz, r0.w, r0, c6.y
					    mov_pp oC0.w, c3.w
					
					// approximately 12 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture3d (float,float,float,float) t0
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 2
					mad r0.x, cb1[0].x, cb0[5].y, v2.y
					mul r0.x, r0.x, cb0[5].x
					frc r0.x, r0.x
					add r0.x, r0.x, l(-0.500000)
					lt r0.x, r0.x, l(0.000000)
					discard_nz r0.x
					eq r0.x, cb3[0].x, l(1.000000)
					if_nz r0.x
					  eq r0.x, cb3[0].y, l(1.000000)
					  mul r0.yzw, v2.yyyy, cb3[2].xxyz
					  mad r0.yzw, cb3[1].xxyz, v2.xxxx, r0.yyzw
					  mad r0.yzw, cb3[3].xxyz, v2.zzzz, r0.yyzw
					  add r0.yzw, r0.yyzw, cb3[4].xxyz
					  movc r0.xyz, r0.xxxx, r0.yzwy, v2.xyzx
					  add r0.xyz, r0.xyzx, -cb3[6].xyzx
					  mul r0.yzw, r0.xxyz, cb3[5].xxyz
					  mad r0.y, r0.y, l(0.250000), l(0.750000)
					  mad r1.x, cb3[0].z, l(0.500000), l(0.750000)
					  max r0.x, r0.y, r1.x
					  sample r0.xyzw, r0.xzwx, t0.xyzw, s0
					else 
					  mov r0.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.x, r0.xyzw, cb2[45].xyzw
					mul r0.xyz, r0.xxxx, cb0[2].xyzx
					dp3 r0.w, v1.xyzx, cb2[0].xyzx
					max r0.w, r0.w, l(0.000000)
					mul r0.xyz, r0.xyzx, cb0[4].xyzx
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, cb0[4].w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d9 " {
					Keywords { "SPOT" }
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _Color;
					//   float4 _LightColor0;
					//   sampler2D _LightTexture0;
					//   sampler2D _LightTextureB0;
					//   float _SliceCount;
					//   float _SliceSpeed;
					//   float4 _Time;
					//   float4 _WorldSpaceLightPos0;
					//   row_major float4x4 unity_WorldToLight;
					//
					//
					// Registers:
					//
					//   Name                 Reg   Size
					//   -------------------- ----- ----
					//   unity_WorldToLight   c0       4
					//   _Time                c4       1
					//   _WorldSpaceLightPos0 c5       1
					//   _LightColor0         c6       1
					//   _Color               c7       1
					//   _SliceCount          c8       1
					//   _SliceSpeed          c9       1
					//   _LightTexture0       s0       1
					//   _LightTextureB0      s1       1
					//
					
					    ps_3_0
					    def c10, -0.5, 1, 0, 0.5
					    dcl_texcoord_pp v0.xyz
					    dcl_texcoord1 v1.xyz
					    dcl_2d s0
					    dcl_2d s1
					    mov r0.x, c4.x
					    mad r0.x, r0.x, c9.x, v1.y
					    mul r0.x, r0.x, c8.x
					    frc r0.x, r0.x
					    add r0, r0.x, c10.x
					    texkill r0
					    mad r0, v1.xyzx, c10.yyyz, c10.zzzy
					    dp4 r1.x, c3, r0
					    rcp r1.x, r1.x
					    dp4 r2.x, c0, r0
					    dp4 r2.y, c1, r0
					    dp4 r2.z, c2, r0
					    mad r0.xy, r2, r1.x, c10.w
					    dp3 r0.z, r2, r2
					    texld_pp r1, r0.z, s1
					    texld_pp r0, r0, s0
					    mul r0.x, r1.x, r0.w
					    mul r0.xyz, r0.x, c6
					    mul_pp r0.xyz, r0, c7
					    cmp_pp r0.xyz, -r2.z, c10.z, r0
					    add r1.xyz, c5, -v1
					    nrm_pp r2.xyz, r1
					    dp3_pp r0.w, v0, r2
					    max_pp r1.x, r0.w, c10.z
					    mul_pp oC0.xyz, r0, r1.x
					    mov_pp oC0.w, c7.w
					
					// approximately 28 instruction slots used (2 texture, 26 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 4
					add r0.xyz, -v2.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad r0.w, cb1[0].x, cb0[9].y, v2.y
					mul r0.w, r0.w, cb0[9].x
					frc r0.w, r0.w
					add r0.w, r0.w, l(-0.500000)
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mul r1.xyzw, v2.yyyy, cb0[5].xyzw
					mad r1.xyzw, cb0[4].xyzw, v2.xxxx, r1.xyzw
					mad r1.xyzw, cb0[6].xyzw, v2.zzzz, r1.xyzw
					add r1.xyzw, r1.xyzw, cb0[7].xyzw
					eq r0.w, cb3[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb3[0].y, l(1.000000)
					  mul r2.xyz, v2.yyyy, cb3[2].xyzx
					  mad r2.xyz, cb3[1].xyzx, v2.xxxx, r2.xyzx
					  mad r2.xyz, cb3[3].xyzx, v2.zzzz, r2.xyzx
					  add r2.xyz, r2.xyzx, cb3[4].xyzx
					  movc r2.xyz, r0.wwww, r2.xyzx, v2.xyzx
					  add r2.xyz, r2.xyzx, -cb3[6].xyzx
					  mul r2.yzw, r2.xxyz, cb3[5].xxyz
					  mad r0.w, r2.y, l(0.250000), l(0.750000)
					  mad r2.y, cb3[0].z, l(0.500000), l(0.750000)
					  max r2.x, r0.w, r2.y
					  sample r2.xyzw, r2.xzwx, t2.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r2.xyzw, cb2[45].xyzw
					lt r2.x, l(0.000000), r1.z
					and r2.x, r2.x, l(0x3f800000)
					div r2.yz, r1.xxyx, r1.wwww
					add r2.yz, r2.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
					sample r3.xyzw, r2.yzyy, t0.xyzw, s1
					mul r1.w, r2.x, r3.w
					dp3 r1.x, r1.xyzx, r1.xyzx
					sample r2.xyzw, r1.xxxx, t1.xyzw, s2
					mul r1.x, r1.w, r2.x
					mul r0.w, r0.w, r1.x
					mul r1.xyz, r0.wwww, cb0[2].xyzx
					dp3 r0.x, v1.xyzx, r0.xyzx
					max r0.x, r0.x, l(0.000000)
					mul r0.yzw, r1.xxyz, cb0[8].xxyz
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, cb0[8].w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d9 " {
					Keywords { "POINT_COOKIE" }
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _Color;
					//   float4 _LightColor0;
					//   samplerCUBE _LightTexture0;
					//   sampler2D _LightTextureB0;
					//   float _SliceCount;
					//   float _SliceSpeed;
					//   float4 _Time;
					//   float4 _WorldSpaceLightPos0;
					//   row_major float4x4 unity_WorldToLight;
					//
					//
					// Registers:
					//
					//   Name                 Reg   Size
					//   -------------------- ----- ----
					//   unity_WorldToLight   c0       3
					//   _Time                c3       1
					//   _WorldSpaceLightPos0 c4       1
					//   _LightColor0         c5       1
					//   _Color               c6       1
					//   _SliceCount          c7       1
					//   _SliceSpeed          c8       1
					//   _LightTexture0       s0       1
					//   _LightTextureB0      s1       1
					//
					
					    ps_3_0
					    def c9, -0.5, 1, 0, 0
					    dcl_texcoord_pp v0.xyz
					    dcl_texcoord1 v1.xyz
					    dcl_cube s0
					    dcl_2d s1
					    mov r0.x, c3.x
					    mad r0.x, r0.x, c8.x, v1.y
					    mul r0.x, r0.x, c7.x
					    frc r0.x, r0.x
					    add r0, r0.x, c9.x
					    texkill r0
					    mad r0, v1.xyzx, c9.yyyz, c9.zzzy
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp3 r0.x, r1, r1
					    texld r1, r1, s0
					    texld r0, r0.x, s1
					    mul_pp r0.x, r1.w, r0.x
					    mul_pp r0.xyz, r0.x, c5
					    mul_pp r0.xyz, r0, c6
					    add r1.xyz, c4, -v1
					    nrm_pp r2.xyz, r1
					    dp3_pp r0.w, v0, r2
					    max_pp r1.x, r0.w, c9.z
					    mul_pp oC0.xyz, r0, r1.x
					    mov_pp oC0.w, c6.w
					
					// approximately 24 instruction slots used (2 texture, 22 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texturecube (float,float,float,float) t1
					dcl_resource_texture3d (float,float,float,float) t2
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 3
					add r0.xyz, -v2.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					mad r0.w, cb1[0].x, cb0[9].y, v2.y
					mul r0.w, r0.w, cb0[9].x
					frc r0.w, r0.w
					add r0.w, r0.w, l(-0.500000)
					lt r0.w, r0.w, l(0.000000)
					discard_nz r0.w
					mul r1.xyz, v2.yyyy, cb0[5].xyzx
					mad r1.xyz, cb0[4].xyzx, v2.xxxx, r1.xyzx
					mad r1.xyz, cb0[6].xyzx, v2.zzzz, r1.xyzx
					add r1.xyz, r1.xyzx, cb0[7].xyzx
					eq r0.w, cb3[0].x, l(1.000000)
					if_nz r0.w
					  eq r0.w, cb3[0].y, l(1.000000)
					  mul r2.xyz, v2.yyyy, cb3[2].xyzx
					  mad r2.xyz, cb3[1].xyzx, v2.xxxx, r2.xyzx
					  mad r2.xyz, cb3[3].xyzx, v2.zzzz, r2.xyzx
					  add r2.xyz, r2.xyzx, cb3[4].xyzx
					  movc r2.xyz, r0.wwww, r2.xyzx, v2.xyzx
					  add r2.xyz, r2.xyzx, -cb3[6].xyzx
					  mul r2.yzw, r2.xxyz, cb3[5].xxyz
					  mad r0.w, r2.y, l(0.250000), l(0.750000)
					  mad r1.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r2.x, r0.w, r1.w
					  sample r2.xyzw, r2.xzwx, t2.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.w, r2.xyzw, cb2[45].xyzw
					dp3 r1.w, r1.xyzx, r1.xyzx
					sample r2.xyzw, r1.wwww, t0.xyzw, s2
					sample r1.xyzw, r1.xyzx, t1.xyzw, s1
					mul r1.x, r1.w, r2.x
					mul r0.w, r0.w, r1.x
					mul r1.xyz, r0.wwww, cb0[2].xyzx
					dp3 r0.x, v1.xyzx, r0.xyzx
					max r0.x, r0.x, l(0.000000)
					mul r0.yzw, r1.xxyz, cb0[8].xxyz
					mul o0.xyz, r0.xxxx, r0.yzwy
					mov o0.w, cb0[8].w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d9 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _Color;
					//   float4 _LightColor0;
					//   sampler2D _LightTexture0;
					//   float _SliceCount;
					//   float _SliceSpeed;
					//   float4 _Time;
					//   float4 _WorldSpaceLightPos0;
					//   row_major float4x4 unity_WorldToLight;
					//
					//
					// Registers:
					//
					//   Name                 Reg   Size
					//   -------------------- ----- ----
					//   unity_WorldToLight   c0       2
					//   _Time                c2       1
					//   _WorldSpaceLightPos0 c3       1
					//   _LightColor0         c4       1
					//   _Color               c5       1
					//   _SliceCount          c6       1
					//   _SliceSpeed          c7       1
					//   _LightTexture0       s0       1
					//
					
					    ps_3_0
					    def c8, -0.5, 1, 0, 0
					    dcl_texcoord_pp v0.xyz
					    dcl_texcoord1 v1.xyz
					    dcl_2d s0
					    mov r0.x, c2.x
					    mad r0.x, r0.x, c7.x, v1.y
					    mul r0.x, r0.x, c6.x
					    frc r0.x, r0.x
					    add r0, r0.x, c8.x
					    texkill r0
					    mad r0, v1.xyzx, c8.yyyz, c8.zzzy
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    texld_pp r0, r1, s0
					    mul_pp r0.xyz, r0.w, c4
					    mul_pp r0.xyz, r0, c5
					    dp3_pp r0.w, v0, c3
					    max_pp r1.x, r0.w, c8.z
					    mul_pp oC0.xyz, r0, r1.x
					    mov_pp oC0.w, c5.w
					
					// approximately 16 instruction slots used (1 texture, 15 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					// TEXCOORD                 1   xyz         2     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[10], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture3d (float,float,float,float) t1
					dcl_input_ps linear v1.xyz
					dcl_input_ps linear v2.xyz
					dcl_output o0.xyzw
					dcl_temps 2
					mad r0.x, cb1[0].x, cb0[9].y, v2.y
					mul r0.x, r0.x, cb0[9].x
					frc r0.x, r0.x
					add r0.x, r0.x, l(-0.500000)
					lt r0.x, r0.x, l(0.000000)
					discard_nz r0.x
					mul r0.xy, v2.yyyy, cb0[5].xyxx
					mad r0.xy, cb0[4].xyxx, v2.xxxx, r0.xyxx
					mad r0.xy, cb0[6].xyxx, v2.zzzz, r0.xyxx
					add r0.xy, r0.xyxx, cb0[7].xyxx
					eq r0.z, cb3[0].x, l(1.000000)
					if_nz r0.z
					  eq r0.z, cb3[0].y, l(1.000000)
					  mul r1.xyz, v2.yyyy, cb3[2].xyzx
					  mad r1.xyz, cb3[1].xyzx, v2.xxxx, r1.xyzx
					  mad r1.xyz, cb3[3].xyzx, v2.zzzz, r1.xyzx
					  add r1.xyz, r1.xyzx, cb3[4].xyzx
					  movc r1.xyz, r0.zzzz, r1.xyzx, v2.xyzx
					  add r1.xyz, r1.xyzx, -cb3[6].xyzx
					  mul r1.yzw, r1.xxyz, cb3[5].xxyz
					  mad r0.z, r1.y, l(0.250000), l(0.750000)
					  mad r0.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r1.x, r0.w, r0.z
					  sample r1.xyzw, r1.xzwx, t1.xyzw, s0
					else 
					  mov r1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r0.z, r1.xyzw, cb2[45].xyzw
					sample r1.xyzw, r0.xyxx, t0.xyzw, s1
					mul r0.x, r0.z, r1.w
					mul r0.xyz, r0.xxxx, cb0[2].xyzx
					dp3 r0.w, v1.xyzx, cb2[0].xyzx
					max r0.w, r0.w, l(0.000000)
					mul r0.xyz, r0.xyzx, cb0[8].xyzx
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, cb0[8].w
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "META"
			Tags { "LIGHTMODE" = "META" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
			Blend SrcAlpha OneMinusSrcAlpha, SrcAlpha OneMinusSrcAlpha
			ColorMask RGB -1
			ZClip Off
			ZWrite Off
			Cull Off
			GpuProgramID 132155
			Program "vp" {
				SubProgram "d3d9 " {
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 unity_DynamicLightmapST;
					//   float4 unity_LightmapST;
					//   row_major float4x4 unity_MatrixVP;
					//   bool4 unity_MetaVertexControl;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                    Reg   Size
					//   ----------------------- ----- ----
					//   unity_ObjectToWorld     c0       4
					//   unity_MatrixVP          c4       4
					//   unity_LightmapST        c8       1
					//   unity_DynamicLightmapST c9       1
					//   unity_MetaVertexControl c10      1
					//
					
					    vs_3_0
					    def c11, 0, 9.99999975e-005, 1, 0
					    dcl_position v0
					    dcl_texcoord1 v1
					    dcl_texcoord2 v2
					    dcl_position o0
					    dcl_texcoord o1.xyz
					    slt r0.x, c11.x, v0.z
					    mul r0.z, r0.x, c11.y
					    mad r0.xy, v1, c8, c8.zwzw
					    lrp r1.xyz, c10.x, r0, v0
					    slt r0.x, c11.x, r1.z
					    mul r0.z, r0.x, c11.y
					    mad r0.xy, v2, c9, c9.zwzw
					    lrp r2.xyz, c10.y, r0, r1
					    mov r2.w, c11.z
					    dp4 r0.x, c0, r2
					    dp4 r0.y, c1, r2
					    dp4 r0.z, c2, r2
					    dp4 r0.w, c3, r2
					    dp4 r3.x, c4, r0
					    dp4 r3.y, c5, r0
					    dp4 r3.z, c6, r0
					    dp4 r3.w, c7, r0
					    dp4 o1.x, c0, v0
					    dp4 o1.y, c1, v0
					    dp4 o1.z, c2, v0
					    mad o0.xy, r3.w, c255, r3
					    mov o0.zw, r3
					
					// approximately 22 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float       
					// NORMAL                   0   xyz         2     NONE   float       
					// TEXCOORD                 0   xyzw        3     NONE   float       
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float   xy  
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyz         1     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[21], immediateIndexed
					dcl_constantbuffer CB2[2], immediateIndexed
					dcl_constantbuffer CB3[1], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v4.xy
					dcl_input v5.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyz
					dcl_temps 2
					lt r0.x, l(0.000000), v0.z
					and r0.z, r0.x, l(0x38d1b717)
					mad r0.xy, v4.xyxx, cb2[0].xyxx, cb2[0].zwzz
					movc r0.xyz, cb3[0].xxxx, r0.xyzx, v0.xyzx
					lt r0.w, l(0.000000), r0.z
					and r1.z, r0.w, l(0x38d1b717)
					mad r1.xy, v5.xyxx, cb2[1].xyxx, cb2[1].zwzz
					movc r0.xyz, cb3[0].yyyy, r1.xyzx, r0.xyzx
					mul r1.xyzw, r0.yyyy, cb0[1].xyzw
					mad r1.xyzw, cb0[0].xyzw, r0.xxxx, r1.xyzw
					mad r0.xyzw, cb0[2].xyzw, r0.zzzz, r1.xyzw
					add r0.xyzw, r0.xyzw, cb0[3].xyzw
					mul r1.xyzw, r0.yyyy, cb1[18].xyzw
					mad r1.xyzw, cb1[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb1[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb1[20].xyzw, r0.wwww, r1.xyzw
					mul r0.xyz, v0.yyyy, cb0[1].xyzx
					mad r0.xyz, cb0[0].xyzx, v0.xxxx, r0.xyzx
					mad r0.xyz, cb0[2].xyzx, v0.zzzz, r0.xyzx
					mad o1.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _Color;
					//   float _SliceCount;
					//   float _SliceSpeed;
					//   float4 _Time;
					//   float unity_MaxOutputValue;
					//   bool4 unity_MetaFragmentControl;
					//   float unity_OneOverOutputBoost;
					//   float unity_UseLinearSpace;
					//
					//
					// Registers:
					//
					//   Name                      Reg   Size
					//   ------------------------- ----- ----
					//   _Time                     c0       1
					//   _Color                    c1       1
					//   _SliceCount               c2       1
					//   _SliceSpeed               c3       1
					//   unity_MetaFragmentControl c4       1
					//   unity_OneOverOutputBoost  c5       1
					//   unity_MaxOutputValue      c6       1
					//   unity_UseLinearSpace      c7       1
					//
					
					    ps_3_0
					    def c8, -0.5, 0, 0.305306017, 0.682171106
					    def c9, 0.0125228781, 0.010309278, 0.0199999996, 255
					    def c10, 0.00392156886, 0, 0, 0
					    dcl_texcoord v0.y
					    mov r0.x, c0.x
					    mad r0.x, r0.x, c3.x, v0.y
					    mul r0.x, r0.x, c2.x
					    frc r0.x, r0.x
					    add r0, r0.x, c8.x
					    texkill r0
					    mov_sat r0.x, c5.x
					    log r1.x, c1.x
					    log r1.y, c1.y
					    log r1.z, c1.z
					    mul r0.xyz, r0.x, r1
					    exp_pp r1.x, r0.x
					    exp_pp r1.y, r0.y
					    exp_pp r1.z, r0.z
					    min_pp r0.xyz, c6.x, r1
					    mov r1.yzw, c8
					    cmp_pp r0.xyz, -c4.x, r1.y, r0
					    mad_pp r1.xyz, c1, r1.z, r1.w
					    mov r2.xyz, c1
					    mad_pp r1.xyz, r2, r1, c9.x
					    mul_pp r1.xyz, r1, c1
					    abs r1.w, c7.x
					    cmp_pp r1.xyz, -r1.w, r1, c1
					    mul r1.xyz, r1, c9.y
					    max r2.x, r1.x, r1.y
					    max r2.y, r1.z, c9.z
					    max r1.w, r2.x, r2.y
					    mul r1.w, r1.w, c9.w
					    frc r2.x, -r1.w
					    add r1.w, r1.w, r2.x
					    mul_pp r2.w, r1.w, c10.x
					    rcp r1.w, r2.w
					    mul_pp r2.xyz, r1.w, r1
					    mov r0.w, c4.x
					    cmp_pp oC0, -c4.y, r0, r2
					
					// approximately 35 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyz         1     NONE   float    y  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[7], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_constantbuffer CB2[2], immediateIndexed
					dcl_input_ps linear v1.y
					dcl_output o0.xyzw
					dcl_temps 3
					mad r0.x, cb1[0].x, cb0[5].y, v1.y
					mul r0.x, r0.x, cb0[5].x
					frc r0.x, r0.x
					add r0.x, r0.x, l(-0.500000)
					lt r0.x, r0.x, l(0.000000)
					discard_nz r0.x
					mov_sat r0.x, cb0[5].z
					log r0.yzw, cb0[4].xxyz
					mul r0.xyz, r0.yzwy, r0.xxxx
					exp r0.xyz, r0.xyzx
					min r0.xyz, r0.xyzx, cb0[5].wwww
					mov r0.w, l(1.000000)
					movc r0.xyzw, cb2[1].xxxx, r0.xyzw, l(0,0,0,0)
					mad r1.xyz, cb0[4].xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r1.xyz, r1.xyzx, cb0[4].xyzx
					ne r1.w, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[6].x
					movc r1.xyz, r1.wwww, cb0[4].xyzx, r1.xyzx
					mul r1.xyz, r1.xyzx, l(0.010309, 0.010309, 0.010309, 0.000000)
					max r1.w, r1.y, r1.x
					max r2.x, r1.z, l(0.020000)
					max r1.w, r1.w, r2.x
					mul r1.w, r1.w, l(255.000000)
					round_pi r1.w, r1.w
					mul r2.w, r1.w, l(0.003922)
					div r2.xyz, r1.xyzx, r2.wwww
					movc o0.xyzw, cb2[1].yyyy, r2.xyzw, r0.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
	Fallback "Diffuse"
}