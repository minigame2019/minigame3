Shader "Hidden/Post FX/Depth Of Field" {
	Properties {
		_MainTex ("", 2D) = "black" {}
	}
	SubShader {
		Pass {
			Name "COC CALCULATION"
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 49232
			Program "vp" {
				SubProgram "d3d9 " {
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_TexelSize;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_TexelSize  c8       1
					//
					
					    vs_3_0
					    def c9, 0, 1, 0, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    add r0.x, c9.y, -v1.y
					    add r0.x, r0.x, -v1.y
					    mov r1.x, c9.x
					    slt r0.y, c8.y, r1.x
					    mad o2.y, r0.y, r0.x, v1.y
					    mad r0, v0.xyzx, c9.yyyx, c9.xxxy
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mov o1.xy, v1
					    mov o2.x, v1.x
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 18 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.w, r0.x, r0.y, v1.y
					mov o1.xyz, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _CameraDepthTexture;
					//   float _Distance;
					//   float _LensCoeff;
					//   float _RcpMaxCoC;
					//   float4 _ZBufferParams;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   _ZBufferParams      c0       1
					//   _Distance           c1       1
					//   _LensCoeff          c2       1
					//   _RcpMaxCoC          c3       1
					//   _CameraDepthTexture s0       1
					//
					
					    ps_3_0
					    def c4, -9.99999975e-006, 100000, 0.5, 0
					    dcl_texcoord_pp v0.xy
					    dcl_2d s0
					    texld r0, v0, s0
					    mad r0.x, c0.z, r0.x, c0.w
					    rcp r0.y, r0.x
					    add r0.z, r0.y, c4.x
					    add r0.y, r0.y, -c1.x
					    mul r0.y, r0.y, c2.x
					    cmp r0.x, r0.z, r0.x, c4.y
					    mul_pp r0.x, r0.x, r0.y
					    mul r0.x, r0.x, c4.z
					    mov r0.z, c4.z
					    mad_pp r0.x, r0.x, c3.x, r0.z
					    mov_sat_pp oC0, r0.x
					
					// approximately 12 instruction slots used (1 texture, 11 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[8], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 1
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mad r0.x, cb1[7].z, r0.x, cb1[7].w
					div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
					add r0.y, r0.x, -cb0[4].x
					max r0.x, r0.x, l(0.000010)
					mul r0.y, r0.y, cb0[4].y
					div r0.x, r0.y, r0.x
					mul r0.x, r0.x, l(0.500000)
					mad r0.x, r0.x, cb0[4].w, l(0.500000)
					mov_sat o0.xyzw, r0.xxxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "COC TEMPORAL FILTER"
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 125785
			Program "vp" {
				SubProgram "d3d11 " {
					"!!vs_5_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_5_0
					dcl_globalFlags refactoringAllowed
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.w, r0.x, r0.y, v1.y
					mov o1.xyz, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!ps_5_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_5_0
					dcl_globalFlags refactoringAllowed
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 4
					mul r0.xy, cb0[2].yyyy, l(-0.000000, -1.000000, 0.000000, 0.000000)
					mul r1.xy, cb0[2].xyxx, l(-1.000000, -0.000000, 0.000000, 0.000000)
					mov r2.x, l(0)
					add r2.yw, v1.xxxy, -cb0[5].yyyz
					sample_indexable(texture2d)(float,float,float,float) r2.z, r2.ywyy, t2.yzxw, s2
					mad r2.yw, -cb0[2].xxxy, l(0.000000, 0.500000, 0.000000, 0.500000), v1.xxxy
					gather4_indexable(texture2d)(float,float,float,float) r2.yw, r2.ywyy, t2.yxwz, s2.x
					mov r1.z, r2.y
					lt r0.w, r2.y, r2.z
					movc r1.xyz, r0.wwww, r1.xyzx, r2.xxzx
					lt r0.w, r2.w, r1.z
					mov r0.z, r2.w
					movc r0.xyw, r0.wwww, r0.xyxz, r1.xyxz
					mul r1.xy, cb0[2].yyyy, l(0.000000, 1.000000, 0.000000, 0.000000)
					mad r2.xw, cb0[2].xxxy, l(0.500000, 0.000000, 0.000000, 0.500000), v1.xxxy
					gather4_indexable(texture2d)(float,float,float,float) r2.xw, r2.xwxx, t2.xywz, s2.x
					lt r1.w, r2.x, r0.w
					mov r1.z, r2.x
					movc r0.xyw, r1.wwww, r1.xyxz, r0.xyxw
					lt r1.x, r2.w, r0.w
					mul r3.xy, cb0[2].xyxx, l(1.000000, 0.000000, 0.000000, 0.000000)
					mov r3.z, r2.w
					movc r0.xyw, r1.xxxx, r3.xyxz, r0.xyxw
					add r0.xy, r0.xyxx, v1.xyxx
					sample_indexable(texture2d)(float,float,float,float) r0.xy, r0.xyxx, t1.xyzw, s1
					add r0.xy, -r0.xyxx, v1.xyxx
					sample_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t0.xyzw, s0
					max r0.y, r2.y, r2.z
					max r0.xy, r0.wzww, r0.xyxx
					max r0.y, r2.x, r0.y
					max r0.y, r3.z, r0.y
					min r0.x, r0.y, r0.x
					add r0.x, -r2.z, r0.x
					mad o0.xyzw, cb0[5].wwww, r0.xxxx, r2.zzzz
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "DOWNSAMPLE AND PREFILTER"
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 145501
			Program "vp" {
				SubProgram "d3d11 " {
					"!!vs_5_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_5_0
					dcl_globalFlags refactoringAllowed
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.w, r0.x, r0.y, v1.y
					mov o1.xyz, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_COLORSPACE_GAMMA" }
					"!!vs_5_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_5_0
					dcl_globalFlags refactoringAllowed
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.w, r0.x, r0.y, v1.y
					mov o1.xyz, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!ps_5_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_5_0
					dcl_globalFlags refactoringAllowed
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v1.zw
					dcl_output o0.xyzw
					dcl_temps 7
					gather4_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.zwzz, t1.xyzw, s1.x
					mad r0.xyzw, r0.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
					min r1.x, r0.w, r0.z
					min r1.y, r0.y, r1.x
					max r1.x, r0.y, r1.x
					max r1.x, r0.x, r1.x
					min r1.y, r0.x, r1.y
					lt r1.z, r1.x, -r1.y
					movc r1.x, r1.z, r1.y, r1.x
					mul r1.x, r1.x, cb0[4].z
					add r1.y, cb0[2].y, cb0[2].y
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					mul_sat r1.y, r1.y, |r1.x|
					mov o0.w, r1.x
					mad r1.x, r1.y, l(-2.000000), l(3.000000)
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.y, r1.x
					gather4_indexable(texture2d)(float,float,float,float) r2.xyzw, v1.xyxx, t0.xyzw, s0.x
					mov r3.x, r2.y
					gather4_indexable(texture2d)(float,float,float,float) r4.xyzw, v1.xyxx, t0.xzyw, s0.y
					mov r3.y, r4.z
					gather4_indexable(texture2d)(float,float,float,float) r5.xyzw, v1.xyxx, t0.xywz, s0.z
					mov r3.z, r5.y
					max r6.xyzw, r4.xzyw, r5.xywz
					max r6.xyzw, r2.xyzw, r6.xyzw
					add r6.xyzw, r6.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, |r0.xyzw|, r6.xyzw
					mul r1.yzw, r0.yyyy, r3.xxyz
					mov r3.x, r2.x
					mov r3.y, r4.x
					mov r3.z, r5.x
					mad r1.yzw, r3.xxyz, r0.xxxx, r1.yyzw
					mov r4.x, r2.z
					mov r5.x, r2.w
					mov r5.y, r4.w
					mov r4.z, r5.w
					mad r1.yzw, r4.xxyz, r0.zzzz, r1.yyzw
					mad r1.yzw, r5.xxyz, r0.wwww, r1.yyzw
					add r0.x, r0.y, r0.x
					add r0.x, r0.z, r0.x
					add r0.x, r0.w, r0.x
					max r0.x, r0.x, l(0.000010)
					div r0.xyz, r1.yzwy, r0.xxxx
					mul o0.xyz, r1.xxxx, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_COLORSPACE_GAMMA" }
					"!!ps_5_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_5_0
					dcl_globalFlags refactoringAllowed
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v1.zw
					dcl_output o0.xyzw
					dcl_temps 7
					gather4_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.zwzz, t1.xyzw, s1.x
					mad r0.xyzw, r0.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
					min r1.x, r0.w, r0.z
					min r1.y, r0.y, r1.x
					max r1.x, r0.y, r1.x
					max r1.x, r0.x, r1.x
					min r1.y, r0.x, r1.y
					lt r1.z, r1.x, -r1.y
					movc r1.x, r1.z, r1.y, r1.x
					mul r1.x, r1.x, cb0[4].z
					add r1.y, cb0[2].y, cb0[2].y
					div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
					mul_sat r1.y, r1.y, |r1.x|
					mov o0.w, r1.x
					mad r1.x, r1.y, l(-2.000000), l(3.000000)
					mul r1.y, r1.y, r1.y
					mul r1.x, r1.y, r1.x
					gather4_indexable(texture2d)(float,float,float,float) r2.xyzw, v1.xyxx, t0.xyzw, s0.x
					mov r3.x, r2.y
					gather4_indexable(texture2d)(float,float,float,float) r4.xyzw, v1.xyxx, t0.xzyw, s0.y
					mov r3.y, r4.z
					gather4_indexable(texture2d)(float,float,float,float) r5.xyzw, v1.xyxx, t0.xywz, s0.z
					mov r3.z, r5.y
					max r6.xyzw, r4.xzyw, r5.xywz
					max r6.xyzw, r2.xyzw, r6.xyzw
					add r6.xyzw, r6.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, |r0.xyzw|, r6.xyzw
					mul r1.yzw, r0.yyyy, r3.xxyz
					mov r3.x, r2.x
					mov r3.y, r4.x
					mov r3.z, r5.x
					mad r1.yzw, r3.xxyz, r0.xxxx, r1.yyzw
					mov r4.x, r2.z
					mov r5.x, r2.w
					mov r5.y, r4.w
					mov r4.z, r5.w
					mad r1.yzw, r4.xxyz, r0.zzzz, r1.yyzw
					mad r1.yzw, r5.xxyz, r0.wwww, r1.yyzw
					add r0.x, r0.y, r0.x
					add r0.x, r0.z, r0.x
					add r0.x, r0.w, r0.x
					max r0.x, r0.x, l(0.000010)
					div r0.xyz, r1.yzwy, r0.xxxx
					mul r0.xyz, r1.xxxx, r0.xyzx
					mad r1.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r1.xyz, r0.xyzx, r1.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul o0.xyz, r0.xyzx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "BOKEH FILTER (SMALL)"
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 209603
			Program "vp" {
				SubProgram "d3d9 " {
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_TexelSize;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_TexelSize  c8       1
					//
					
					    vs_3_0
					    def c9, 0, 1, 0, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    add r0.x, c9.y, -v1.y
					    add r0.x, r0.x, -v1.y
					    mov r1.x, c9.x
					    slt r0.y, c8.y, r1.x
					    mad o2.y, r0.y, r0.x, v1.y
					    mad r0, v0.xyzx, c9.yyyx, c9.xxxy
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mov o1.xy, v1
					    mov o2.x, v1.x
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 18 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.w, r0.x, r0.y, v1.y
					mov o1.xyz, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _MainTex;
					//   float4 _MainTex_TexelSize;
					//   float _MaxCoC;
					//   float _RcpAspect;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   _MainTex_TexelSize c0       1
					//   _MaxCoC            c1       1
					//   _RcpAspect         c2       1
					//   _MainTex           s0       1
					//
					
					    ps_3_0
					    def c3, -1, -2, -3, -4
					    def c4, -5, -6, -7, -8
					    def c5, -9, -10, -11, 1
					    def c6, -12, -13, -14, -15
					    def c7, 0.809016943, -0.587785304, 0.196349546, 0
					    def c8, 0, 0, 0.545454562, 1
					    def c9, 0.168554723, 0.518758118, -0.441282034, 0.320610106
					    def c10, -0.441281974, -0.320610195, 0.168554798, -0.518758118
					    def c11, 0.809017003, 0.587785244, 0.309016973, 0.95105654
					    def c12, -0.309017032, 0.95105648, -0.809017062, 0.587785184
					    def c13, -1, 0, -0.809016943, -0.587785363
					    def c14, -0.309016645, -0.9510566, 0.309017122, -0.95105648
					    defi i0, 16, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    texld_pp r0, v0, s0
					    add_pp r0.x, c0.y, c0.y
					    rcp r0.x, r0.x
					    mov_pp r1, c8.y
					    mov_pp r2, c8.y
					    mov r3.x, c8.y
					    rep i0
					      add r4, r3.x, c3
					      add r5, r3.x, c4
					      add r6, r3.x, c6
					      add r3, r3.x, c5.wxyz
					      cmp r0.yz, -r4_abs.x, c8.xzyw, c8.y
					      cmp r0.yz, -r4_abs.y, c9.xxyw, r0
					      cmp r0.yz, -r4_abs.z, c9.xzww, r0
					      cmp r0.yz, -r4_abs.w, c10.xxyw, r0
					      cmp r0.yz, -r5_abs.x, c10.xzww, r0
					      cmp r0.yz, -r5_abs.y, c8.xwyw, r0
					      cmp r0.yz, -r5_abs.z, c11.xxyw, r0
					      cmp r0.yz, -r5_abs.w, c11.xzww, r0
					      cmp r0.yz, -r3_abs.y, c12.xxyw, r0
					      cmp r0.yz, -r3_abs.z, c12.xzww, r0
					      cmp r0.yz, -r3_abs.w, c13.xxyw, r0
					      cmp r0.yz, -r6_abs.x, c13.xzww, r0
					      cmp r0.yz, -r6_abs.y, c14.xxyw, r0
					      cmp r0.yz, -r6_abs.z, c14.xzww, r0
					      cmp r0.yz, -r6_abs.w, c7.xxyw, r0
					      mul r4.yz, r0, c1.x
					      dp2add r0.y, r4.yzzw, r4.yzzw, c8.y
					      rsq r0.y, r0.y
					      rcp r0.y, r0.y
					      mul r4.x, r4.y, c2.x
					      add r3.yz, r4.xxzw, v0.xxyw
					      texld_pp r4, r3.yzzw, s0
					      min_pp r3.y, r4.w, r0.w
					      max_pp r0.z, r3.y, c8.y
					      add r0.z, -r0.y, r0.z
					      mov r3.y, c3.y
					      mad r0.z, c0.y, -r3.y, r0.z
					      add r0.y, -r0.y, -r4.w
					      mad r0.y, c0.y, -r3.y, r0.y
					      mul_sat_pp r0.yz, r0.x, r0
					      add r3.y, -r4.w, -c0.y
					      cmp r3.y, r3.y, c8.w, c8.y
					      mul_pp r0.y, r0.y, r3.y
					      mad_pp r4, r4.xyzx, c8.wwwy, c8.yyyw
					      mad_pp r1, r4, r0.z, r1
					      mad_pp r2, r4, r0.y, r2
					    endrep
					    cmp r0.x, -r1.w, c8.w, c8.y
					    add r0.x, r0.x, r1.w
					    rcp r0.x, r0.x
					    mul_pp r0.xyz, r0.x, r1
					    cmp r0.w, -r2.w, c8.w, c8.y
					    add r0.w, r0.w, r2.w
					    rcp r0.w, r0.w
					    mul_sat_pp r1.x, r2.w, c7.z
					    mad_pp r1.yzw, r2.xxyz, r0.w, -r0.xxyz
					    mad_pp oC0.xyz, r1.x, r1.yzww, r0
					    mov_pp oC0.w, r1.x
					
					// approximately 63 instruction slots used (2 texture, 61 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_immediateConstantBuffer { { 0, 0, 0, 0},
					                              { 0.545455, 0, 0, 0},
					                              { 0.168555, 0.518758, 0, 0},
					                              { -0.441282, 0.320610, 0, 0},
					                              { -0.441282, -0.320610, 0, 0},
					                              { 0.168555, -0.518758, 0, 0},
					                              { 1.000000, 0, 0, 0},
					                              { 0.809017, 0.587785, 0, 0},
					                              { 0.309017, 0.951057, 0, 0},
					                              { -0.309017, 0.951056, 0, 0},
					                              { -0.809017, 0.587785, 0, 0},
					                              { -1.000000, 0, 0, 0},
					                              { -0.809017, -0.587785, 0, 0},
					                              { -0.309017, -0.951057, 0, 0},
					                              { 0.309017, -0.951056, 0, 0},
					                              { 0.809017, -0.587785, 0, 0} }
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 6
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					add r0.x, cb0[2].y, cb0[2].y
					mov r1.w, l(1.000000)
					mov r2.xyzw, l(0,0,0,0)
					mov r3.xyzw, l(0,0,0,0)
					mov r0.y, l(0)
					loop 
					  ige r0.z, r0.y, l(16)
					  breakc_nz r0.z
					  mul r4.yz, cb0[4].zzzz, icb[r0.y + 0].xxyx
					  dp2 r0.z, r4.yzyy, r4.yzyy
					  sqrt r0.z, r0.z
					  mul r4.x, r4.y, cb0[5].x
					  add r4.xy, r4.xzxx, v1.xyxx
					  sample r4.xyzw, r4.xyxx, t0.xyzw, s0
					  min r5.x, r0.w, r4.w
					  max r5.x, r5.x, l(0.000000)
					  add r5.x, -r0.z, r5.x
					  mad r5.x, cb0[2].y, l(2.000000), r5.x
					  div_sat r5.x, r5.x, r0.x
					  add r0.z, -r0.z, -r4.w
					  mad r0.z, cb0[2].y, l(2.000000), r0.z
					  div_sat r0.z, r0.z, r0.x
					  ge r4.w, -r4.w, cb0[2].y
					  and r4.w, r4.w, l(0x3f800000)
					  mul r0.z, r0.z, r4.w
					  mov r1.xyz, r4.xyzx
					  mad r2.xyzw, r1.xyzw, r5.xxxx, r2.xyzw
					  mad r3.xyzw, r1.xyzw, r0.zzzz, r3.xyzw
					  iadd r0.y, r0.y, l(1)
					endloop 
					eq r0.x, r2.w, l(0.000000)
					and r0.x, r0.x, l(0x3f800000)
					add r0.x, r0.x, r2.w
					div r0.xyz, r2.xyzx, r0.xxxx
					eq r0.w, r3.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					add r0.w, r0.w, r3.w
					div r1.xyz, r3.xyzx, r0.wwww
					mul r0.w, r3.w, l(0.196350)
					min r0.w, r0.w, l(1.000000)
					add r1.xyz, -r0.xyzx, r1.xyzx
					mad o0.xyz, r0.wwww, r1.xyzx, r0.xyzx
					mov o0.w, r0.w
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "BOKEH FILTER (MEDIUM)"
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 280275
			Program "vp" {
				SubProgram "d3d9 " {
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_TexelSize;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_TexelSize  c8       1
					//
					
					    vs_3_0
					    def c9, 0, 1, 0, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    add r0.x, c9.y, -v1.y
					    add r0.x, r0.x, -v1.y
					    mov r1.x, c9.x
					    slt r0.y, c8.y, r1.x
					    mad o2.y, r0.y, r0.x, v1.y
					    mad r0, v0.xyzx, c9.yyyx, c9.xxxy
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mov o1.xy, v1
					    mov o2.x, v1.x
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 18 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.w, r0.x, r0.y, v1.y
					mov o1.xyz, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _MainTex;
					//   float4 _MainTex_TexelSize;
					//   float _MaxCoC;
					//   float _RcpAspect;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   _MainTex_TexelSize c0       1
					//   _MaxCoC            c1       1
					//   _RcpAspect         c2       1
					//   _MainTex           s0       1
					//
					
					    ps_3_0
					    def c3, -1, -2, -3, -4
					    def c4, -5, -6, -7, -8
					    def c5, -9, -10, -11, -12
					    def c6, -13, -14, -15, -16
					    def c7, 0, 0, -17, 1
					    def c8, -18, -19, -20, -21
					    def c9, 0.90096885, -0.433883756, 0.142799661, 0
					    def c10, 0.533333361, 0, 0.332527906, 0.41697681
					    def c11, -0.118677847, 0.519961596, -0.480516732, 0.231404707
					    def c12, -0.480516732, -0.231404677, -0.118677631, -0.519961655
					    def c13, 0.332527846, -0.416976899, 0.90096885, 0.433883756
					    def c14, 0.623489797, 0.781831503, 0.222520977, 0.974927902
					    def c15, -0.222520947, 0.974927902, -0.623489976, 0.781831384
					    def c16, -0.90096885, 0.433883816, -1, 0
					    def c17, -0.623489618, -0.781831622, -0.222520545, -0.974928021
					    def c18, 0.222521499, -0.974927783, 0.623489678, -0.781831622
					    defi i0, 22, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    texld_pp r0, v0, s0
					    add_pp r0.x, c0.y, c0.y
					    rcp r0.x, r0.x
					    mov_pp r1, c7.y
					    mov_pp r2, c7.y
					    mov r0.y, c7.y
					    rep i0
					      add r3, r0.y, c3
					      add r4, r0.y, c4
					      add r5, r0.y, c5
					      add r6, r0.y, c6
					      add r7, r0.y, c8
					      add r0.yz, r0.y, c7.xwzw
					      cmp r8.xy, -r3_abs.x, c10, c10.y
					      cmp r3.xy, -r3_abs.y, c10.zwzw, r8
					      cmp r3.xy, -r3_abs.z, c11, r3
					      cmp r3.xy, -r3_abs.w, c11.zwzw, r3
					      cmp r3.xy, -r4_abs.x, c12, r3
					      cmp r3.xy, -r4_abs.y, c12.zwzw, r3
					      cmp r3.xy, -r4_abs.z, c13, r3
					      cmp r3.xy, -r4_abs.w, c7.wyzw, r3
					      cmp r3.xy, -r5_abs.x, c13.zwzw, r3
					      cmp r3.xy, -r5_abs.y, c14, r3
					      cmp r3.xy, -r5_abs.z, c14.zwzw, r3
					      cmp r3.xy, -r5_abs.w, c15, r3
					      cmp r3.xy, -r6_abs.x, c15.zwzw, r3
					      cmp r3.xy, -r6_abs.y, c16, r3
					      cmp r3.xy, -r6_abs.z, c16.zwzw, r3
					      cmp r3.xy, -r6_abs.w, -c13.zwzw, r3
					      cmp r3.xy, -r0_abs.z, c17, r3
					      cmp r3.xy, -r7_abs.x, c17.zwzw, r3
					      cmp r3.xy, -r7_abs.y, c18, r3
					      cmp r3.xy, -r7_abs.z, c18.zwzw, r3
					      cmp r3.xy, -r7_abs.w, c9, r3
					      mul r3.yz, r3.xxyw, c1.x
					      dp2add r0.z, r3.yzzw, r3.yzzw, c7.y
					      rsq r0.z, r0.z
					      rcp r0.z, r0.z
					      mul r3.x, r3.y, c2.x
					      add r3.xy, r3.xzzw, v0
					      texld_pp r3, r3, s0
					      min_pp r4.x, r3.w, r0.w
					      max_pp r5.x, r4.x, c7.y
					      add r4.x, -r0.z, r5.x
					      mov r4.y, c3.y
					      mad r4.x, c0.y, -r4.y, r4.x
					      mul_sat_pp r4.x, r0.x, r4.x
					      add r0.z, -r0.z, -r3.w
					      mad r0.z, c0.y, -r4.y, r0.z
					      mul_sat_pp r0.z, r0.x, r0.z
					      add r3.w, -r3.w, -c0.y
					      cmp r3.w, r3.w, c7.w, c7.y
					      mul_pp r0.z, r0.z, r3.w
					      mad_pp r3, r3.xyzx, c7.wwwy, c7.yyyw
					      mad_pp r1, r3, r4.x, r1
					      mad_pp r2, r3, r0.z, r2
					    endrep
					    cmp r0.x, -r1.w, c7.w, c7.y
					    add r0.x, r0.x, r1.w
					    rcp r0.x, r0.x
					    mul_pp r0.xyz, r0.x, r1
					    cmp r0.w, -r2.w, c7.w, c7.y
					    add r0.w, r0.w, r2.w
					    rcp r0.w, r0.w
					    mul_sat_pp r1.x, r2.w, c9.z
					    mad_pp r1.yzw, r2.xxyz, r0.w, -r0.xxyz
					    mad_pp oC0.xyz, r1.x, r1.yzww, r0
					    mov_pp oC0.w, r1.x
					
					// approximately 72 instruction slots used (2 texture, 70 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_immediateConstantBuffer { { 0, 0, 0, 0},
					                              { 0.533333, 0, 0, 0},
					                              { 0.332528, 0.416977, 0, 0},
					                              { -0.118678, 0.519962, 0, 0},
					                              { -0.480517, 0.231405, 0, 0},
					                              { -0.480517, -0.231405, 0, 0},
					                              { -0.118678, -0.519962, 0, 0},
					                              { 0.332528, -0.416977, 0, 0},
					                              { 1.000000, 0, 0, 0},
					                              { 0.900969, 0.433884, 0, 0},
					                              { 0.623490, 0.781832, 0, 0},
					                              { 0.222521, 0.974928, 0, 0},
					                              { -0.222521, 0.974928, 0, 0},
					                              { -0.623490, 0.781831, 0, 0},
					                              { -0.900969, 0.433884, 0, 0},
					                              { -1.000000, 0, 0, 0},
					                              { -0.900969, -0.433884, 0, 0},
					                              { -0.623490, -0.781832, 0, 0},
					                              { -0.222521, -0.974928, 0, 0},
					                              { 0.222521, -0.974928, 0, 0},
					                              { 0.623490, -0.781832, 0, 0},
					                              { 0.900969, -0.433884, 0, 0} }
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 6
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					add r0.x, cb0[2].y, cb0[2].y
					mov r1.w, l(1.000000)
					mov r2.xyzw, l(0,0,0,0)
					mov r3.xyzw, l(0,0,0,0)
					mov r0.y, l(0)
					loop 
					  ige r0.z, r0.y, l(22)
					  breakc_nz r0.z
					  mul r4.yz, cb0[4].zzzz, icb[r0.y + 0].xxyx
					  dp2 r0.z, r4.yzyy, r4.yzyy
					  sqrt r0.z, r0.z
					  mul r4.x, r4.y, cb0[5].x
					  add r4.xy, r4.xzxx, v1.xyxx
					  sample r4.xyzw, r4.xyxx, t0.xyzw, s0
					  min r5.x, r0.w, r4.w
					  max r5.x, r5.x, l(0.000000)
					  add r5.x, -r0.z, r5.x
					  mad r5.x, cb0[2].y, l(2.000000), r5.x
					  div_sat r5.x, r5.x, r0.x
					  add r0.z, -r0.z, -r4.w
					  mad r0.z, cb0[2].y, l(2.000000), r0.z
					  div_sat r0.z, r0.z, r0.x
					  ge r4.w, -r4.w, cb0[2].y
					  and r4.w, r4.w, l(0x3f800000)
					  mul r0.z, r0.z, r4.w
					  mov r1.xyz, r4.xyzx
					  mad r2.xyzw, r1.xyzw, r5.xxxx, r2.xyzw
					  mad r3.xyzw, r1.xyzw, r0.zzzz, r3.xyzw
					  iadd r0.y, r0.y, l(1)
					endloop 
					eq r0.x, r2.w, l(0.000000)
					and r0.x, r0.x, l(0x3f800000)
					add r0.x, r0.x, r2.w
					div r0.xyz, r2.xyzx, r0.xxxx
					eq r0.w, r3.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					add r0.w, r0.w, r3.w
					div r1.xyz, r3.xyzx, r0.wwww
					mul r0.w, r3.w, l(0.142800)
					min r0.w, r0.w, l(1.000000)
					add r1.xyz, -r0.xyzx, r1.xyzx
					mad o0.xyz, r0.wwww, r1.xyzx, r0.xyzx
					mov o0.w, r0.w
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "BOKEH FILTER (LARGE)"
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 383297
			Program "vp" {
				SubProgram "d3d9 " {
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_TexelSize;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_TexelSize  c8       1
					//
					
					    vs_3_0
					    def c9, 0, 1, 0, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    add r0.x, c9.y, -v1.y
					    add r0.x, r0.x, -v1.y
					    mov r1.x, c9.x
					    slt r0.y, c8.y, r1.x
					    mad o2.y, r0.y, r0.x, v1.y
					    mad r0, v0.xyzx, c9.yyyx, c9.xxxy
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mov o1.xy, v1
					    mov o2.x, v1.x
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 18 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.w, r0.x, r0.y, v1.y
					mov o1.xyz, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _MainTex;
					//   float4 _MainTex_TexelSize;
					//   float _MaxCoC;
					//   float _RcpAspect;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   _MainTex_TexelSize c0       1
					//   _MaxCoC            c1       1
					//   _RcpAspect         c2       1
					//   _MainTex           s0       1
					//
					
					    ps_3_0
					    def c3, -1, -33, -2, -34
					    def c4, -3, -35, 1, 0
					    def c5, -4, -36, -5, -37
					    def c6, -6, -38, -7, -39
					    def c7, -8, -40, -9, -41
					    def c8, -10, -27, -28, -42
					    def c9, -11, -12, -13, -14
					    def c10, -15, -16, -17, -18
					    def c11, -19, -20, -21, -22
					    def c12, -23, -24, -25, -26
					    def c13, -29, -30, -31, -32
					    def c14, -0.327625036, 0.157775939, -0.157775909, 0.0730602965
					    def c15, 0, 0, 0.363636374, 0.681818187
					    def c16, 0.226723567, 0.284302384, -0.0809167102, 0.354519248
					    def c17, -0.0809165612, -0.354519278, 0.226723522, -0.284302413
					    def c18, 0.614296973, 0.295829833, 0.425106674, 0.533066928
					    def c19, 0.151718855, 0.664723575, -0.151718825, 0
					    def c20, -0.425106794, 0.533066869, -0.614296973, 0.295829862
					    def c21, -0.681818187, 0, -0.425106555, -0.533067048
					    def c22, -0.151718557, -0.664723635, 0.151719198, -0.664723516
					    def c23, 0.425106615, -0.533067048, 0.614296973, -0.295829833
					    def c24, 0.955572784, 0.294755191, 0.826238751, 0.5633201
					    def c25, 0.623489797, 0.781831503, 0.365340978, 0.930873752
					    def c26, 0.0747300014, 0.997203827, -0.222520947, 0.974927902
					    def c27, -0.50000006, 0.866025388, -0.733051956, 0.680172682
					    def c28, -0.90096885, 0.433883816, -0.988830864, 0.149042085
					    def c29, -0.988830805, -0.149042487, -0.90096885, -0.433883756
					    def c30, -0.733051836, -0.680172801, -0.499999911, -0.866025448
					    def c31, -0.222521007, -0.974927902, 0.074730292, -0.997203767
					    def c32, 0.365341485, -0.930873573, 0.623489678, -0.781831622
					    def c33, 0.826238811, -0.563319981, 0.955572903, -0.294754833
					    defi i0, 43, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    texld_pp r0, v0, s0
					    add_pp r0.x, c0.y, c0.y
					    rcp r0.x, r0.x
					    mov_pp r1, c15.y
					    mov_pp r2, c15.y
					    mov r0.y, c15.y
					    rep i0
					      add r3, r0.y, c6
					      add r4, r0.y, c7
					      add r5, r0.y, c8
					      add r6, r0.y, c9
					      add r7, r0.y, c10
					      add r8, r0.y, c11
					      add r9, r0.y, c12
					      add r10, r0.y, c13
					      add r11, r0.y, c3
					      add r12.xyz, r0.y, c4
					      add r13, r0.y, c5
					      cmp r14.xy, -r11_abs.x, c15.zyzw, c15.y
					      cmp r11.xz, -r11_abs.z, c16.xyyw, r14.xyyw
					      cmp r11.xz, -r12_abs.x, c16.zyww, r11
					      cmp r11.xz, -r13_abs.x, c14.xyyw, r11
					      cmp r11.xz, -r13_abs.z, c14, r11
					      cmp r11.xz, -r3_abs.x, c17.xyyw, r11
					      cmp r3.xz, -r3_abs.z, c17.zyww, r11
					      cmp r3.xz, -r4_abs.x, c15.wyyw, r3
					      cmp r3.xz, -r4_abs.z, c18.xyyw, r3
					      cmp r3.xz, -r5_abs.x, c18.zyww, r3
					      cmp r3.xz, -r6_abs.x, c19.xyyw, r3
					      cmp r3.xz, -r6_abs.y, c19.zyyw, r3
					      cmp r3.xz, -r6_abs.z, c20.xyyw, r3
					      cmp r3.xz, -r6_abs.w, c20.zyww, r3
					      cmp r3.xz, -r7_abs.x, c21.xyyw, r3
					      cmp r3.xz, -r7_abs.y, -c18.xyyw, r3
					      cmp r3.xz, -r7_abs.z, c21.zyww, r3
					      cmp r3.xz, -r7_abs.w, c22.xyyw, r3
					      cmp r3.xz, -r8_abs.x, c22.zyww, r3
					      cmp r3.xz, -r8_abs.y, c23.xyyw, r3
					      cmp r3.xz, -r8_abs.z, c23.zyww, r3
					      cmp r3.xz, -r8_abs.w, c4.zyww, r3
					      cmp r3.xz, -r9_abs.x, c24.xyyw, r3
					      cmp r3.xz, -r9_abs.y, c24.zyww, r3
					      cmp r3.xz, -r9_abs.z, c25.xyyw, r3
					      cmp r3.xz, -r9_abs.w, c25.zyww, r3
					      cmp r3.xz, -r5_abs.y, c26.xyyw, r3
					      cmp r3.xz, -r5_abs.z, c26.zyww, r3
					      cmp r3.xz, -r10_abs.x, c27.xyyw, r3
					      cmp r3.xz, -r10_abs.y, c27.zyww, r3
					      cmp r3.xz, -r10_abs.z, c28.xyyw, r3
					      cmp r3.xz, -r10_abs.w, c28.zyww, r3
					      cmp r3.xz, -r11_abs.y, c29.xyyw, r3
					      cmp r3.xz, -r11_abs.w, c29.zyww, r3
					      cmp r3.xz, -r12_abs.y, c30.xyyw, r3
					      cmp r3.xz, -r13_abs.y, c30.zyww, r3
					      cmp r3.xz, -r13_abs.w, c31.xyyw, r3
					      cmp r3.xy, -r3_abs.y, c31.zwzw, r3.xzzw
					      cmp r3.xy, -r3_abs.w, c32, r3
					      cmp r3.xy, -r4_abs.y, c32.zwzw, r3
					      cmp r3.xy, -r4_abs.w, c33, r3
					      cmp r3.xy, -r5_abs.w, c33.zwzw, r3
					      mul r3.yz, r3.xxyw, c1.x
					      dp2add r0.z, r3.yzzw, r3.yzzw, c15.y
					      rsq r0.z, r0.z
					      rcp r0.z, r0.z
					      mul r3.x, r3.y, c2.x
					      add r3.xy, r3.xzzw, v0
					      texld_pp r3, r3, s0
					      min_pp r4.x, r3.w, r0.w
					      max_pp r5.x, r4.x, c15.y
					      add r4.x, -r0.z, r5.x
					      mov r4.z, c3.z
					      mad r4.x, c0.y, -r4.z, r4.x
					      mul_sat_pp r4.x, r0.x, r4.x
					      add r0.z, -r0.z, -r3.w
					      mad r0.z, c0.y, -r4.z, r0.z
					      mul_sat_pp r0.z, r0.x, r0.z
					      add r3.w, -r3.w, -c0.y
					      cmp r3.w, r3.w, c4.z, c4.w
					      mul_pp r0.z, r0.z, r3.w
					      mad_pp r3, r3.xyzx, c4.zzzw, c4.wwwz
					      mad_pp r1, r3, r4.x, r1
					      mad_pp r2, r3, r0.z, r2
					      mov r0.y, r12.z
					    endrep
					    cmp r0.x, -r1.w, c4.z, c4.w
					    add r0.x, r0.x, r1.w
					    rcp r0.x, r0.x
					    mul_pp r0.xyz, r0.x, r1
					    cmp r0.w, -r2.w, c4.z, c4.w
					    add r0.w, r0.w, r2.w
					    rcp r0.w, r0.w
					    mul_sat_pp r1.x, r2.w, c14.w
					    mad_pp r1.yzw, r2.xxyz, r0.w, -r0.xxyz
					    mad_pp oC0.xyz, r1.x, r1.yzww, r0
					    mov_pp oC0.w, r1.x
					
					// approximately 99 instruction slots used (2 texture, 97 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_immediateConstantBuffer { { 0, 0, 0, 0},
					                              { 0.363636, 0, 0, 0},
					                              { 0.226724, 0.284302, 0, 0},
					                              { -0.080917, 0.354519, 0, 0},
					                              { -0.327625, 0.157776, 0, 0},
					                              { -0.327625, -0.157776, 0, 0},
					                              { -0.080917, -0.354519, 0, 0},
					                              { 0.226724, -0.284302, 0, 0},
					                              { 0.681818, 0, 0, 0},
					                              { 0.614297, 0.295830, 0, 0},
					                              { 0.425107, 0.533067, 0, 0},
					                              { 0.151719, 0.664724, 0, 0},
					                              { -0.151719, 0.664724, 0, 0},
					                              { -0.425107, 0.533067, 0, 0},
					                              { -0.614297, 0.295830, 0, 0},
					                              { -0.681818, 0, 0, 0},
					                              { -0.614297, -0.295830, 0, 0},
					                              { -0.425107, -0.533067, 0, 0},
					                              { -0.151719, -0.664724, 0, 0},
					                              { 0.151719, -0.664724, 0, 0},
					                              { 0.425107, -0.533067, 0, 0},
					                              { 0.614297, -0.295830, 0, 0},
					                              { 1.000000, 0, 0, 0},
					                              { 0.955573, 0.294755, 0, 0},
					                              { 0.826239, 0.563320, 0, 0},
					                              { 0.623490, 0.781832, 0, 0},
					                              { 0.365341, 0.930874, 0, 0},
					                              { 0.074730, 0.997204, 0, 0},
					                              { -0.222521, 0.974928, 0, 0},
					                              { -0.500000, 0.866025, 0, 0},
					                              { -0.733052, 0.680173, 0, 0},
					                              { -0.900969, 0.433884, 0, 0},
					                              { -0.988831, 0.149042, 0, 0},
					                              { -0.988831, -0.149042, 0, 0},
					                              { -0.900969, -0.433884, 0, 0},
					                              { -0.733052, -0.680173, 0, 0},
					                              { -0.500000, -0.866025, 0, 0},
					                              { -0.222521, -0.974928, 0, 0},
					                              { 0.074730, -0.997204, 0, 0},
					                              { 0.365341, -0.930874, 0, 0},
					                              { 0.623490, -0.781832, 0, 0},
					                              { 0.826239, -0.563320, 0, 0},
					                              { 0.955573, -0.294755, 0, 0} }
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 6
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					add r0.x, cb0[2].y, cb0[2].y
					mov r1.w, l(1.000000)
					mov r2.xyzw, l(0,0,0,0)
					mov r3.xyzw, l(0,0,0,0)
					mov r0.y, l(0)
					loop 
					  ige r0.z, r0.y, l(43)
					  breakc_nz r0.z
					  mul r4.yz, cb0[4].zzzz, icb[r0.y + 0].xxyx
					  dp2 r0.z, r4.yzyy, r4.yzyy
					  sqrt r0.z, r0.z
					  mul r4.x, r4.y, cb0[5].x
					  add r4.xy, r4.xzxx, v1.xyxx
					  sample r4.xyzw, r4.xyxx, t0.xyzw, s0
					  min r5.x, r0.w, r4.w
					  max r5.x, r5.x, l(0.000000)
					  add r5.x, -r0.z, r5.x
					  mad r5.x, cb0[2].y, l(2.000000), r5.x
					  div_sat r5.x, r5.x, r0.x
					  add r0.z, -r0.z, -r4.w
					  mad r0.z, cb0[2].y, l(2.000000), r0.z
					  div_sat r0.z, r0.z, r0.x
					  ge r4.w, -r4.w, cb0[2].y
					  and r4.w, r4.w, l(0x3f800000)
					  mul r0.z, r0.z, r4.w
					  mov r1.xyz, r4.xyzx
					  mad r2.xyzw, r1.xyzw, r5.xxxx, r2.xyzw
					  mad r3.xyzw, r1.xyzw, r0.zzzz, r3.xyzw
					  iadd r0.y, r0.y, l(1)
					endloop 
					eq r0.x, r2.w, l(0.000000)
					and r0.x, r0.x, l(0x3f800000)
					add r0.x, r0.x, r2.w
					div r0.xyz, r2.xyzx, r0.xxxx
					eq r0.w, r3.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					add r0.w, r0.w, r3.w
					div r1.xyz, r3.xyzx, r0.wwww
					mul r0.w, r3.w, l(0.073060)
					min r0.w, r0.w, l(1.000000)
					add r1.xyz, -r0.xyzx, r1.xyzx
					mad o0.xyz, r0.wwww, r1.xyzx, r0.xyzx
					mov o0.w, r0.w
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "BOKEH FILTER (VERY LARGE)"
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 394737
			Program "vp" {
				SubProgram "d3d9 " {
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_TexelSize;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_TexelSize  c8       1
					//
					
					    vs_3_0
					    def c9, 0, 1, 0, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    add r0.x, c9.y, -v1.y
					    add r0.x, r0.x, -v1.y
					    mov r1.x, c9.x
					    slt r0.y, c8.y, r1.x
					    mad o2.y, r0.y, r0.x, v1.y
					    mad r0, v0.xyzx, c9.yyyx, c9.xxxy
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mov o1.xy, v1
					    mov o2.x, v1.x
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 18 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.w, r0.x, r0.y, v1.y
					mov o1.xyz, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _MainTex;
					//   float4 _MainTex_TexelSize;
					//   float _MaxCoC;
					//   float _RcpAspect;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   _MainTex_TexelSize c0       1
					//   _MaxCoC            c1       1
					//   _RcpAspect         c2       1
					//   _MainTex           s0       1
					//
					
					    ps_3_0
					    def c3, -2, -34, -66, 2
					    def c4, -3, -35, -67, 0.0442477837
					    def c5, -4, -36, -68, 0
					    def c6, -5, -37, -69, 0
					    def c7, -6, -38, -70, 0
					    def c8, -25, -57, -7, -39
					    def c9, -8, -40, -11, -43
					    def c10, -9, -41, -10, -42
					    def c11, -12, -44, -15, -47
					    def c12, -13, -45, -14, -46
					    def c13, -16, -48, -19, -51
					    def c14, -17, -49, -18, -50
					    def c15, -20, -52, -23, -55
					    def c16, -21, -53, -22, -54
					    def c17, -24, -56, -26, -58
					    def c18, -27, -59, -28, -60
					    def c19, -29, -30, -61, -62
					    def c20, -31, -32, -63, -64
					    def c21, -1, -33, -65, 0
					    def c22, 0, 0, 1, 0.275862098
					    def c23, 0.171997204, 0.215677679, -0.0613850951, 0.268945664
					    def c24, -0.248543158, 0.119692102, -0.11969208, 0
					    def c25, -0.0613849834, -0.268945694, 0.171997175, -0.215677708
					    def c26, 0.517241359, 0, 0.466018349, 0.224422619
					    def c27, 0.322494715, 0.40439558, 0.115097053, 0.504273057
					    def c28, -0.115097038, 0.504273057, -0.322494805, 0.404395521
					    def c29, -0.466018349, 0.224422649, -0.517241359, 0
					    def c30, -0.322494626, -0.40439564, -0.11509683, -0.504273117
					    def c31, 0.115097322, -0.504272997, 0.322494656, -0.40439564
					    def c32, 0.466018349, -0.224422619, 0.758620679, 0
					    def c33, 0.724917293, 0.223607376, 0.626801789, 0.427346289
					    def c34, 0.472992241, 0.593113542, 0.277155221, 0.706180096
					    def c35, 0.0566917248, 0.756499469, -0.168808997, 0.73960048
					    def c36, -0.379310399, 0.656984746, -0.556108356, 0.515993059
					    def c37, -0.683493614, 0.32915324, -0.750147521, 0.113066405
					    def c38, -0.750147521, -0.113066711, -0.683493614, -0.32915318
					    def c39, -0.556108296, -0.515993178, -0.37931028, -0.656984806
					    def c40, -0.168809041, -0.73960048, 0.0566919446, -0.75649941
					    def c41, 0.277155608, -0.706179917, 0.472992152, -0.593113661
					    def c42, 0.626801848, -0.4273462, 0.724917352, -0.223607108
					    def c43, 0.974927902, 0.222520933, 0.90096885, 0.433883756
					    def c44, 0.781831503, 0.623489797, 0.433883637, 0.900968909
					    def c45, 0.222520977, 0.974927902, -0.222520947, -0.222520933
					    def c46, -0.433883846, 0.90096885, -0.623489976, 0.781831384
					    def c47, -0.781831682, 0.623489559, -0.90096885, 0.433883816
					    def c48, -0.974927902, -0.222520873, -0.781831384, -0.623489916
					    def c49, 0.781831443, -0.623489857, 0.90096885, -0.433883756
					    def c50, -0.623489618, -0.781831622, -0.433883458, -0.900969028
					    def c51, -0.222520545, -0.974928021, 0.222521499, -0.974927783
					    def c52, 0.433883488, -0.900968969, 0.623489678, -0.781831622
					    def c53, 0.974927902, -0.222520858, 0, 0
					    defi i0, 71, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    texld_pp r0, v0, s0
					    add_pp r0.x, c0.y, c0.y
					    rcp r0.x, r0.x
					    mov_pp r1, c22.y
					    mov_pp r2, c22.y
					    mov r0.y, c22.y
					    rep i0
					      add r3, r0.y, c10
					      add r4, r0.y, c12
					      add r5, r0.y, c14
					      add r6, r0.y, c16
					      add r7, r0.y, c18
					      add r0.z, r0.y, c22.z
					      add r8, r0.y, c19
					      add r9, r0.y, c20
					      add r10.xyz, r0.y, c21
					      add r11.xyz, r0.y, c3
					      add r12.xyz, r0.y, c4
					      add r13.xyz, r0.y, c5
					      add r14.xyz, r0.y, c6
					      add r15.xyz, r0.y, c7
					      add r16, r0.y, c8
					      add r17, r0.y, c9
					      add r18, r0.y, c11
					      add r19, r0.y, c13
					      add r20, r0.y, c15
					      add r21, r0.y, c17
					      cmp r10.xw, -r10_abs.x, c22.wyzy, c22.y
					      cmp r10.xw, -r11_abs.x, c23.xyzy, r10
					      cmp r10.xw, -r12_abs.x, c23.zyzw, r10
					      cmp r10.xw, -r13_abs.x, c24.xyzy, r10
					      cmp r10.xw, -r14_abs.x, c24.xyzz, r10
					      cmp r10.xw, -r15_abs.x, c25.xyzy, r10
					      cmp r10.xw, -r16_abs.z, c25.zyzw, r10
					      cmp r10.xw, -r17_abs.x, c26.xyzy, r10
					      cmp r10.xw, -r3_abs.x, c26.zyzw, r10
					      cmp r3.xz, -r3_abs.z, c27.xyyw, r10.xyww
					      cmp r3.xz, -r17_abs.z, c27.zyww, r3
					      cmp r3.xz, -r18_abs.x, c28.xyyw, r3
					      cmp r3.xz, -r4_abs.x, c28.zyww, r3
					      cmp r3.xz, -r4_abs.z, c29.xyyw, r3
					      cmp r3.xz, -r18_abs.z, c29.zyww, r3
					      cmp r3.xz, -r19_abs.x, -c26.zyww, r3
					      cmp r3.xz, -r5_abs.x, c30.xyyw, r3
					      cmp r3.xz, -r5_abs.z, c30.zyww, r3
					      cmp r3.xz, -r19_abs.z, c31.xyyw, r3
					      cmp r3.xz, -r20_abs.x, c31.zyww, r3
					      cmp r3.xz, -r6_abs.x, c32.xyyw, r3
					      cmp r3.xz, -r6_abs.z, c32.zyww, r3
					      cmp r3.xz, -r20_abs.z, c33.xyyw, r3
					      cmp r3.xz, -r21_abs.x, c33.zyww, r3
					      cmp r3.xz, -r16_abs.x, c34.xyyw, r3
					      cmp r3.xz, -r21_abs.z, c34.zyww, r3
					      cmp r3.xz, -r7_abs.x, c35.xyyw, r3
					      cmp r3.xz, -r7_abs.z, c35.zyww, r3
					      cmp r3.xz, -r8_abs.x, c36.xyyw, r3
					      cmp r3.xz, -r8_abs.y, c36.zyww, r3
					      cmp r3.xz, -r9_abs.x, c37.xyyw, r3
					      cmp r3.xz, -r9_abs.y, c37.zyww, r3
					      cmp r3.xz, -r10_abs.y, c38.xyyw, r3
					      cmp r3.xz, -r11_abs.y, c38.zyww, r3
					      cmp r3.xz, -r12_abs.y, c39.xyyw, r3
					      cmp r3.xz, -r13_abs.y, c39.zyww, r3
					      cmp r3.xz, -r14_abs.y, c40.xyyw, r3
					      cmp r3.xz, -r15_abs.y, c40.zyww, r3
					      cmp r3.xz, -r16_abs.w, c41.xyyw, r3
					      cmp r3.xz, -r17_abs.y, c41.zyww, r3
					      cmp r3.xy, -r3_abs.y, c42, r3.xzzw
					      cmp r3.xy, -r3_abs.w, c42.zwzw, r3
					      cmp r3.xy, -r17_abs.w, c22.zyzw, r3
					      cmp r3.xy, -r18_abs.y, c43, r3
					      cmp r3.xy, -r4_abs.y, c43.zwzw, r3
					      cmp r3.xy, -r4_abs.w, c44, r3
					      cmp r3.xy, -r18_abs.w, c44.yxzw, r3
					      cmp r3.xy, -r19_abs.y, c44.zwzw, r3
					      cmp r3.xy, -r5_abs.y, c45, r3
					      cmp r3.xy, -r5_abs.w, c22.yzzw, r3
					      cmp r3.xy, -r19_abs.w, c45.zyzw, r3
					      cmp r3.xy, -r20_abs.y, c46, r3
					      cmp r3.xy, -r6_abs.y, c46.zwzw, r3
					      cmp r3.xy, -r6_abs.w, c47, r3
					      cmp r3.xy, -r20_abs.w, c47.zwzw, r3
					      cmp r3.xy, -r21_abs.y, -c45.ywzw, r3
					      cmp r3.xy, -r16_abs.y, c21.xwzw, r3
					      cmp r3.xy, -r21_abs.w, c48, r3
					      cmp r3.xy, -r7_abs.y, -c43.zwzw, r3
					      cmp r3.xy, -r7_abs.w, c48.zwzw, r3
					      cmp r3.xy, -r8_abs.z, c50, r3
					      cmp r3.xy, -r8_abs.w, c50.zwzw, r3
					      cmp r3.xy, -r9_abs.z, c51, r3
					      cmp r3.xy, -r9_abs.w, c21.wxzw, r3
					      cmp r3.xy, -r10_abs.z, c51.zwzw, r3
					      cmp r3.xy, -r11_abs.z, c52, r3
					      cmp r3.xy, -r12_abs.z, c52.zwzw, r3
					      cmp r3.xy, -r13_abs.z, c49, r3
					      cmp r3.xy, -r14_abs.z, c49.zwzw, r3
					      cmp r3.xy, -r15_abs.z, c53, r3
					      mul r3.yz, r3.xxyw, c1.x
					      dp2add r3.w, r3.yzzw, r3.yzzw, c22.y
					      rsq r3.w, r3.w
					      rcp r3.w, r3.w
					      mul r3.x, r3.y, c2.x
					      add r3.xy, r3.xzzw, v0
					      texld_pp r4, r3, s0
					      min_pp r3.x, r4.w, r0.w
					      max_pp r5.x, r3.x, c22.y
					      add r3.x, -r3.w, r5.x
					      mov r3.y, c0.y
					      mad r3.x, r3.y, c3.w, r3.x
					      add r3.z, -r3.w, -r4.w
					      mad r3.y, r3.y, c3.w, r3.z
					      mul_sat_pp r3.xy, r0.x, r3
					      add r3.z, -r4.w, -c0.y
					      cmp r3.z, r3.z, c22.z, c22.y
					      mul_pp r3.y, r3.z, r3.y
					      mad_pp r4, r4.xyzx, c22.zzzy, c22.yyyz
					      mad_pp r1, r4, r3.x, r1
					      mad_pp r2, r4, r3.y, r2
					      mov r0.y, r0.z
					    endrep
					    cmp r0.x, -r1.w, c22.z, c22.y
					    add r0.x, r0.x, r1.w
					    rcp r0.x, r0.x
					    mul_pp r0.xyz, r0.x, r1
					    cmp r0.w, -r2.w, c22.z, c22.y
					    add r0.w, r0.w, r2.w
					    rcp r0.w, r0.w
					    mul_sat_pp r1.x, r2.w, c4.w
					    mad_pp r1.yzw, r2.xxyz, r0.w, -r0.xxyz
					    mad_pp oC0.xyz, r1.x, r1.yzww, r0
					    mov_pp oC0.w, r1.x
					
					// approximately 135 instruction slots used (2 texture, 133 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_immediateConstantBuffer { { 0, 0, 0, 0},
					                              { 0.275862, 0, 0, 0},
					                              { 0.171997, 0.215678, 0, 0},
					                              { -0.061385, 0.268946, 0, 0},
					                              { -0.248543, 0.119692, 0, 0},
					                              { -0.248543, -0.119692, 0, 0},
					                              { -0.061385, -0.268946, 0, 0},
					                              { 0.171997, -0.215678, 0, 0},
					                              { 0.517241, 0, 0, 0},
					                              { 0.466018, 0.224423, 0, 0},
					                              { 0.322495, 0.404396, 0, 0},
					                              { 0.115097, 0.504273, 0, 0},
					                              { -0.115097, 0.504273, 0, 0},
					                              { -0.322495, 0.404396, 0, 0},
					                              { -0.466018, 0.224423, 0, 0},
					                              { -0.517241, 0, 0, 0},
					                              { -0.466018, -0.224423, 0, 0},
					                              { -0.322495, -0.404396, 0, 0},
					                              { -0.115097, -0.504273, 0, 0},
					                              { 0.115097, -0.504273, 0, 0},
					                              { 0.322495, -0.404396, 0, 0},
					                              { 0.466018, -0.224423, 0, 0},
					                              { 0.758621, 0, 0, 0},
					                              { 0.724917, 0.223607, 0, 0},
					                              { 0.626802, 0.427346, 0, 0},
					                              { 0.472992, 0.593114, 0, 0},
					                              { 0.277155, 0.706180, 0, 0},
					                              { 0.056692, 0.756499, 0, 0},
					                              { -0.168809, 0.739600, 0, 0},
					                              { -0.379310, 0.656985, 0, 0},
					                              { -0.556108, 0.515993, 0, 0},
					                              { -0.683494, 0.329153, 0, 0},
					                              { -0.750148, 0.113066, 0, 0},
					                              { -0.750148, -0.113067, 0, 0},
					                              { -0.683494, -0.329153, 0, 0},
					                              { -0.556108, -0.515993, 0, 0},
					                              { -0.379310, -0.656985, 0, 0},
					                              { -0.168809, -0.739600, 0, 0},
					                              { 0.056692, -0.756499, 0, 0},
					                              { 0.277156, -0.706180, 0, 0},
					                              { 0.472992, -0.593114, 0, 0},
					                              { 0.626802, -0.427346, 0, 0},
					                              { 0.724917, -0.223607, 0, 0},
					                              { 1.000000, 0, 0, 0},
					                              { 0.974928, 0.222521, 0, 0},
					                              { 0.900969, 0.433884, 0, 0},
					                              { 0.781832, 0.623490, 0, 0},
					                              { 0.623490, 0.781832, 0, 0},
					                              { 0.433884, 0.900969, 0, 0},
					                              { 0.222521, 0.974928, 0, 0},
					                              { 0, 1.000000, 0, 0},
					                              { -0.222521, 0.974928, 0, 0},
					                              { -0.433884, 0.900969, 0, 0},
					                              { -0.623490, 0.781831, 0, 0},
					                              { -0.781832, 0.623490, 0, 0},
					                              { -0.900969, 0.433884, 0, 0},
					                              { -0.974928, 0.222521, 0, 0},
					                              { -1.000000, 0, 0, 0},
					                              { -0.974928, -0.222521, 0, 0},
					                              { -0.900969, -0.433884, 0, 0},
					                              { -0.781831, -0.623490, 0, 0},
					                              { -0.623490, -0.781832, 0, 0},
					                              { -0.433883, -0.900969, 0, 0},
					                              { -0.222521, -0.974928, 0, 0},
					                              { 0, -1.000000, 0, 0},
					                              { 0.222521, -0.974928, 0, 0},
					                              { 0.433883, -0.900969, 0, 0},
					                              { 0.623490, -0.781832, 0, 0},
					                              { 0.781831, -0.623490, 0, 0},
					                              { 0.900969, -0.433884, 0, 0},
					                              { 0.974928, -0.222521, 0, 0} }
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 6
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					add r0.x, cb0[2].y, cb0[2].y
					mov r1.w, l(1.000000)
					mov r2.xyzw, l(0,0,0,0)
					mov r3.xyzw, l(0,0,0,0)
					mov r0.y, l(0)
					loop 
					  ige r0.z, r0.y, l(71)
					  breakc_nz r0.z
					  mul r4.yz, cb0[4].zzzz, icb[r0.y + 0].xxyx
					  dp2 r0.z, r4.yzyy, r4.yzyy
					  sqrt r0.z, r0.z
					  mul r4.x, r4.y, cb0[5].x
					  add r4.xy, r4.xzxx, v1.xyxx
					  sample r4.xyzw, r4.xyxx, t0.xyzw, s0
					  min r5.x, r0.w, r4.w
					  max r5.x, r5.x, l(0.000000)
					  add r5.x, -r0.z, r5.x
					  mad r5.x, cb0[2].y, l(2.000000), r5.x
					  div_sat r5.x, r5.x, r0.x
					  add r0.z, -r0.z, -r4.w
					  mad r0.z, cb0[2].y, l(2.000000), r0.z
					  div_sat r0.z, r0.z, r0.x
					  ge r4.w, -r4.w, cb0[2].y
					  and r4.w, r4.w, l(0x3f800000)
					  mul r0.z, r0.z, r4.w
					  mov r1.xyz, r4.xyzx
					  mad r2.xyzw, r1.xyzw, r5.xxxx, r2.xyzw
					  mad r3.xyzw, r1.xyzw, r0.zzzz, r3.xyzw
					  iadd r0.y, r0.y, l(1)
					endloop 
					eq r0.x, r2.w, l(0.000000)
					and r0.x, r0.x, l(0x3f800000)
					add r0.x, r0.x, r2.w
					div r0.xyz, r2.xyzx, r0.xxxx
					eq r0.w, r3.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					add r0.w, r0.w, r3.w
					div r1.xyz, r3.xyzx, r0.wwww
					mul r0.w, r3.w, l(0.044248)
					min r0.w, r0.w, l(1.000000)
					add r1.xyz, -r0.xyzx, r1.xyzx
					mad o0.xyz, r0.wwww, r1.xyzx, r0.xyzx
					mov o0.w, r0.w
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "POSTFILTER"
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 516055
			Program "vp" {
				SubProgram "d3d9 " {
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_TexelSize;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_TexelSize  c8       1
					//
					
					    vs_3_0
					    def c9, 0, 1, 0, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    add r0.x, c9.y, -v1.y
					    add r0.x, r0.x, -v1.y
					    mov r1.x, c9.x
					    slt r0.y, c8.y, r1.x
					    mad o2.y, r0.y, r0.x, v1.y
					    mad r0, v0.xyzx, c9.yyyx, c9.xxxy
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mov o1.xy, v1
					    mov o2.x, v1.x
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 18 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.w, r0.x, r0.y, v1.y
					mov o1.xyz, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _MainTex;
					//   float4 _MainTex_TexelSize;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   _MainTex_TexelSize c0       1
					//   _MainTex           s0       1
					//
					
					    ps_3_0
					    def c1, 0.5, -0.5, 0.25, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    mov r0.xy, c1
					    mad r1, c0.xyxy, -r0.xxyx, v0.xyxy
					    texld_pp r2, r1, s0
					    texld r1, r1.zwzw, s0
					    add_pp r1, r1, r2
					    mad r0, c0.xyxy, r0.yxxx, v0.xyxy
					    texld r2, r0, s0
					    texld r0, r0.zwzw, s0
					    add_pp r1, r1, r2
					    add_pp r0, r0, r1
					    mul_pp oC0, r0, c1.z
					
					// approximately 11 instruction slots used (4 texture, 7 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 3
					mad r0.xyzw, -cb0[2].xyxy, l(0.500000, 0.500000, -0.500000, 0.500000), v1.xyxy
					sample r1.xyzw, r0.xyxx, t0.xyzw, s0
					sample r0.xyzw, r0.zwzz, t0.xyzw, s0
					add r0.xyzw, r0.xyzw, r1.xyzw
					mad r1.xyzw, cb0[2].xyxy, l(-0.500000, 0.500000, 0.500000, 0.500000), v1.xyxy
					sample r2.xyzw, r1.xyxx, t0.xyzw, s0
					sample r1.xyzw, r1.zwzz, t0.xyzw, s0
					add r0.xyzw, r0.xyzw, r2.xyzw
					add r0.xyzw, r1.xyzw, r0.xyzw
					mul o0.xyzw, r0.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
	SubShader {
		Pass {
			Name "COC CALCULATION"
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 584794
			Program "vp" {
				SubProgram "d3d9 " {
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_TexelSize;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_TexelSize  c8       1
					//
					
					    vs_3_0
					    def c9, 0, 1, 0, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    add r0.x, c9.y, -v1.y
					    add r0.x, r0.x, -v1.y
					    mov r1.x, c9.x
					    slt r0.y, c8.y, r1.x
					    mad o2.y, r0.y, r0.x, v1.y
					    mad r0, v0.xyzx, c9.yyyx, c9.xxxy
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mov o1.xy, v1
					    mov o2.x, v1.x
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 18 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.w, r0.x, r0.y, v1.y
					mov o1.xyz, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _CameraDepthTexture;
					//   float _Distance;
					//   float _LensCoeff;
					//   float _RcpMaxCoC;
					//   float4 _ZBufferParams;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   _ZBufferParams      c0       1
					//   _Distance           c1       1
					//   _LensCoeff          c2       1
					//   _RcpMaxCoC          c3       1
					//   _CameraDepthTexture s0       1
					//
					
					    ps_3_0
					    def c4, -9.99999975e-006, 100000, 0.5, 0
					    dcl_texcoord_pp v0.xy
					    dcl_2d s0
					    texld r0, v0, s0
					    mad r0.x, c0.z, r0.x, c0.w
					    rcp r0.y, r0.x
					    add r0.z, r0.y, c4.x
					    add r0.y, r0.y, -c1.x
					    mul r0.y, r0.y, c2.x
					    cmp r0.x, r0.z, r0.x, c4.y
					    mul_pp r0.x, r0.x, r0.y
					    mul r0.x, r0.x, c4.z
					    mov r0.z, c4.z
					    mad_pp r0.x, r0.x, c3.x, r0.z
					    mov_sat_pp oC0, r0.x
					
					// approximately 12 instruction slots used (1 texture, 11 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[8], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 1
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					mad r0.x, cb1[7].z, r0.x, cb1[7].w
					div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
					add r0.y, r0.x, -cb0[4].x
					max r0.x, r0.x, l(0.000010)
					mul r0.y, r0.y, cb0[4].y
					div r0.x, r0.y, r0.x
					mul r0.x, r0.x, l(0.500000)
					mad r0.x, r0.x, cb0[4].w, l(0.500000)
					mov_sat o0.xyzw, r0.xxxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "COC TEMPORAL FILTER"
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 610647
			Program "vp" {
				SubProgram "d3d9 " {
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_TexelSize;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_TexelSize  c8       1
					//
					
					    vs_3_0
					    def c9, 0, 1, 0, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    add r0.x, c9.y, -v1.y
					    add r0.x, r0.x, -v1.y
					    mov r1.x, c9.x
					    slt r0.y, c8.y, r1.x
					    mad o2.y, r0.y, r0.x, v1.y
					    mad r0, v0.xyzx, c9.yyyx, c9.xxxy
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mov o1.xy, v1
					    mov o2.x, v1.x
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 18 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.w, r0.x, r0.y, v1.y
					mov o1.xyz, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _CameraMotionVectorsTexture;
					//   sampler2D _CoCTex;
					//   sampler2D _MainTex;
					//   float4 _MainTex_TexelSize;
					//   float3 _TaaParams;
					//
					//
					// Registers:
					//
					//   Name                        Reg   Size
					//   --------------------------- ----- ----
					//   _MainTex_TexelSize          c0       1
					//   _TaaParams                  c1       1
					//   _MainTex                    s0       1
					//   _CameraMotionVectorsTexture s1       1
					//   _CoCTex                     s2       1
					//
					
					    ps_3_0
					    def c2, 1, 0, -0, -1
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    dcl_2d s2
					    mov r0, c2
					    mul r1.xy, r0.yxzw, c0.y
					    mul r2.xy, r0.zwzw, c0.y
					    mad r3, c0.xyyy, -r0.xyyx, v0.xyxy
					    texld_pp r4, r3, s2
					    texld_pp r3, r3.zwzw, s2
					    add_pp r0.zw, -c1.xyxy, v0.xyxy
					    texld_pp r5, r0.zwzw, s2
					    add r0.z, r4.x, -r5.x
					    mul_pp r3.yz, r5.x, c2.xyxw
					    cmp r6.z, r0.z, r3.z, r4.x
					    max_pp r0.w, r5.x, r4.x
					    max_pp r1.w, r0.w, r3.x
					    add r0.w, r3.x, -r6.z
					    mov_pp r2.z, r3.x
					    mul r3.xz, r0.xyyw, c0.xyyw
					    cmp r6.xy, r0.z, r3.y, -r3.xzzw
					    cmp r2.xyz, r0.w, r6, r2
					    mad r0, c0.yyxy, r0.yxxy, v0.xyxy
					    texld_pp r4, r0, s2
					    texld_pp r0, r0.zwzw, s2
					    add r0.y, -r2.z, r4.x
					    mov_pp r1.z, r4.x
					    max_pp r0.z, r1.w, r4.x
					    max_pp r1.w, r0.z, r0.x
					    cmp r0.yzw, r0.y, r2.xxyz, r1.xxyz
					    add r1.x, -r0.w, r0.x
					    min_pp r1.y, r0.w, r0.x
					    cmp r0.xy, r1.x, r0.yzzw, r3.xzzw
					    add r0.xy, r0, v0
					    texld r0, r0, s1
					    add r0.xy, -r0, v0
					    texld_pp r0, r0, s0
					    max_pp r2.x, r0.x, r1.y
					    min_pp r0.x, r1.w, r2.x
					    add_pp r0.x, -r5.x, r0.x
					    mad_pp oC0, c1.z, r0.x, r5.x
					
					// approximately 37 instruction slots used (7 texture, 30 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 6
					mul r0.xy, cb0[2].yyyy, l(-0.000000, -1.000000, 0.000000, 0.000000)
					add r1.xy, v1.xyxx, -cb0[5].yzyy
					sample r1.xyzw, r1.xyxx, t0.xyzw, s2
					mad r2.xyzw, -cb0[2].xyyy, l(1.000000, 0.000000, 0.000000, 1.000000), v1.xyxy
					sample r3.xyzw, r2.xyxx, t0.xyzw, s2
					sample r2.xyzw, r2.zwzz, t0.xyzw, s2
					lt r0.w, r3.x, r1.x
					movc r4.z, r0.w, r3.x, r1.x
					max r1.y, r1.x, r3.x
					max r1.y, r2.x, r1.y
					lt r1.z, r2.x, r4.z
					mov r0.z, r2.x
					mul r2.xy, cb0[2].xyxx, l(1.000000, 0.000000, 0.000000, 0.000000)
					mov r2.zw, -r2.xxxy
					and r4.xy, r0.wwww, r2.zwzz
					movc r0.xyz, r1.zzzz, r0.xyzx, r4.xyzx
					mul r3.xy, cb0[2].yyyy, l(0.000000, 1.000000, 0.000000, 0.000000)
					mad r4.xyzw, cb0[2].yyxy, l(0.000000, 1.000000, 1.000000, 0.000000), v1.xyxy
					sample r5.xyzw, r4.xyxx, t0.xyzw, s2
					sample r4.xyzw, r4.zwzz, t0.xyzw, s2
					lt r0.w, r5.x, r0.z
					mov r3.z, r5.x
					max r1.y, r1.y, r5.x
					max r1.y, r4.x, r1.y
					movc r0.xyz, r0.wwww, r3.xyzx, r0.xyzx
					lt r0.w, r4.x, r0.z
					min r0.z, r4.x, r0.z
					movc r0.xy, r0.wwww, r2.xyxx, r0.xyxx
					add r0.xy, r0.xyxx, v1.xyxx
					sample r2.xyzw, r0.xyxx, t1.xyzw, s1
					add r0.xy, -r2.xyxx, v1.xyxx
					sample r2.xyzw, r0.xyxx, t2.xyzw, s0
					max r0.x, r0.z, r2.x
					min r0.x, r1.y, r0.x
					add r0.x, -r1.x, r0.x
					mad o0.xyzw, cb0[5].wwww, r0.xxxx, r1.xxxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "DOWNSAMPLE AND PREFILTER"
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 700288
			Program "vp" {
				SubProgram "d3d9 " {
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_TexelSize;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_TexelSize  c8       1
					//
					
					    vs_3_0
					    def c9, 0, 1, 0, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    add r0.x, c9.y, -v1.y
					    add r0.x, r0.x, -v1.y
					    mov r1.x, c9.x
					    slt r0.y, c8.y, r1.x
					    mad o2.y, r0.y, r0.x, v1.y
					    mad r0, v0.xyzx, c9.yyyx, c9.xxxy
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mov o1.xy, v1
					    mov o2.x, v1.x
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 18 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.w, r0.x, r0.y, v1.y
					mov o1.xyz, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d9 " {
					Keywords { "UNITY_COLORSPACE_GAMMA" }
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_TexelSize;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_TexelSize  c8       1
					//
					
					    vs_3_0
					    def c9, 0, 1, 0, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    add r0.x, c9.y, -v1.y
					    add r0.x, r0.x, -v1.y
					    mov r1.x, c9.x
					    slt r0.y, c8.y, r1.x
					    mad o2.y, r0.y, r0.x, v1.y
					    mad r0, v0.xyzx, c9.yyyx, c9.xxxy
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mov o1.xy, v1
					    mov o2.x, v1.x
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 18 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_COLORSPACE_GAMMA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.w, r0.x, r0.y, v1.y
					mov o1.xyz, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _CoCTex;
					//   sampler2D _MainTex;
					//   float4 _MainTex_TexelSize;
					//   float _MaxCoC;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   _MainTex_TexelSize c0       1
					//   _MaxCoC            c1       1
					//   _MainTex           s0       1
					//   _CoCTex            s1       1
					//
					
					    ps_3_0
					    def c2, 0.5, -0.5, 2, -1
					    def c3, -9.99999975e-006, 100000, -2, 3
					    dcl_texcoord v0.xy
					    dcl_texcoord1 v1.xy
					    dcl_2d s0
					    dcl_2d s1
					    mov r0.xy, c2
					    mad r1, c0.xyxy, -r0.xxyx, v0.xyxy
					    texld_pp r2, r1.zwzw, s0
					    texld_pp r1, r1, s0
					    max_pp r0.z, r2.y, r2.z
					    max_pp r1.w, r2.x, r0.z
					    add_pp r0.z, r1.w, -c2.w
					    rcp r0.z, r0.z
					    mad r3, c0.xyxy, -r0.xxyx, v1.xyxy
					    texld r4, r3.zwzw, s1
					    texld r3, r3, s1
					    mad_pp r0.w, r3.x, c2.z, c2.w
					    mad_pp r1.w, r4.x, c2.z, c2.w
					    mul r0.z, r0.z, r1_abs.w
					    mul r2.xyz, r0.z, r2
					    max_pp r2.w, r1.y, r1.z
					    max_pp r3.x, r1.x, r2.w
					    add_pp r2.w, r3.x, -c2.w
					    rcp r2.w, r2.w
					    mul r3.x, r0_abs.w, r2.w
					    mad r0.z, r0_abs.w, r2.w, r0.z
					    mad r1.xyz, r1, r3.x, r2
					    mad r2, c0.xyxy, r0.yxxx, v0.xyxy
					    texld_pp r3, r2, s0
					    texld_pp r2, r2.zwzw, s0
					    max_pp r2.w, r3.y, r3.z
					    max_pp r4.x, r3.x, r2.w
					    add_pp r2.w, r4.x, -c2.w
					    rcp r2.w, r2.w
					    mad r4, c0.xyxy, r0.yxxx, v1.xyxy
					    texld r5, r4, s1
					    texld r4, r4.zwzw, s1
					    mad_pp r0.x, r4.x, c2.z, c2.w
					    mad_pp r0.y, r5.x, c2.z, c2.w
					    mul r3.w, r2.w, r0_abs.y
					    mad r0.z, r0_abs.y, r2.w, r0.z
					    min_pp r2.w, r0.x, r0.y
					    mad r1.xyz, r3, r3.w, r1
					    max_pp r0.y, r2.y, r2.z
					    max_pp r3.x, r2.x, r0.y
					    add_pp r0.y, r3.x, -c2.w
					    rcp r0.y, r0.y
					    mul r3.x, r0.y, r0_abs.x
					    mad r0.x, r0_abs.x, r0.y, r0.z
					    mad_pp r1.xyz, r2, r3.x, r1
					    add r0.y, r0.x, c3.x
					    rcp r0.x, r0.x
					    cmp r0.x, r0.y, r0.x, c3.y
					    mul_pp r0.xyz, r0.x, r1
					    min_pp r3.x, r2.w, r1.w
					    max_pp r3.y, r1.w, r2.w
					    max_pp r1.x, r0.w, r3.y
					    min_pp r1.y, r3.x, r0.w
					    add r0.w, r1.y, r1.x
					    cmp r0.w, r0.w, r1.x, r1.y
					    mul_pp r0.w, r0.w, c1.x
					    add r1.x, c0.y, c0.y
					    rcp r1.x, r1.x
					    mul_sat r1.x, r0_abs.w, r1.x
					    mov_pp oC0.w, r0.w
					    mad r0.w, r1.x, c3.z, c3.w
					    mul r1.x, r1.x, r1.x
					    mul r0.w, r0.w, r1.x
					    mul_pp oC0.xyz, r0.w, r0
					
					// approximately 64 instruction slots used (8 texture, 56 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v1.zw
					dcl_output o0.xyzw
					dcl_temps 7
					mad r0.xyzw, -cb0[2].xyxy, l(0.500000, 0.500000, -0.500000, 0.500000), v1.xyxy
					sample r1.xyzw, r0.zwzz, t0.xyzw, s0
					sample r0.xyzw, r0.xyxx, t0.xyzw, s0
					max r0.w, r1.z, r1.y
					max r0.w, r0.w, r1.x
					add r0.w, r0.w, l(1.000000)
					mad r2.xyzw, -cb0[2].xyxy, l(0.500000, 0.500000, -0.500000, 0.500000), v1.zwzw
					sample r3.xyzw, r2.zwzz, t1.xyzw, s1
					sample r2.xyzw, r2.xyxx, t1.xyzw, s1
					mad r1.w, r2.x, l(2.000000), l(-1.000000)
					mad r2.x, r3.x, l(2.000000), l(-1.000000)
					div r0.w, |r2.x|, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					max r2.y, r0.z, r0.y
					max r2.y, r0.x, r2.y
					add r2.y, r2.y, l(1.000000)
					div r2.y, |r1.w|, r2.y
					mad r0.xyz, r0.xyzx, r2.yyyy, r1.xyzx
					add r0.w, r0.w, r2.y
					mad r3.xyzw, cb0[2].xyxy, l(-0.500000, 0.500000, 0.500000, 0.500000), v1.xyxy
					sample r4.xyzw, r3.xyxx, t0.xyzw, s0
					sample r3.xyzw, r3.zwzz, t0.xyzw, s0
					max r1.x, r4.z, r4.y
					max r1.x, r1.x, r4.x
					add r1.x, r1.x, l(1.000000)
					mad r5.xyzw, cb0[2].xyxy, l(-0.500000, 0.500000, 0.500000, 0.500000), v1.zwzw
					sample r6.xyzw, r5.xyxx, t1.xyzw, s1
					sample r5.xyzw, r5.zwzz, t1.xyzw, s1
					mad r1.y, r5.x, l(2.000000), l(-1.000000)
					mad r1.z, r6.x, l(2.000000), l(-1.000000)
					div r1.x, |r1.z|, r1.x
					min r1.z, r1.y, r1.z
					mad r0.xyz, r4.xyzx, r1.xxxx, r0.xyzx
					add r0.w, r0.w, r1.x
					max r1.x, r3.z, r3.y
					max r1.x, r1.x, r3.x
					add r1.x, r1.x, l(1.000000)
					div r1.x, |r1.y|, r1.x
					mad r0.xyz, r3.xyzx, r1.xxxx, r0.xyzx
					add r0.w, r0.w, r1.x
					max r0.w, r0.w, l(0.000010)
					div r0.xyz, r0.xyzx, r0.wwww
					min r0.w, r1.z, r2.x
					max r1.x, r1.z, r2.x
					max r1.x, r1.x, r1.w
					min r0.w, r0.w, r1.w
					lt r1.y, r1.x, -r0.w
					movc r0.w, r1.y, r0.w, r1.x
					mul r0.w, r0.w, cb0[4].z
					add r1.x, cb0[2].y, cb0[2].y
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r1.x, |r0.w|, r1.x
					mov o0.w, r0.w
					mad r0.w, r1.x, l(-2.000000), l(3.000000)
					mul r1.x, r1.x, r1.x
					mul r0.w, r0.w, r1.x
					mul o0.xyz, r0.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d9 " {
					Keywords { "UNITY_COLORSPACE_GAMMA" }
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _CoCTex;
					//   sampler2D _MainTex;
					//   float4 _MainTex_TexelSize;
					//   float _MaxCoC;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   _MainTex_TexelSize c0       1
					//   _MaxCoC            c1       1
					//   _MainTex           s0       1
					//   _CoCTex            s1       1
					//
					
					    ps_3_0
					    def c2, 0.5, -0.5, 2, -1
					    def c3, -9.99999975e-006, 100000, -2, 3
					    def c4, 0.305306017, 0.682171106, 0.0125228781, 0
					    dcl_texcoord v0.xy
					    dcl_texcoord1 v1.xy
					    dcl_2d s0
					    dcl_2d s1
					    mov r0.xy, c2
					    mad r1, c0.xyxy, -r0.xxyx, v0.xyxy
					    texld_pp r2, r1.zwzw, s0
					    texld_pp r1, r1, s0
					    max_pp r0.z, r2.y, r2.z
					    max_pp r1.w, r2.x, r0.z
					    add_pp r0.z, r1.w, -c2.w
					    rcp r0.z, r0.z
					    mad r3, c0.xyxy, -r0.xxyx, v1.xyxy
					    texld r4, r3.zwzw, s1
					    texld r3, r3, s1
					    mad_pp r0.w, r3.x, c2.z, c2.w
					    mad_pp r1.w, r4.x, c2.z, c2.w
					    mul r0.z, r0.z, r1_abs.w
					    mul r2.xyz, r0.z, r2
					    max_pp r2.w, r1.y, r1.z
					    max_pp r3.x, r1.x, r2.w
					    add_pp r2.w, r3.x, -c2.w
					    rcp r2.w, r2.w
					    mul r3.x, r0_abs.w, r2.w
					    mad r0.z, r0_abs.w, r2.w, r0.z
					    mad r1.xyz, r1, r3.x, r2
					    mad r2, c0.xyxy, r0.yxxx, v0.xyxy
					    texld_pp r3, r2, s0
					    texld_pp r2, r2.zwzw, s0
					    max_pp r2.w, r3.y, r3.z
					    max_pp r4.x, r3.x, r2.w
					    add_pp r2.w, r4.x, -c2.w
					    rcp r2.w, r2.w
					    mad r4, c0.xyxy, r0.yxxx, v1.xyxy
					    texld r5, r4, s1
					    texld r4, r4.zwzw, s1
					    mad_pp r0.x, r4.x, c2.z, c2.w
					    mad_pp r0.y, r5.x, c2.z, c2.w
					    mul r3.w, r2.w, r0_abs.y
					    mad r0.z, r0_abs.y, r2.w, r0.z
					    min_pp r2.w, r0.x, r0.y
					    mad r1.xyz, r3, r3.w, r1
					    max_pp r0.y, r2.y, r2.z
					    max_pp r3.x, r2.x, r0.y
					    add_pp r0.y, r3.x, -c2.w
					    rcp r0.y, r0.y
					    mul r3.x, r0.y, r0_abs.x
					    mad r0.x, r0_abs.x, r0.y, r0.z
					    mad_pp r1.xyz, r2, r3.x, r1
					    add r0.y, r0.x, c3.x
					    rcp r0.x, r0.x
					    cmp r0.x, r0.y, r0.x, c3.y
					    mul_pp r0.xyz, r0.x, r1
					    min_pp r3.x, r2.w, r1.w
					    max_pp r3.y, r1.w, r2.w
					    max_pp r1.x, r0.w, r3.y
					    min_pp r1.y, r3.x, r0.w
					    add r0.w, r1.y, r1.x
					    cmp r0.w, r0.w, r1.x, r1.y
					    mul_pp r0.w, r0.w, c1.x
					    add r1.x, c0.y, c0.y
					    rcp r1.x, r1.x
					    mul_sat r1.x, r0_abs.w, r1.x
					    mov_pp oC0.w, r0.w
					    mad r0.w, r1.x, c3.z, c3.w
					    mul r1.x, r1.x, r1.x
					    mul r0.w, r0.w, r1.x
					    mul_pp r0.xyz, r0.w, r0
					    mad_pp r1.xyz, r0, c4.x, c4.y
					    mad_pp r1.xyz, r0, r1, c4.z
					    mul_pp oC0.xyz, r0, r1
					
					// approximately 67 instruction slots used (8 texture, 59 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_COLORSPACE_GAMMA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v1.zw
					dcl_output o0.xyzw
					dcl_temps 7
					mad r0.xyzw, -cb0[2].xyxy, l(0.500000, 0.500000, -0.500000, 0.500000), v1.xyxy
					sample r1.xyzw, r0.zwzz, t0.xyzw, s0
					sample r0.xyzw, r0.xyxx, t0.xyzw, s0
					max r0.w, r1.z, r1.y
					max r0.w, r0.w, r1.x
					add r0.w, r0.w, l(1.000000)
					mad r2.xyzw, -cb0[2].xyxy, l(0.500000, 0.500000, -0.500000, 0.500000), v1.zwzw
					sample r3.xyzw, r2.zwzz, t1.xyzw, s1
					sample r2.xyzw, r2.xyxx, t1.xyzw, s1
					mad r1.w, r2.x, l(2.000000), l(-1.000000)
					mad r2.x, r3.x, l(2.000000), l(-1.000000)
					div r0.w, |r2.x|, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					max r2.y, r0.z, r0.y
					max r2.y, r0.x, r2.y
					add r2.y, r2.y, l(1.000000)
					div r2.y, |r1.w|, r2.y
					mad r0.xyz, r0.xyzx, r2.yyyy, r1.xyzx
					add r0.w, r0.w, r2.y
					mad r3.xyzw, cb0[2].xyxy, l(-0.500000, 0.500000, 0.500000, 0.500000), v1.xyxy
					sample r4.xyzw, r3.xyxx, t0.xyzw, s0
					sample r3.xyzw, r3.zwzz, t0.xyzw, s0
					max r1.x, r4.z, r4.y
					max r1.x, r1.x, r4.x
					add r1.x, r1.x, l(1.000000)
					mad r5.xyzw, cb0[2].xyxy, l(-0.500000, 0.500000, 0.500000, 0.500000), v1.zwzw
					sample r6.xyzw, r5.xyxx, t1.xyzw, s1
					sample r5.xyzw, r5.zwzz, t1.xyzw, s1
					mad r1.y, r5.x, l(2.000000), l(-1.000000)
					mad r1.z, r6.x, l(2.000000), l(-1.000000)
					div r1.x, |r1.z|, r1.x
					min r1.z, r1.y, r1.z
					mad r0.xyz, r4.xyzx, r1.xxxx, r0.xyzx
					add r0.w, r0.w, r1.x
					max r1.x, r3.z, r3.y
					max r1.x, r1.x, r3.x
					add r1.x, r1.x, l(1.000000)
					div r1.x, |r1.y|, r1.x
					mad r0.xyz, r3.xyzx, r1.xxxx, r0.xyzx
					add r0.w, r0.w, r1.x
					max r0.w, r0.w, l(0.000010)
					div r0.xyz, r0.xyzx, r0.wwww
					min r0.w, r1.z, r2.x
					max r1.x, r1.z, r2.x
					max r1.x, r1.x, r1.w
					min r0.w, r0.w, r1.w
					lt r1.y, r1.x, -r0.w
					movc r0.w, r1.y, r0.w, r1.x
					mul r0.w, r0.w, cb0[4].z
					add r1.x, cb0[2].y, cb0[2].y
					div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
					mul_sat r1.x, |r0.w|, r1.x
					mov o0.w, r0.w
					mad r0.w, r1.x, l(-2.000000), l(3.000000)
					mul r1.x, r1.x, r1.x
					mul r0.w, r0.w, r1.x
					mul r0.xyz, r0.wwww, r0.xyzx
					mad r1.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r1.xyz, r0.xyzx, r1.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul o0.xyz, r0.xyzx, r1.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "BOKEH FILTER (SMALL)"
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 757278
			Program "vp" {
				SubProgram "d3d9 " {
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_TexelSize;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_TexelSize  c8       1
					//
					
					    vs_3_0
					    def c9, 0, 1, 0, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    add r0.x, c9.y, -v1.y
					    add r0.x, r0.x, -v1.y
					    mov r1.x, c9.x
					    slt r0.y, c8.y, r1.x
					    mad o2.y, r0.y, r0.x, v1.y
					    mad r0, v0.xyzx, c9.yyyx, c9.xxxy
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mov o1.xy, v1
					    mov o2.x, v1.x
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 18 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.w, r0.x, r0.y, v1.y
					mov o1.xyz, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _MainTex;
					//   float4 _MainTex_TexelSize;
					//   float _MaxCoC;
					//   float _RcpAspect;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   _MainTex_TexelSize c0       1
					//   _MaxCoC            c1       1
					//   _RcpAspect         c2       1
					//   _MainTex           s0       1
					//
					
					    ps_3_0
					    def c3, -1, -2, -3, -4
					    def c4, -5, -6, -7, -8
					    def c5, -9, -10, -11, 1
					    def c6, -12, -13, -14, -15
					    def c7, 0.809016943, -0.587785304, 0.196349546, 0
					    def c8, 0, 0, 0.545454562, 1
					    def c9, 0.168554723, 0.518758118, -0.441282034, 0.320610106
					    def c10, -0.441281974, -0.320610195, 0.168554798, -0.518758118
					    def c11, 0.809017003, 0.587785244, 0.309016973, 0.95105654
					    def c12, -0.309017032, 0.95105648, -0.809017062, 0.587785184
					    def c13, -1, 0, -0.809016943, -0.587785363
					    def c14, -0.309016645, -0.9510566, 0.309017122, -0.95105648
					    defi i0, 16, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    texld_pp r0, v0, s0
					    add_pp r0.x, c0.y, c0.y
					    rcp r0.x, r0.x
					    mov_pp r1, c8.y
					    mov_pp r2, c8.y
					    mov r3.x, c8.y
					    rep i0
					      add r4, r3.x, c3
					      add r5, r3.x, c4
					      add r6, r3.x, c6
					      add r3, r3.x, c5.wxyz
					      cmp r0.yz, -r4_abs.x, c8.xzyw, c8.y
					      cmp r0.yz, -r4_abs.y, c9.xxyw, r0
					      cmp r0.yz, -r4_abs.z, c9.xzww, r0
					      cmp r0.yz, -r4_abs.w, c10.xxyw, r0
					      cmp r0.yz, -r5_abs.x, c10.xzww, r0
					      cmp r0.yz, -r5_abs.y, c8.xwyw, r0
					      cmp r0.yz, -r5_abs.z, c11.xxyw, r0
					      cmp r0.yz, -r5_abs.w, c11.xzww, r0
					      cmp r0.yz, -r3_abs.y, c12.xxyw, r0
					      cmp r0.yz, -r3_abs.z, c12.xzww, r0
					      cmp r0.yz, -r3_abs.w, c13.xxyw, r0
					      cmp r0.yz, -r6_abs.x, c13.xzww, r0
					      cmp r0.yz, -r6_abs.y, c14.xxyw, r0
					      cmp r0.yz, -r6_abs.z, c14.xzww, r0
					      cmp r0.yz, -r6_abs.w, c7.xxyw, r0
					      mul r4.yz, r0, c1.x
					      dp2add r0.y, r4.yzzw, r4.yzzw, c8.y
					      rsq r0.y, r0.y
					      rcp r0.y, r0.y
					      mul r4.x, r4.y, c2.x
					      add r3.yz, r4.xxzw, v0.xxyw
					      texld_pp r4, r3.yzzw, s0
					      min_pp r3.y, r4.w, r0.w
					      max_pp r0.z, r3.y, c8.y
					      add r0.z, -r0.y, r0.z
					      mov r3.y, c3.y
					      mad r0.z, c0.y, -r3.y, r0.z
					      add r0.y, -r0.y, -r4.w
					      mad r0.y, c0.y, -r3.y, r0.y
					      mul_sat_pp r0.yz, r0.x, r0
					      add r3.y, -r4.w, -c0.y
					      cmp r3.y, r3.y, c8.w, c8.y
					      mul_pp r0.y, r0.y, r3.y
					      mad_pp r4, r4.xyzx, c8.wwwy, c8.yyyw
					      mad_pp r1, r4, r0.z, r1
					      mad_pp r2, r4, r0.y, r2
					    endrep
					    cmp r0.x, -r1.w, c8.w, c8.y
					    add r0.x, r0.x, r1.w
					    rcp r0.x, r0.x
					    mul_pp r0.xyz, r0.x, r1
					    cmp r0.w, -r2.w, c8.w, c8.y
					    add r0.w, r0.w, r2.w
					    rcp r0.w, r0.w
					    mul_sat_pp r1.x, r2.w, c7.z
					    mad_pp r1.yzw, r2.xxyz, r0.w, -r0.xxyz
					    mad_pp oC0.xyz, r1.x, r1.yzww, r0
					    mov_pp oC0.w, r1.x
					
					// approximately 63 instruction slots used (2 texture, 61 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_immediateConstantBuffer { { 0, 0, 0, 0},
					                              { 0.545455, 0, 0, 0},
					                              { 0.168555, 0.518758, 0, 0},
					                              { -0.441282, 0.320610, 0, 0},
					                              { -0.441282, -0.320610, 0, 0},
					                              { 0.168555, -0.518758, 0, 0},
					                              { 1.000000, 0, 0, 0},
					                              { 0.809017, 0.587785, 0, 0},
					                              { 0.309017, 0.951057, 0, 0},
					                              { -0.309017, 0.951056, 0, 0},
					                              { -0.809017, 0.587785, 0, 0},
					                              { -1.000000, 0, 0, 0},
					                              { -0.809017, -0.587785, 0, 0},
					                              { -0.309017, -0.951057, 0, 0},
					                              { 0.309017, -0.951056, 0, 0},
					                              { 0.809017, -0.587785, 0, 0} }
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 6
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					add r0.x, cb0[2].y, cb0[2].y
					mov r1.w, l(1.000000)
					mov r2.xyzw, l(0,0,0,0)
					mov r3.xyzw, l(0,0,0,0)
					mov r0.y, l(0)
					loop 
					  ige r0.z, r0.y, l(16)
					  breakc_nz r0.z
					  mul r4.yz, cb0[4].zzzz, icb[r0.y + 0].xxyx
					  dp2 r0.z, r4.yzyy, r4.yzyy
					  sqrt r0.z, r0.z
					  mul r4.x, r4.y, cb0[5].x
					  add r4.xy, r4.xzxx, v1.xyxx
					  sample r4.xyzw, r4.xyxx, t0.xyzw, s0
					  min r5.x, r0.w, r4.w
					  max r5.x, r5.x, l(0.000000)
					  add r5.x, -r0.z, r5.x
					  mad r5.x, cb0[2].y, l(2.000000), r5.x
					  div_sat r5.x, r5.x, r0.x
					  add r0.z, -r0.z, -r4.w
					  mad r0.z, cb0[2].y, l(2.000000), r0.z
					  div_sat r0.z, r0.z, r0.x
					  ge r4.w, -r4.w, cb0[2].y
					  and r4.w, r4.w, l(0x3f800000)
					  mul r0.z, r0.z, r4.w
					  mov r1.xyz, r4.xyzx
					  mad r2.xyzw, r1.xyzw, r5.xxxx, r2.xyzw
					  mad r3.xyzw, r1.xyzw, r0.zzzz, r3.xyzw
					  iadd r0.y, r0.y, l(1)
					endloop 
					eq r0.x, r2.w, l(0.000000)
					and r0.x, r0.x, l(0x3f800000)
					add r0.x, r0.x, r2.w
					div r0.xyz, r2.xyzx, r0.xxxx
					eq r0.w, r3.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					add r0.w, r0.w, r3.w
					div r1.xyz, r3.xyzx, r0.wwww
					mul r0.w, r3.w, l(0.196350)
					min r0.w, r0.w, l(1.000000)
					add r1.xyz, -r0.xyzx, r1.xyzx
					mad o0.xyz, r0.wwww, r1.xyzx, r0.xyzx
					mov o0.w, r0.w
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "BOKEH FILTER (MEDIUM)"
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 827133
			Program "vp" {
				SubProgram "d3d9 " {
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_TexelSize;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_TexelSize  c8       1
					//
					
					    vs_3_0
					    def c9, 0, 1, 0, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    add r0.x, c9.y, -v1.y
					    add r0.x, r0.x, -v1.y
					    mov r1.x, c9.x
					    slt r0.y, c8.y, r1.x
					    mad o2.y, r0.y, r0.x, v1.y
					    mad r0, v0.xyzx, c9.yyyx, c9.xxxy
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mov o1.xy, v1
					    mov o2.x, v1.x
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 18 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.w, r0.x, r0.y, v1.y
					mov o1.xyz, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _MainTex;
					//   float4 _MainTex_TexelSize;
					//   float _MaxCoC;
					//   float _RcpAspect;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   _MainTex_TexelSize c0       1
					//   _MaxCoC            c1       1
					//   _RcpAspect         c2       1
					//   _MainTex           s0       1
					//
					
					    ps_3_0
					    def c3, -1, -2, -3, -4
					    def c4, -5, -6, -7, -8
					    def c5, -9, -10, -11, -12
					    def c6, -13, -14, -15, -16
					    def c7, 0, 0, -17, 1
					    def c8, -18, -19, -20, -21
					    def c9, 0.90096885, -0.433883756, 0.142799661, 0
					    def c10, 0.533333361, 0, 0.332527906, 0.41697681
					    def c11, -0.118677847, 0.519961596, -0.480516732, 0.231404707
					    def c12, -0.480516732, -0.231404677, -0.118677631, -0.519961655
					    def c13, 0.332527846, -0.416976899, 0.90096885, 0.433883756
					    def c14, 0.623489797, 0.781831503, 0.222520977, 0.974927902
					    def c15, -0.222520947, 0.974927902, -0.623489976, 0.781831384
					    def c16, -0.90096885, 0.433883816, -1, 0
					    def c17, -0.623489618, -0.781831622, -0.222520545, -0.974928021
					    def c18, 0.222521499, -0.974927783, 0.623489678, -0.781831622
					    defi i0, 22, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    texld_pp r0, v0, s0
					    add_pp r0.x, c0.y, c0.y
					    rcp r0.x, r0.x
					    mov_pp r1, c7.y
					    mov_pp r2, c7.y
					    mov r0.y, c7.y
					    rep i0
					      add r3, r0.y, c3
					      add r4, r0.y, c4
					      add r5, r0.y, c5
					      add r6, r0.y, c6
					      add r7, r0.y, c8
					      add r0.yz, r0.y, c7.xwzw
					      cmp r8.xy, -r3_abs.x, c10, c10.y
					      cmp r3.xy, -r3_abs.y, c10.zwzw, r8
					      cmp r3.xy, -r3_abs.z, c11, r3
					      cmp r3.xy, -r3_abs.w, c11.zwzw, r3
					      cmp r3.xy, -r4_abs.x, c12, r3
					      cmp r3.xy, -r4_abs.y, c12.zwzw, r3
					      cmp r3.xy, -r4_abs.z, c13, r3
					      cmp r3.xy, -r4_abs.w, c7.wyzw, r3
					      cmp r3.xy, -r5_abs.x, c13.zwzw, r3
					      cmp r3.xy, -r5_abs.y, c14, r3
					      cmp r3.xy, -r5_abs.z, c14.zwzw, r3
					      cmp r3.xy, -r5_abs.w, c15, r3
					      cmp r3.xy, -r6_abs.x, c15.zwzw, r3
					      cmp r3.xy, -r6_abs.y, c16, r3
					      cmp r3.xy, -r6_abs.z, c16.zwzw, r3
					      cmp r3.xy, -r6_abs.w, -c13.zwzw, r3
					      cmp r3.xy, -r0_abs.z, c17, r3
					      cmp r3.xy, -r7_abs.x, c17.zwzw, r3
					      cmp r3.xy, -r7_abs.y, c18, r3
					      cmp r3.xy, -r7_abs.z, c18.zwzw, r3
					      cmp r3.xy, -r7_abs.w, c9, r3
					      mul r3.yz, r3.xxyw, c1.x
					      dp2add r0.z, r3.yzzw, r3.yzzw, c7.y
					      rsq r0.z, r0.z
					      rcp r0.z, r0.z
					      mul r3.x, r3.y, c2.x
					      add r3.xy, r3.xzzw, v0
					      texld_pp r3, r3, s0
					      min_pp r4.x, r3.w, r0.w
					      max_pp r5.x, r4.x, c7.y
					      add r4.x, -r0.z, r5.x
					      mov r4.y, c3.y
					      mad r4.x, c0.y, -r4.y, r4.x
					      mul_sat_pp r4.x, r0.x, r4.x
					      add r0.z, -r0.z, -r3.w
					      mad r0.z, c0.y, -r4.y, r0.z
					      mul_sat_pp r0.z, r0.x, r0.z
					      add r3.w, -r3.w, -c0.y
					      cmp r3.w, r3.w, c7.w, c7.y
					      mul_pp r0.z, r0.z, r3.w
					      mad_pp r3, r3.xyzx, c7.wwwy, c7.yyyw
					      mad_pp r1, r3, r4.x, r1
					      mad_pp r2, r3, r0.z, r2
					    endrep
					    cmp r0.x, -r1.w, c7.w, c7.y
					    add r0.x, r0.x, r1.w
					    rcp r0.x, r0.x
					    mul_pp r0.xyz, r0.x, r1
					    cmp r0.w, -r2.w, c7.w, c7.y
					    add r0.w, r0.w, r2.w
					    rcp r0.w, r0.w
					    mul_sat_pp r1.x, r2.w, c9.z
					    mad_pp r1.yzw, r2.xxyz, r0.w, -r0.xxyz
					    mad_pp oC0.xyz, r1.x, r1.yzww, r0
					    mov_pp oC0.w, r1.x
					
					// approximately 72 instruction slots used (2 texture, 70 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_immediateConstantBuffer { { 0, 0, 0, 0},
					                              { 0.533333, 0, 0, 0},
					                              { 0.332528, 0.416977, 0, 0},
					                              { -0.118678, 0.519962, 0, 0},
					                              { -0.480517, 0.231405, 0, 0},
					                              { -0.480517, -0.231405, 0, 0},
					                              { -0.118678, -0.519962, 0, 0},
					                              { 0.332528, -0.416977, 0, 0},
					                              { 1.000000, 0, 0, 0},
					                              { 0.900969, 0.433884, 0, 0},
					                              { 0.623490, 0.781832, 0, 0},
					                              { 0.222521, 0.974928, 0, 0},
					                              { -0.222521, 0.974928, 0, 0},
					                              { -0.623490, 0.781831, 0, 0},
					                              { -0.900969, 0.433884, 0, 0},
					                              { -1.000000, 0, 0, 0},
					                              { -0.900969, -0.433884, 0, 0},
					                              { -0.623490, -0.781832, 0, 0},
					                              { -0.222521, -0.974928, 0, 0},
					                              { 0.222521, -0.974928, 0, 0},
					                              { 0.623490, -0.781832, 0, 0},
					                              { 0.900969, -0.433884, 0, 0} }
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 6
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					add r0.x, cb0[2].y, cb0[2].y
					mov r1.w, l(1.000000)
					mov r2.xyzw, l(0,0,0,0)
					mov r3.xyzw, l(0,0,0,0)
					mov r0.y, l(0)
					loop 
					  ige r0.z, r0.y, l(22)
					  breakc_nz r0.z
					  mul r4.yz, cb0[4].zzzz, icb[r0.y + 0].xxyx
					  dp2 r0.z, r4.yzyy, r4.yzyy
					  sqrt r0.z, r0.z
					  mul r4.x, r4.y, cb0[5].x
					  add r4.xy, r4.xzxx, v1.xyxx
					  sample r4.xyzw, r4.xyxx, t0.xyzw, s0
					  min r5.x, r0.w, r4.w
					  max r5.x, r5.x, l(0.000000)
					  add r5.x, -r0.z, r5.x
					  mad r5.x, cb0[2].y, l(2.000000), r5.x
					  div_sat r5.x, r5.x, r0.x
					  add r0.z, -r0.z, -r4.w
					  mad r0.z, cb0[2].y, l(2.000000), r0.z
					  div_sat r0.z, r0.z, r0.x
					  ge r4.w, -r4.w, cb0[2].y
					  and r4.w, r4.w, l(0x3f800000)
					  mul r0.z, r0.z, r4.w
					  mov r1.xyz, r4.xyzx
					  mad r2.xyzw, r1.xyzw, r5.xxxx, r2.xyzw
					  mad r3.xyzw, r1.xyzw, r0.zzzz, r3.xyzw
					  iadd r0.y, r0.y, l(1)
					endloop 
					eq r0.x, r2.w, l(0.000000)
					and r0.x, r0.x, l(0x3f800000)
					add r0.x, r0.x, r2.w
					div r0.xyz, r2.xyzx, r0.xxxx
					eq r0.w, r3.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					add r0.w, r0.w, r3.w
					div r1.xyz, r3.xyzx, r0.wwww
					mul r0.w, r3.w, l(0.142800)
					min r0.w, r0.w, l(1.000000)
					add r1.xyz, -r0.xyzx, r1.xyzx
					mad o0.xyz, r0.wwww, r1.xyzx, r0.xyzx
					mov o0.w, r0.w
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "BOKEH FILTER (LARGE)"
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 871973
			Program "vp" {
				SubProgram "d3d9 " {
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_TexelSize;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_TexelSize  c8       1
					//
					
					    vs_3_0
					    def c9, 0, 1, 0, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    add r0.x, c9.y, -v1.y
					    add r0.x, r0.x, -v1.y
					    mov r1.x, c9.x
					    slt r0.y, c8.y, r1.x
					    mad o2.y, r0.y, r0.x, v1.y
					    mad r0, v0.xyzx, c9.yyyx, c9.xxxy
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mov o1.xy, v1
					    mov o2.x, v1.x
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 18 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.w, r0.x, r0.y, v1.y
					mov o1.xyz, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _MainTex;
					//   float4 _MainTex_TexelSize;
					//   float _MaxCoC;
					//   float _RcpAspect;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   _MainTex_TexelSize c0       1
					//   _MaxCoC            c1       1
					//   _RcpAspect         c2       1
					//   _MainTex           s0       1
					//
					
					    ps_3_0
					    def c3, -1, -33, -2, -34
					    def c4, -3, -35, 1, 0
					    def c5, -4, -36, -5, -37
					    def c6, -6, -38, -7, -39
					    def c7, -8, -40, -9, -41
					    def c8, -10, -27, -28, -42
					    def c9, -11, -12, -13, -14
					    def c10, -15, -16, -17, -18
					    def c11, -19, -20, -21, -22
					    def c12, -23, -24, -25, -26
					    def c13, -29, -30, -31, -32
					    def c14, -0.327625036, 0.157775939, -0.157775909, 0.0730602965
					    def c15, 0, 0, 0.363636374, 0.681818187
					    def c16, 0.226723567, 0.284302384, -0.0809167102, 0.354519248
					    def c17, -0.0809165612, -0.354519278, 0.226723522, -0.284302413
					    def c18, 0.614296973, 0.295829833, 0.425106674, 0.533066928
					    def c19, 0.151718855, 0.664723575, -0.151718825, 0
					    def c20, -0.425106794, 0.533066869, -0.614296973, 0.295829862
					    def c21, -0.681818187, 0, -0.425106555, -0.533067048
					    def c22, -0.151718557, -0.664723635, 0.151719198, -0.664723516
					    def c23, 0.425106615, -0.533067048, 0.614296973, -0.295829833
					    def c24, 0.955572784, 0.294755191, 0.826238751, 0.5633201
					    def c25, 0.623489797, 0.781831503, 0.365340978, 0.930873752
					    def c26, 0.0747300014, 0.997203827, -0.222520947, 0.974927902
					    def c27, -0.50000006, 0.866025388, -0.733051956, 0.680172682
					    def c28, -0.90096885, 0.433883816, -0.988830864, 0.149042085
					    def c29, -0.988830805, -0.149042487, -0.90096885, -0.433883756
					    def c30, -0.733051836, -0.680172801, -0.499999911, -0.866025448
					    def c31, -0.222521007, -0.974927902, 0.074730292, -0.997203767
					    def c32, 0.365341485, -0.930873573, 0.623489678, -0.781831622
					    def c33, 0.826238811, -0.563319981, 0.955572903, -0.294754833
					    defi i0, 43, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    texld_pp r0, v0, s0
					    add_pp r0.x, c0.y, c0.y
					    rcp r0.x, r0.x
					    mov_pp r1, c15.y
					    mov_pp r2, c15.y
					    mov r0.y, c15.y
					    rep i0
					      add r3, r0.y, c6
					      add r4, r0.y, c7
					      add r5, r0.y, c8
					      add r6, r0.y, c9
					      add r7, r0.y, c10
					      add r8, r0.y, c11
					      add r9, r0.y, c12
					      add r10, r0.y, c13
					      add r11, r0.y, c3
					      add r12.xyz, r0.y, c4
					      add r13, r0.y, c5
					      cmp r14.xy, -r11_abs.x, c15.zyzw, c15.y
					      cmp r11.xz, -r11_abs.z, c16.xyyw, r14.xyyw
					      cmp r11.xz, -r12_abs.x, c16.zyww, r11
					      cmp r11.xz, -r13_abs.x, c14.xyyw, r11
					      cmp r11.xz, -r13_abs.z, c14, r11
					      cmp r11.xz, -r3_abs.x, c17.xyyw, r11
					      cmp r3.xz, -r3_abs.z, c17.zyww, r11
					      cmp r3.xz, -r4_abs.x, c15.wyyw, r3
					      cmp r3.xz, -r4_abs.z, c18.xyyw, r3
					      cmp r3.xz, -r5_abs.x, c18.zyww, r3
					      cmp r3.xz, -r6_abs.x, c19.xyyw, r3
					      cmp r3.xz, -r6_abs.y, c19.zyyw, r3
					      cmp r3.xz, -r6_abs.z, c20.xyyw, r3
					      cmp r3.xz, -r6_abs.w, c20.zyww, r3
					      cmp r3.xz, -r7_abs.x, c21.xyyw, r3
					      cmp r3.xz, -r7_abs.y, -c18.xyyw, r3
					      cmp r3.xz, -r7_abs.z, c21.zyww, r3
					      cmp r3.xz, -r7_abs.w, c22.xyyw, r3
					      cmp r3.xz, -r8_abs.x, c22.zyww, r3
					      cmp r3.xz, -r8_abs.y, c23.xyyw, r3
					      cmp r3.xz, -r8_abs.z, c23.zyww, r3
					      cmp r3.xz, -r8_abs.w, c4.zyww, r3
					      cmp r3.xz, -r9_abs.x, c24.xyyw, r3
					      cmp r3.xz, -r9_abs.y, c24.zyww, r3
					      cmp r3.xz, -r9_abs.z, c25.xyyw, r3
					      cmp r3.xz, -r9_abs.w, c25.zyww, r3
					      cmp r3.xz, -r5_abs.y, c26.xyyw, r3
					      cmp r3.xz, -r5_abs.z, c26.zyww, r3
					      cmp r3.xz, -r10_abs.x, c27.xyyw, r3
					      cmp r3.xz, -r10_abs.y, c27.zyww, r3
					      cmp r3.xz, -r10_abs.z, c28.xyyw, r3
					      cmp r3.xz, -r10_abs.w, c28.zyww, r3
					      cmp r3.xz, -r11_abs.y, c29.xyyw, r3
					      cmp r3.xz, -r11_abs.w, c29.zyww, r3
					      cmp r3.xz, -r12_abs.y, c30.xyyw, r3
					      cmp r3.xz, -r13_abs.y, c30.zyww, r3
					      cmp r3.xz, -r13_abs.w, c31.xyyw, r3
					      cmp r3.xy, -r3_abs.y, c31.zwzw, r3.xzzw
					      cmp r3.xy, -r3_abs.w, c32, r3
					      cmp r3.xy, -r4_abs.y, c32.zwzw, r3
					      cmp r3.xy, -r4_abs.w, c33, r3
					      cmp r3.xy, -r5_abs.w, c33.zwzw, r3
					      mul r3.yz, r3.xxyw, c1.x
					      dp2add r0.z, r3.yzzw, r3.yzzw, c15.y
					      rsq r0.z, r0.z
					      rcp r0.z, r0.z
					      mul r3.x, r3.y, c2.x
					      add r3.xy, r3.xzzw, v0
					      texld_pp r3, r3, s0
					      min_pp r4.x, r3.w, r0.w
					      max_pp r5.x, r4.x, c15.y
					      add r4.x, -r0.z, r5.x
					      mov r4.z, c3.z
					      mad r4.x, c0.y, -r4.z, r4.x
					      mul_sat_pp r4.x, r0.x, r4.x
					      add r0.z, -r0.z, -r3.w
					      mad r0.z, c0.y, -r4.z, r0.z
					      mul_sat_pp r0.z, r0.x, r0.z
					      add r3.w, -r3.w, -c0.y
					      cmp r3.w, r3.w, c4.z, c4.w
					      mul_pp r0.z, r0.z, r3.w
					      mad_pp r3, r3.xyzx, c4.zzzw, c4.wwwz
					      mad_pp r1, r3, r4.x, r1
					      mad_pp r2, r3, r0.z, r2
					      mov r0.y, r12.z
					    endrep
					    cmp r0.x, -r1.w, c4.z, c4.w
					    add r0.x, r0.x, r1.w
					    rcp r0.x, r0.x
					    mul_pp r0.xyz, r0.x, r1
					    cmp r0.w, -r2.w, c4.z, c4.w
					    add r0.w, r0.w, r2.w
					    rcp r0.w, r0.w
					    mul_sat_pp r1.x, r2.w, c14.w
					    mad_pp r1.yzw, r2.xxyz, r0.w, -r0.xxyz
					    mad_pp oC0.xyz, r1.x, r1.yzww, r0
					    mov_pp oC0.w, r1.x
					
					// approximately 99 instruction slots used (2 texture, 97 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_immediateConstantBuffer { { 0, 0, 0, 0},
					                              { 0.363636, 0, 0, 0},
					                              { 0.226724, 0.284302, 0, 0},
					                              { -0.080917, 0.354519, 0, 0},
					                              { -0.327625, 0.157776, 0, 0},
					                              { -0.327625, -0.157776, 0, 0},
					                              { -0.080917, -0.354519, 0, 0},
					                              { 0.226724, -0.284302, 0, 0},
					                              { 0.681818, 0, 0, 0},
					                              { 0.614297, 0.295830, 0, 0},
					                              { 0.425107, 0.533067, 0, 0},
					                              { 0.151719, 0.664724, 0, 0},
					                              { -0.151719, 0.664724, 0, 0},
					                              { -0.425107, 0.533067, 0, 0},
					                              { -0.614297, 0.295830, 0, 0},
					                              { -0.681818, 0, 0, 0},
					                              { -0.614297, -0.295830, 0, 0},
					                              { -0.425107, -0.533067, 0, 0},
					                              { -0.151719, -0.664724, 0, 0},
					                              { 0.151719, -0.664724, 0, 0},
					                              { 0.425107, -0.533067, 0, 0},
					                              { 0.614297, -0.295830, 0, 0},
					                              { 1.000000, 0, 0, 0},
					                              { 0.955573, 0.294755, 0, 0},
					                              { 0.826239, 0.563320, 0, 0},
					                              { 0.623490, 0.781832, 0, 0},
					                              { 0.365341, 0.930874, 0, 0},
					                              { 0.074730, 0.997204, 0, 0},
					                              { -0.222521, 0.974928, 0, 0},
					                              { -0.500000, 0.866025, 0, 0},
					                              { -0.733052, 0.680173, 0, 0},
					                              { -0.900969, 0.433884, 0, 0},
					                              { -0.988831, 0.149042, 0, 0},
					                              { -0.988831, -0.149042, 0, 0},
					                              { -0.900969, -0.433884, 0, 0},
					                              { -0.733052, -0.680173, 0, 0},
					                              { -0.500000, -0.866025, 0, 0},
					                              { -0.222521, -0.974928, 0, 0},
					                              { 0.074730, -0.997204, 0, 0},
					                              { 0.365341, -0.930874, 0, 0},
					                              { 0.623490, -0.781832, 0, 0},
					                              { 0.826239, -0.563320, 0, 0},
					                              { 0.955573, -0.294755, 0, 0} }
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 6
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					add r0.x, cb0[2].y, cb0[2].y
					mov r1.w, l(1.000000)
					mov r2.xyzw, l(0,0,0,0)
					mov r3.xyzw, l(0,0,0,0)
					mov r0.y, l(0)
					loop 
					  ige r0.z, r0.y, l(43)
					  breakc_nz r0.z
					  mul r4.yz, cb0[4].zzzz, icb[r0.y + 0].xxyx
					  dp2 r0.z, r4.yzyy, r4.yzyy
					  sqrt r0.z, r0.z
					  mul r4.x, r4.y, cb0[5].x
					  add r4.xy, r4.xzxx, v1.xyxx
					  sample r4.xyzw, r4.xyxx, t0.xyzw, s0
					  min r5.x, r0.w, r4.w
					  max r5.x, r5.x, l(0.000000)
					  add r5.x, -r0.z, r5.x
					  mad r5.x, cb0[2].y, l(2.000000), r5.x
					  div_sat r5.x, r5.x, r0.x
					  add r0.z, -r0.z, -r4.w
					  mad r0.z, cb0[2].y, l(2.000000), r0.z
					  div_sat r0.z, r0.z, r0.x
					  ge r4.w, -r4.w, cb0[2].y
					  and r4.w, r4.w, l(0x3f800000)
					  mul r0.z, r0.z, r4.w
					  mov r1.xyz, r4.xyzx
					  mad r2.xyzw, r1.xyzw, r5.xxxx, r2.xyzw
					  mad r3.xyzw, r1.xyzw, r0.zzzz, r3.xyzw
					  iadd r0.y, r0.y, l(1)
					endloop 
					eq r0.x, r2.w, l(0.000000)
					and r0.x, r0.x, l(0x3f800000)
					add r0.x, r0.x, r2.w
					div r0.xyz, r2.xyzx, r0.xxxx
					eq r0.w, r3.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					add r0.w, r0.w, r3.w
					div r1.xyz, r3.xyzx, r0.wwww
					mul r0.w, r3.w, l(0.073060)
					min r0.w, r0.w, l(1.000000)
					add r1.xyz, -r0.xyzx, r1.xyzx
					mad o0.xyz, r0.wwww, r1.xyzx, r0.xyzx
					mov o0.w, r0.w
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "BOKEH FILTER (VERY LARGE)"
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 943894
			Program "vp" {
				SubProgram "d3d9 " {
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_TexelSize;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_TexelSize  c8       1
					//
					
					    vs_3_0
					    def c9, 0, 1, 0, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    add r0.x, c9.y, -v1.y
					    add r0.x, r0.x, -v1.y
					    mov r1.x, c9.x
					    slt r0.y, c8.y, r1.x
					    mad o2.y, r0.y, r0.x, v1.y
					    mad r0, v0.xyzx, c9.yyyx, c9.xxxy
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mov o1.xy, v1
					    mov o2.x, v1.x
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 18 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.w, r0.x, r0.y, v1.y
					mov o1.xyz, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _MainTex;
					//   float4 _MainTex_TexelSize;
					//   float _MaxCoC;
					//   float _RcpAspect;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   _MainTex_TexelSize c0       1
					//   _MaxCoC            c1       1
					//   _RcpAspect         c2       1
					//   _MainTex           s0       1
					//
					
					    ps_3_0
					    def c3, -2, -34, -66, 2
					    def c4, -3, -35, -67, 0.0442477837
					    def c5, -4, -36, -68, 0
					    def c6, -5, -37, -69, 0
					    def c7, -6, -38, -70, 0
					    def c8, -25, -57, -7, -39
					    def c9, -8, -40, -11, -43
					    def c10, -9, -41, -10, -42
					    def c11, -12, -44, -15, -47
					    def c12, -13, -45, -14, -46
					    def c13, -16, -48, -19, -51
					    def c14, -17, -49, -18, -50
					    def c15, -20, -52, -23, -55
					    def c16, -21, -53, -22, -54
					    def c17, -24, -56, -26, -58
					    def c18, -27, -59, -28, -60
					    def c19, -29, -30, -61, -62
					    def c20, -31, -32, -63, -64
					    def c21, -1, -33, -65, 0
					    def c22, 0, 0, 1, 0.275862098
					    def c23, 0.171997204, 0.215677679, -0.0613850951, 0.268945664
					    def c24, -0.248543158, 0.119692102, -0.11969208, 0
					    def c25, -0.0613849834, -0.268945694, 0.171997175, -0.215677708
					    def c26, 0.517241359, 0, 0.466018349, 0.224422619
					    def c27, 0.322494715, 0.40439558, 0.115097053, 0.504273057
					    def c28, -0.115097038, 0.504273057, -0.322494805, 0.404395521
					    def c29, -0.466018349, 0.224422649, -0.517241359, 0
					    def c30, -0.322494626, -0.40439564, -0.11509683, -0.504273117
					    def c31, 0.115097322, -0.504272997, 0.322494656, -0.40439564
					    def c32, 0.466018349, -0.224422619, 0.758620679, 0
					    def c33, 0.724917293, 0.223607376, 0.626801789, 0.427346289
					    def c34, 0.472992241, 0.593113542, 0.277155221, 0.706180096
					    def c35, 0.0566917248, 0.756499469, -0.168808997, 0.73960048
					    def c36, -0.379310399, 0.656984746, -0.556108356, 0.515993059
					    def c37, -0.683493614, 0.32915324, -0.750147521, 0.113066405
					    def c38, -0.750147521, -0.113066711, -0.683493614, -0.32915318
					    def c39, -0.556108296, -0.515993178, -0.37931028, -0.656984806
					    def c40, -0.168809041, -0.73960048, 0.0566919446, -0.75649941
					    def c41, 0.277155608, -0.706179917, 0.472992152, -0.593113661
					    def c42, 0.626801848, -0.4273462, 0.724917352, -0.223607108
					    def c43, 0.974927902, 0.222520933, 0.90096885, 0.433883756
					    def c44, 0.781831503, 0.623489797, 0.433883637, 0.900968909
					    def c45, 0.222520977, 0.974927902, -0.222520947, -0.222520933
					    def c46, -0.433883846, 0.90096885, -0.623489976, 0.781831384
					    def c47, -0.781831682, 0.623489559, -0.90096885, 0.433883816
					    def c48, -0.974927902, -0.222520873, -0.781831384, -0.623489916
					    def c49, 0.781831443, -0.623489857, 0.90096885, -0.433883756
					    def c50, -0.623489618, -0.781831622, -0.433883458, -0.900969028
					    def c51, -0.222520545, -0.974928021, 0.222521499, -0.974927783
					    def c52, 0.433883488, -0.900968969, 0.623489678, -0.781831622
					    def c53, 0.974927902, -0.222520858, 0, 0
					    defi i0, 71, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    texld_pp r0, v0, s0
					    add_pp r0.x, c0.y, c0.y
					    rcp r0.x, r0.x
					    mov_pp r1, c22.y
					    mov_pp r2, c22.y
					    mov r0.y, c22.y
					    rep i0
					      add r3, r0.y, c10
					      add r4, r0.y, c12
					      add r5, r0.y, c14
					      add r6, r0.y, c16
					      add r7, r0.y, c18
					      add r0.z, r0.y, c22.z
					      add r8, r0.y, c19
					      add r9, r0.y, c20
					      add r10.xyz, r0.y, c21
					      add r11.xyz, r0.y, c3
					      add r12.xyz, r0.y, c4
					      add r13.xyz, r0.y, c5
					      add r14.xyz, r0.y, c6
					      add r15.xyz, r0.y, c7
					      add r16, r0.y, c8
					      add r17, r0.y, c9
					      add r18, r0.y, c11
					      add r19, r0.y, c13
					      add r20, r0.y, c15
					      add r21, r0.y, c17
					      cmp r10.xw, -r10_abs.x, c22.wyzy, c22.y
					      cmp r10.xw, -r11_abs.x, c23.xyzy, r10
					      cmp r10.xw, -r12_abs.x, c23.zyzw, r10
					      cmp r10.xw, -r13_abs.x, c24.xyzy, r10
					      cmp r10.xw, -r14_abs.x, c24.xyzz, r10
					      cmp r10.xw, -r15_abs.x, c25.xyzy, r10
					      cmp r10.xw, -r16_abs.z, c25.zyzw, r10
					      cmp r10.xw, -r17_abs.x, c26.xyzy, r10
					      cmp r10.xw, -r3_abs.x, c26.zyzw, r10
					      cmp r3.xz, -r3_abs.z, c27.xyyw, r10.xyww
					      cmp r3.xz, -r17_abs.z, c27.zyww, r3
					      cmp r3.xz, -r18_abs.x, c28.xyyw, r3
					      cmp r3.xz, -r4_abs.x, c28.zyww, r3
					      cmp r3.xz, -r4_abs.z, c29.xyyw, r3
					      cmp r3.xz, -r18_abs.z, c29.zyww, r3
					      cmp r3.xz, -r19_abs.x, -c26.zyww, r3
					      cmp r3.xz, -r5_abs.x, c30.xyyw, r3
					      cmp r3.xz, -r5_abs.z, c30.zyww, r3
					      cmp r3.xz, -r19_abs.z, c31.xyyw, r3
					      cmp r3.xz, -r20_abs.x, c31.zyww, r3
					      cmp r3.xz, -r6_abs.x, c32.xyyw, r3
					      cmp r3.xz, -r6_abs.z, c32.zyww, r3
					      cmp r3.xz, -r20_abs.z, c33.xyyw, r3
					      cmp r3.xz, -r21_abs.x, c33.zyww, r3
					      cmp r3.xz, -r16_abs.x, c34.xyyw, r3
					      cmp r3.xz, -r21_abs.z, c34.zyww, r3
					      cmp r3.xz, -r7_abs.x, c35.xyyw, r3
					      cmp r3.xz, -r7_abs.z, c35.zyww, r3
					      cmp r3.xz, -r8_abs.x, c36.xyyw, r3
					      cmp r3.xz, -r8_abs.y, c36.zyww, r3
					      cmp r3.xz, -r9_abs.x, c37.xyyw, r3
					      cmp r3.xz, -r9_abs.y, c37.zyww, r3
					      cmp r3.xz, -r10_abs.y, c38.xyyw, r3
					      cmp r3.xz, -r11_abs.y, c38.zyww, r3
					      cmp r3.xz, -r12_abs.y, c39.xyyw, r3
					      cmp r3.xz, -r13_abs.y, c39.zyww, r3
					      cmp r3.xz, -r14_abs.y, c40.xyyw, r3
					      cmp r3.xz, -r15_abs.y, c40.zyww, r3
					      cmp r3.xz, -r16_abs.w, c41.xyyw, r3
					      cmp r3.xz, -r17_abs.y, c41.zyww, r3
					      cmp r3.xy, -r3_abs.y, c42, r3.xzzw
					      cmp r3.xy, -r3_abs.w, c42.zwzw, r3
					      cmp r3.xy, -r17_abs.w, c22.zyzw, r3
					      cmp r3.xy, -r18_abs.y, c43, r3
					      cmp r3.xy, -r4_abs.y, c43.zwzw, r3
					      cmp r3.xy, -r4_abs.w, c44, r3
					      cmp r3.xy, -r18_abs.w, c44.yxzw, r3
					      cmp r3.xy, -r19_abs.y, c44.zwzw, r3
					      cmp r3.xy, -r5_abs.y, c45, r3
					      cmp r3.xy, -r5_abs.w, c22.yzzw, r3
					      cmp r3.xy, -r19_abs.w, c45.zyzw, r3
					      cmp r3.xy, -r20_abs.y, c46, r3
					      cmp r3.xy, -r6_abs.y, c46.zwzw, r3
					      cmp r3.xy, -r6_abs.w, c47, r3
					      cmp r3.xy, -r20_abs.w, c47.zwzw, r3
					      cmp r3.xy, -r21_abs.y, -c45.ywzw, r3
					      cmp r3.xy, -r16_abs.y, c21.xwzw, r3
					      cmp r3.xy, -r21_abs.w, c48, r3
					      cmp r3.xy, -r7_abs.y, -c43.zwzw, r3
					      cmp r3.xy, -r7_abs.w, c48.zwzw, r3
					      cmp r3.xy, -r8_abs.z, c50, r3
					      cmp r3.xy, -r8_abs.w, c50.zwzw, r3
					      cmp r3.xy, -r9_abs.z, c51, r3
					      cmp r3.xy, -r9_abs.w, c21.wxzw, r3
					      cmp r3.xy, -r10_abs.z, c51.zwzw, r3
					      cmp r3.xy, -r11_abs.z, c52, r3
					      cmp r3.xy, -r12_abs.z, c52.zwzw, r3
					      cmp r3.xy, -r13_abs.z, c49, r3
					      cmp r3.xy, -r14_abs.z, c49.zwzw, r3
					      cmp r3.xy, -r15_abs.z, c53, r3
					      mul r3.yz, r3.xxyw, c1.x
					      dp2add r3.w, r3.yzzw, r3.yzzw, c22.y
					      rsq r3.w, r3.w
					      rcp r3.w, r3.w
					      mul r3.x, r3.y, c2.x
					      add r3.xy, r3.xzzw, v0
					      texld_pp r4, r3, s0
					      min_pp r3.x, r4.w, r0.w
					      max_pp r5.x, r3.x, c22.y
					      add r3.x, -r3.w, r5.x
					      mov r3.y, c0.y
					      mad r3.x, r3.y, c3.w, r3.x
					      add r3.z, -r3.w, -r4.w
					      mad r3.y, r3.y, c3.w, r3.z
					      mul_sat_pp r3.xy, r0.x, r3
					      add r3.z, -r4.w, -c0.y
					      cmp r3.z, r3.z, c22.z, c22.y
					      mul_pp r3.y, r3.z, r3.y
					      mad_pp r4, r4.xyzx, c22.zzzy, c22.yyyz
					      mad_pp r1, r4, r3.x, r1
					      mad_pp r2, r4, r3.y, r2
					      mov r0.y, r0.z
					    endrep
					    cmp r0.x, -r1.w, c22.z, c22.y
					    add r0.x, r0.x, r1.w
					    rcp r0.x, r0.x
					    mul_pp r0.xyz, r0.x, r1
					    cmp r0.w, -r2.w, c22.z, c22.y
					    add r0.w, r0.w, r2.w
					    rcp r0.w, r0.w
					    mul_sat_pp r1.x, r2.w, c4.w
					    mad_pp r1.yzw, r2.xxyz, r0.w, -r0.xxyz
					    mad_pp oC0.xyz, r1.x, r1.yzww, r0
					    mov_pp oC0.w, r1.x
					
					// approximately 135 instruction slots used (2 texture, 133 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_immediateConstantBuffer { { 0, 0, 0, 0},
					                              { 0.275862, 0, 0, 0},
					                              { 0.171997, 0.215678, 0, 0},
					                              { -0.061385, 0.268946, 0, 0},
					                              { -0.248543, 0.119692, 0, 0},
					                              { -0.248543, -0.119692, 0, 0},
					                              { -0.061385, -0.268946, 0, 0},
					                              { 0.171997, -0.215678, 0, 0},
					                              { 0.517241, 0, 0, 0},
					                              { 0.466018, 0.224423, 0, 0},
					                              { 0.322495, 0.404396, 0, 0},
					                              { 0.115097, 0.504273, 0, 0},
					                              { -0.115097, 0.504273, 0, 0},
					                              { -0.322495, 0.404396, 0, 0},
					                              { -0.466018, 0.224423, 0, 0},
					                              { -0.517241, 0, 0, 0},
					                              { -0.466018, -0.224423, 0, 0},
					                              { -0.322495, -0.404396, 0, 0},
					                              { -0.115097, -0.504273, 0, 0},
					                              { 0.115097, -0.504273, 0, 0},
					                              { 0.322495, -0.404396, 0, 0},
					                              { 0.466018, -0.224423, 0, 0},
					                              { 0.758621, 0, 0, 0},
					                              { 0.724917, 0.223607, 0, 0},
					                              { 0.626802, 0.427346, 0, 0},
					                              { 0.472992, 0.593114, 0, 0},
					                              { 0.277155, 0.706180, 0, 0},
					                              { 0.056692, 0.756499, 0, 0},
					                              { -0.168809, 0.739600, 0, 0},
					                              { -0.379310, 0.656985, 0, 0},
					                              { -0.556108, 0.515993, 0, 0},
					                              { -0.683494, 0.329153, 0, 0},
					                              { -0.750148, 0.113066, 0, 0},
					                              { -0.750148, -0.113067, 0, 0},
					                              { -0.683494, -0.329153, 0, 0},
					                              { -0.556108, -0.515993, 0, 0},
					                              { -0.379310, -0.656985, 0, 0},
					                              { -0.168809, -0.739600, 0, 0},
					                              { 0.056692, -0.756499, 0, 0},
					                              { 0.277156, -0.706180, 0, 0},
					                              { 0.472992, -0.593114, 0, 0},
					                              { 0.626802, -0.427346, 0, 0},
					                              { 0.724917, -0.223607, 0, 0},
					                              { 1.000000, 0, 0, 0},
					                              { 0.974928, 0.222521, 0, 0},
					                              { 0.900969, 0.433884, 0, 0},
					                              { 0.781832, 0.623490, 0, 0},
					                              { 0.623490, 0.781832, 0, 0},
					                              { 0.433884, 0.900969, 0, 0},
					                              { 0.222521, 0.974928, 0, 0},
					                              { 0, 1.000000, 0, 0},
					                              { -0.222521, 0.974928, 0, 0},
					                              { -0.433884, 0.900969, 0, 0},
					                              { -0.623490, 0.781831, 0, 0},
					                              { -0.781832, 0.623490, 0, 0},
					                              { -0.900969, 0.433884, 0, 0},
					                              { -0.974928, 0.222521, 0, 0},
					                              { -1.000000, 0, 0, 0},
					                              { -0.974928, -0.222521, 0, 0},
					                              { -0.900969, -0.433884, 0, 0},
					                              { -0.781831, -0.623490, 0, 0},
					                              { -0.623490, -0.781832, 0, 0},
					                              { -0.433883, -0.900969, 0, 0},
					                              { -0.222521, -0.974928, 0, 0},
					                              { 0, -1.000000, 0, 0},
					                              { 0.222521, -0.974928, 0, 0},
					                              { 0.433883, -0.900969, 0, 0},
					                              { 0.623490, -0.781832, 0, 0},
					                              { 0.781831, -0.623490, 0, 0},
					                              { 0.900969, -0.433884, 0, 0},
					                              { 0.974928, -0.222521, 0, 0} }
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 6
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					add r0.x, cb0[2].y, cb0[2].y
					mov r1.w, l(1.000000)
					mov r2.xyzw, l(0,0,0,0)
					mov r3.xyzw, l(0,0,0,0)
					mov r0.y, l(0)
					loop 
					  ige r0.z, r0.y, l(71)
					  breakc_nz r0.z
					  mul r4.yz, cb0[4].zzzz, icb[r0.y + 0].xxyx
					  dp2 r0.z, r4.yzyy, r4.yzyy
					  sqrt r0.z, r0.z
					  mul r4.x, r4.y, cb0[5].x
					  add r4.xy, r4.xzxx, v1.xyxx
					  sample r4.xyzw, r4.xyxx, t0.xyzw, s0
					  min r5.x, r0.w, r4.w
					  max r5.x, r5.x, l(0.000000)
					  add r5.x, -r0.z, r5.x
					  mad r5.x, cb0[2].y, l(2.000000), r5.x
					  div_sat r5.x, r5.x, r0.x
					  add r0.z, -r0.z, -r4.w
					  mad r0.z, cb0[2].y, l(2.000000), r0.z
					  div_sat r0.z, r0.z, r0.x
					  ge r4.w, -r4.w, cb0[2].y
					  and r4.w, r4.w, l(0x3f800000)
					  mul r0.z, r0.z, r4.w
					  mov r1.xyz, r4.xyzx
					  mad r2.xyzw, r1.xyzw, r5.xxxx, r2.xyzw
					  mad r3.xyzw, r1.xyzw, r0.zzzz, r3.xyzw
					  iadd r0.y, r0.y, l(1)
					endloop 
					eq r0.x, r2.w, l(0.000000)
					and r0.x, r0.x, l(0x3f800000)
					add r0.x, r0.x, r2.w
					div r0.xyz, r2.xyzx, r0.xxxx
					eq r0.w, r3.w, l(0.000000)
					and r0.w, r0.w, l(0x3f800000)
					add r0.w, r0.w, r3.w
					div r1.xyz, r3.xyzx, r0.wwww
					mul r0.w, r3.w, l(0.044248)
					min r0.w, r0.w, l(1.000000)
					add r1.xyz, -r0.xyzx, r1.xyzx
					mad o0.xyz, r0.wwww, r1.xyzx, r0.xyzx
					mov o0.w, r0.w
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "POSTFILTER"
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 1001319
			Program "vp" {
				SubProgram "d3d9 " {
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_TexelSize;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_TexelSize  c8       1
					//
					
					    vs_3_0
					    def c9, 0, 1, 0, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    add r0.x, c9.y, -v1.y
					    add r0.x, r0.x, -v1.y
					    mov r1.x, c9.x
					    slt r0.y, c8.y, r1.x
					    mad o2.y, r0.y, r0.x, v1.y
					    mad r0, v0.xyzx, c9.yyyx, c9.xxxy
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mov o1.xy, v1
					    mov o2.x, v1.x
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 18 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[2].y, l(0.000000)
					add r0.y, -v1.y, l(1.000000)
					movc o1.w, r0.x, r0.y, v1.y
					mov o1.xyz, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _MainTex;
					//   float4 _MainTex_TexelSize;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   _MainTex_TexelSize c0       1
					//   _MainTex           s0       1
					//
					
					    ps_3_0
					    def c1, 0.5, -0.5, 0.25, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    mov r0.xy, c1
					    mad r1, c0.xyxy, -r0.xxyx, v0.xyxy
					    texld_pp r2, r1, s0
					    texld r1, r1.zwzw, s0
					    add_pp r1, r1, r2
					    mad r0, c0.xyxy, r0.yxxx, v0.xyxy
					    texld r2, r0, s0
					    texld r0, r0.zwzw, s0
					    add_pp r1, r1, r2
					    add_pp r0, r0, r1
					    mul_pp oC0, r0, c1.z
					
					// approximately 11 instruction slots used (4 texture, 7 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 3
					mad r0.xyzw, -cb0[2].xyxy, l(0.500000, 0.500000, -0.500000, 0.500000), v1.xyxy
					sample r1.xyzw, r0.xyxx, t0.xyzw, s0
					sample r0.xyzw, r0.zwzz, t0.xyzw, s0
					add r0.xyzw, r0.xyzw, r1.xyzw
					mad r1.xyzw, cb0[2].xyxy, l(-0.500000, 0.500000, 0.500000, 0.500000), v1.xyxy
					sample r2.xyzw, r1.xyxx, t0.xyzw, s0
					sample r1.xyzw, r1.zwzz, t0.xyzw, s0
					add r0.xyzw, r0.xyzw, r2.xyzw
					add r0.xyzw, r1.xyzw, r0.xyzw
					mul o0.xyzw, r0.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
}