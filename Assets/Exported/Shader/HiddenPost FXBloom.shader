Shader "Hidden/Post FX/Bloom" {
	Properties {
		_MainTex ("", 2D) = "" {}
		_BaseTex ("", 2D) = "" {}
		_AutoExposure ("", 2D) = "" {}
	}
	SubShader {
		Pass {
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 27865
			Program "vp" {
				SubProgram "d3d9 " {
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_ST         c8       1
					//
					
					    vs_3_0
					    def c9, 1, 0, 0, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    mad r0, v0.xyzx, c9.xxxy, c9.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mad o2.xy, v1, c8, c8.zwzw
					    mov o1.xy, v1
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 13 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mad o1.zw, v1.xxxy, cb0[3].xxxy, cb0[3].zzzw
					mov o1.xy, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d9 " {
					Keywords { "UNITY_COLORSPACE_GAMMA" }
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_ST         c8       1
					//
					
					    vs_3_0
					    def c9, 1, 0, 0, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    mad r0, v0.xyzx, c9.xxxy, c9.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mad o2.xy, v1, c8, c8.zwzw
					    mov o1.xy, v1
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 13 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_COLORSPACE_GAMMA" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mad o1.zw, v1.xxxy, cb0[3].xxxy, cb0[3].zzzw
					mov o1.xy, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d9 " {
					Keywords { "ANTI_FLICKER" }
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_ST         c8       1
					//
					
					    vs_3_0
					    def c9, 1, 0, 0, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    mad r0, v0.xyzx, c9.xxxy, c9.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mad o2.xy, v1, c8, c8.zwzw
					    mov o1.xy, v1
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 13 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ANTI_FLICKER" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mad o1.zw, v1.xxxy, cb0[3].xxxy, cb0[3].zzzw
					mov o1.xy, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d9 " {
					Keywords { "UNITY_COLORSPACE_GAMMA" "ANTI_FLICKER" }
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_ST         c8       1
					//
					
					    vs_3_0
					    def c9, 1, 0, 0, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    mad r0, v0.xyzx, c9.xxxy, c9.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mad o2.xy, v1, c8, c8.zwzw
					    mov o1.xy, v1
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 13 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_COLORSPACE_GAMMA" "ANTI_FLICKER" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mad o1.zw, v1.xxxy, cb0[3].xxxy, cb0[3].zzzw
					mov o1.xy, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _AutoExposure;
					//   float3 _Curve;
					//   sampler2D _MainTex;
					//   float4 _MainTex_ST;
					//   float4 _MainTex_TexelSize;
					//   float _PrefilterOffs;
					//   float _Threshold;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   _MainTex_TexelSize c0       1
					//   _MainTex_ST        c1       1
					//   _PrefilterOffs     c2       1
					//   _Threshold         c3       1
					//   _Curve             c4       1
					//   _MainTex           s0       1
					//   _AutoExposure      s1       1
					//
					
					    ps_3_0
					    def c5, 65504, 0, -9.99999975e-006, 100000
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    mov r0.xy, c0
					    mad r0.xy, r0, c2.x, v0
					    mad r0.xy, r0, c1, c1.zwzw
					    texld r1, r0, s1
					    texld r0, r0, s0
					    mul_pp r0.xyz, r1.x, r0
					    min_pp r1.xyz, r0, c5.x
					    max_pp r0.x, r1.y, r1.z
					    max_pp r2.x, r1.x, r0.x
					    add_pp r0.x, r2.x, -c4.x
					    max_pp r1.w, r0.x, c5.y
					    min_pp r0.x, c4.y, r1.w
					    mul r0.y, r0.x, c4.z
					    mul_pp r0.x, r0.x, r0.y
					    add r0.y, r2.x, -c3.x
					    max r1.w, r0.x, r0.y
					    add r0.x, r2.x, c5.z
					    rcp r0.y, r2.x
					    cmp r0.x, r0.x, r0.y, c5.w
					    mul r0.x, r0.x, r1.w
					    mul_pp oC0.xyz, r0.x, r1
					    mov_pp oC0.w, c5.y
					
					// approximately 22 instruction slots used (2 texture, 20 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 2
					mad r0.xy, cb0[2].xyxx, cb0[4].zzzz, v1.xyxx
					mad r0.xy, r0.xyxx, cb0[3].xyxx, cb0[3].zwzz
					sample r1.xyzw, r0.xyxx, t0.xyzw, s1
					sample r0.xyzw, r0.xyxx, t1.xyzw, s0
					mul r0.xyz, r1.xxxx, r0.xyzx
					min r0.xyz, r0.xyzx, l(65504.000000, 65504.000000, 65504.000000, 0.000000)
					max r0.w, r0.z, r0.y
					max r0.w, r0.w, r0.x
					add r1.x, r0.w, -cb0[5].x
					max r1.x, r1.x, l(0.000000)
					min r1.x, r1.x, cb0[5].y
					mul r1.y, r1.x, cb0[5].z
					mul r1.x, r1.x, r1.y
					add r1.y, r0.w, -cb0[4].w
					max r0.w, r0.w, l(0.000010)
					max r1.x, r1.y, r1.x
					div r0.w, r1.x, r0.w
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, l(0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d9 " {
					Keywords { "UNITY_COLORSPACE_GAMMA" }
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _AutoExposure;
					//   float3 _Curve;
					//   sampler2D _MainTex;
					//   float4 _MainTex_ST;
					//   float4 _MainTex_TexelSize;
					//   float _PrefilterOffs;
					//   float _Threshold;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   _MainTex_TexelSize c0       1
					//   _MainTex_ST        c1       1
					//   _PrefilterOffs     c2       1
					//   _Threshold         c3       1
					//   _Curve             c4       1
					//   _MainTex           s0       1
					//   _AutoExposure      s1       1
					//
					
					    ps_3_0
					    def c5, 65504, 0.305306017, 0.682171106, 0.0125228781
					    def c6, 0, -9.99999975e-006, 100000, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    mov r0.xy, c0
					    mad r0.xy, r0, c2.x, v0
					    mad r0.xy, r0, c1, c1.zwzw
					    texld r1, r0, s1
					    texld r0, r0, s0
					    mul_pp r0.xyz, r1.x, r0
					    min_pp r1.xyz, r0, c5.x
					    mad_pp r0.xyz, r1, c5.y, c5.z
					    mad_pp r0.xyz, r1, r0, c5.w
					    mul_pp r0.xyz, r0, r1
					    max_pp r1.x, r0.y, r0.z
					    max_pp r2.x, r0.x, r1.x
					    add_pp r0.w, r2.x, -c4.x
					    max_pp r1.x, r0.w, c6.x
					    min_pp r0.w, c4.y, r1.x
					    mul r1.x, r0.w, c4.z
					    mul_pp r0.w, r0.w, r1.x
					    add r1.x, r2.x, -c3.x
					    max r2.y, r0.w, r1.x
					    add r0.w, r2.x, c6.y
					    rcp r1.x, r2.x
					    cmp r0.w, r0.w, r1.x, c6.z
					    mul r0.w, r0.w, r2.y
					    mul_pp oC0.xyz, r0.w, r0
					    mov_pp oC0.w, c6.x
					
					// approximately 25 instruction slots used (2 texture, 23 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_COLORSPACE_GAMMA" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 2
					mad r0.xy, cb0[2].xyxx, cb0[4].zzzz, v1.xyxx
					mad r0.xy, r0.xyxx, cb0[3].xyxx, cb0[3].zwzz
					sample r1.xyzw, r0.xyxx, t0.xyzw, s1
					sample r0.xyzw, r0.xyxx, t1.xyzw, s0
					mul r0.xyz, r1.xxxx, r0.xyzx
					min r0.xyz, r0.xyzx, l(65504.000000, 65504.000000, 65504.000000, 0.000000)
					mad r1.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r1.xyz, r0.xyzx, r1.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.w, r0.z, r0.y
					max r0.w, r0.w, r0.x
					add r1.x, r0.w, -cb0[5].x
					max r1.x, r1.x, l(0.000000)
					min r1.x, r1.x, cb0[5].y
					mul r1.y, r1.x, cb0[5].z
					mul r1.x, r1.x, r1.y
					add r1.y, r0.w, -cb0[4].w
					max r0.w, r0.w, l(0.000010)
					max r1.x, r1.y, r1.x
					div r0.w, r1.x, r0.w
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, l(0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d9 " {
					Keywords { "ANTI_FLICKER" }
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _AutoExposure;
					//   float3 _Curve;
					//   sampler2D _MainTex;
					//   float4 _MainTex_ST;
					//   float4 _MainTex_TexelSize;
					//   float _PrefilterOffs;
					//   float _Threshold;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   _MainTex_TexelSize c0       1
					//   _MainTex_ST        c1       1
					//   _PrefilterOffs     c2       1
					//   _Threshold         c3       1
					//   _Curve             c4       1
					//   _MainTex           s0       1
					//   _AutoExposure      s1       1
					//
					
					    ps_3_0
					    def c5, 65504, 1, 0, -9.99999975e-006
					    def c6, 100000, 0, 0, 0
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    mov r0.xy, c0
					    mad r1, r0.xyxy, c2.x, v0.xyxy
					    mad r0.zw, r1, c1.xyxy, c1
					    texld r2, r0.zwzw, s1
					    texld r3, r0.zwzw, s0
					    mul_pp r2.xyz, r2.x, r3
					    min_pp r3.xyz, r2, c5.x
					    mad r2, r0.xxxy, -c5.yzzy, r1.zwzw
					    mad r0, r0.xxxy, c5.yzzy, r1
					    mad r0, r0, c1.xyxy, c1.zwzw
					    mad r1, r2, c1.xyxy, c1.zwzw
					    texld r2, r1, s1
					    texld r4, r1, s0
					    mul_pp r2.xyz, r2.x, r4
					    min_pp r4.xyz, r2, c5.x
					    add_pp r2.xyz, r3, r4
					    texld r5, r0, s1
					    texld r6, r0, s0
					    mul_pp r5.xyz, r5.x, r6
					    min_pp r6.xyz, r5, c5.x
					    add_pp r2.xyz, r2, r6
					    min_pp r5.xyz, r4, r3
					    max_pp r7.xyz, r3, r4
					    max_pp r3.xyz, r7, r6
					    min_pp r4.xyz, r6, r5
					    add_pp r2.xyz, r2, -r4
					    add_pp r2.xyz, -r3, r2
					    texld r3, r1.zwzw, s1
					    texld r1, r1.zwzw, s0
					    mul_pp r1.xyz, r3.x, r1
					    min_pp r3.xyz, r1, c5.x
					    add_pp r1.xyz, r2, r3
					    texld r4, r0.zwzw, s1
					    texld r0, r0.zwzw, s0
					    mul_pp r0.xyz, r4.x, r0
					    min_pp r4.xyz, r0, c5.x
					    add_pp r0.xyz, r1, r4
					    min_pp r1.xyz, r3, r2
					    max_pp r5.xyz, r2, r3
					    max_pp r2.xyz, r5, r4
					    min_pp r3.xyz, r4, r1
					    add_pp r0.xyz, r0, -r3
					    add_pp r0.xyz, -r2, r0
					    max_pp r1.x, r0.y, r0.z
					    max_pp r2.x, r0.x, r1.x
					    add_pp r0.w, r2.x, -c4.x
					    max_pp r1.x, r0.w, c5.z
					    min_pp r0.w, c4.y, r1.x
					    mul r1.x, r0.w, c4.z
					    mul_pp r0.w, r0.w, r1.x
					    add r1.x, r2.x, -c3.x
					    max r2.y, r0.w, r1.x
					    add r0.w, r2.x, c5.w
					    rcp r1.x, r2.x
					    cmp r0.w, r0.w, r1.x, c6.x
					    mul r0.w, r0.w, r2.y
					    mul_pp oC0.xyz, r0.w, r0
					    mov_pp oC0.w, c5.z
					
					// approximately 58 instruction slots used (10 texture, 48 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "ANTI_FLICKER" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 7
					mad r0.xyzw, cb0[2].xyxy, cb0[4].zzzz, v1.xyxy
					mad r1.xy, r0.zwzz, cb0[3].xyxx, cb0[3].zwzz
					sample r2.xyzw, r1.xyxx, t0.xyzw, s1
					sample r1.xyzw, r1.xyxx, t1.xyzw, s0
					mul r1.xyz, r2.xxxx, r1.xyzx
					min r1.xyz, r1.xyzx, l(65504.000000, 65504.000000, 65504.000000, 0.000000)
					mad r2.xyzw, -cb0[2].xxxy, l(1.000000, 0.000000, 0.000000, 1.000000), r0.zwzw
					mad r0.xyzw, cb0[2].xxxy, l(1.000000, 0.000000, 0.000000, 1.000000), r0.xyzw
					mad r0.xyzw, r0.xyzw, cb0[3].xyxy, cb0[3].zwzw
					mad r2.xyzw, r2.xyzw, cb0[3].xyxy, cb0[3].zwzw
					sample r3.xyzw, r2.xyxx, t0.xyzw, s1
					sample r4.xyzw, r2.xyxx, t1.xyzw, s0
					mul r3.xyz, r3.xxxx, r4.xyzx
					min r3.xyz, r3.xyzx, l(65504.000000, 65504.000000, 65504.000000, 0.000000)
					add r4.xyz, r1.xyzx, r3.xyzx
					sample r5.xyzw, r0.xyxx, t0.xyzw, s1
					sample r6.xyzw, r0.xyxx, t1.xyzw, s0
					mul r5.xyz, r5.xxxx, r6.xyzx
					min r5.xyz, r5.xyzx, l(65504.000000, 65504.000000, 65504.000000, 0.000000)
					add r4.xyz, r4.xyzx, r5.xyzx
					min r6.xyz, r1.xyzx, r3.xyzx
					max r1.xyz, r1.xyzx, r3.xyzx
					max r1.xyz, r5.xyzx, r1.xyzx
					min r3.xyz, r5.xyzx, r6.xyzx
					add r3.xyz, -r3.xyzx, r4.xyzx
					add r1.xyz, -r1.xyzx, r3.xyzx
					sample r3.xyzw, r2.zwzz, t0.xyzw, s1
					sample r2.xyzw, r2.zwzz, t1.xyzw, s0
					mul r2.xyz, r3.xxxx, r2.xyzx
					min r2.xyz, r2.xyzx, l(65504.000000, 65504.000000, 65504.000000, 0.000000)
					add r3.xyz, r1.xyzx, r2.xyzx
					sample r4.xyzw, r0.zwzz, t0.xyzw, s1
					sample r0.xyzw, r0.zwzz, t1.xyzw, s0
					mul r0.xyz, r4.xxxx, r0.xyzx
					min r0.xyz, r0.xyzx, l(65504.000000, 65504.000000, 65504.000000, 0.000000)
					add r3.xyz, r0.xyzx, r3.xyzx
					min r4.xyz, r1.xyzx, r2.xyzx
					max r1.xyz, r1.xyzx, r2.xyzx
					max r1.xyz, r0.xyzx, r1.xyzx
					min r0.xyz, r0.xyzx, r4.xyzx
					add r0.xyz, -r0.xyzx, r3.xyzx
					add r0.xyz, -r1.xyzx, r0.xyzx
					max r0.w, r0.z, r0.y
					max r0.w, r0.w, r0.x
					add r1.x, r0.w, -cb0[5].x
					max r1.x, r1.x, l(0.000000)
					min r1.x, r1.x, cb0[5].y
					mul r1.y, r1.x, cb0[5].z
					mul r1.x, r1.x, r1.y
					add r1.y, r0.w, -cb0[4].w
					max r0.w, r0.w, l(0.000010)
					max r1.x, r1.y, r1.x
					div r0.w, r1.x, r0.w
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, l(0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d9 " {
					Keywords { "UNITY_COLORSPACE_GAMMA" "ANTI_FLICKER" }
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _AutoExposure;
					//   float3 _Curve;
					//   sampler2D _MainTex;
					//   float4 _MainTex_ST;
					//   float4 _MainTex_TexelSize;
					//   float _PrefilterOffs;
					//   float _Threshold;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   _MainTex_TexelSize c0       1
					//   _MainTex_ST        c1       1
					//   _PrefilterOffs     c2       1
					//   _Threshold         c3       1
					//   _Curve             c4       1
					//   _MainTex           s0       1
					//   _AutoExposure      s1       1
					//
					
					    ps_3_0
					    def c5, 65504, 1, 0, 0.0125228781
					    def c6, 0.305306017, 0.682171106, -9.99999975e-006, 100000
					    dcl_texcoord v0.xy
					    dcl_2d s0
					    dcl_2d s1
					    mov r0.xy, c0
					    mad r1, r0.xyxy, c2.x, v0.xyxy
					    mad r0.zw, r1, c1.xyxy, c1
					    texld r2, r0.zwzw, s1
					    texld r3, r0.zwzw, s0
					    mul_pp r2.xyz, r2.x, r3
					    min_pp r3.xyz, r2, c5.x
					    mad r2, r0.xxxy, -c5.yzzy, r1.zwzw
					    mad r0, r0.xxxy, c5.yzzy, r1
					    mad r0, r0, c1.xyxy, c1.zwzw
					    mad r1, r2, c1.xyxy, c1.zwzw
					    texld r2, r1, s1
					    texld r4, r1, s0
					    mul_pp r2.xyz, r2.x, r4
					    min_pp r4.xyz, r2, c5.x
					    add_pp r2.xyz, r3, r4
					    texld r5, r0, s1
					    texld r6, r0, s0
					    mul_pp r5.xyz, r5.x, r6
					    min_pp r6.xyz, r5, c5.x
					    add_pp r2.xyz, r2, r6
					    min_pp r5.xyz, r4, r3
					    max_pp r7.xyz, r3, r4
					    max_pp r3.xyz, r7, r6
					    min_pp r4.xyz, r6, r5
					    add_pp r2.xyz, r2, -r4
					    add_pp r2.xyz, -r3, r2
					    texld r3, r1.zwzw, s1
					    texld r1, r1.zwzw, s0
					    mul_pp r1.xyz, r3.x, r1
					    min_pp r3.xyz, r1, c5.x
					    add_pp r1.xyz, r2, r3
					    texld r4, r0.zwzw, s1
					    texld r0, r0.zwzw, s0
					    mul_pp r0.xyz, r4.x, r0
					    min_pp r4.xyz, r0, c5.x
					    add_pp r0.xyz, r1, r4
					    min_pp r1.xyz, r3, r2
					    max_pp r5.xyz, r2, r3
					    max_pp r2.xyz, r5, r4
					    min_pp r3.xyz, r4, r1
					    add_pp r0.xyz, r0, -r3
					    add_pp r0.xyz, -r2, r0
					    mad_pp r1.xyz, r0, c6.x, c6.y
					    mad_pp r1.xyz, r0, r1, c5.w
					    mul_pp r0.xyz, r0, r1
					    max_pp r1.x, r0.y, r0.z
					    max_pp r2.x, r0.x, r1.x
					    add_pp r0.w, r2.x, -c4.x
					    max_pp r1.x, r0.w, c5.z
					    min_pp r0.w, c4.y, r1.x
					    mul r1.x, r0.w, c4.z
					    mul_pp r0.w, r0.w, r1.x
					    add r1.x, r2.x, -c3.x
					    max r2.y, r0.w, r1.x
					    add r0.w, r2.x, c6.z
					    rcp r1.x, r2.x
					    cmp r0.w, r0.w, r1.x, c6.w
					    mul r0.w, r0.w, r2.y
					    mul_pp oC0.xyz, r0.w, r0
					    mov_pp oC0.w, c5.z
					
					// approximately 61 instruction slots used (10 texture, 51 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_COLORSPACE_GAMMA" "ANTI_FLICKER" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_output o0.xyzw
					dcl_temps 7
					mad r0.xyzw, cb0[2].xyxy, cb0[4].zzzz, v1.xyxy
					mad r1.xy, r0.zwzz, cb0[3].xyxx, cb0[3].zwzz
					sample r2.xyzw, r1.xyxx, t0.xyzw, s1
					sample r1.xyzw, r1.xyxx, t1.xyzw, s0
					mul r1.xyz, r2.xxxx, r1.xyzx
					min r1.xyz, r1.xyzx, l(65504.000000, 65504.000000, 65504.000000, 0.000000)
					mad r2.xyzw, -cb0[2].xxxy, l(1.000000, 0.000000, 0.000000, 1.000000), r0.zwzw
					mad r0.xyzw, cb0[2].xxxy, l(1.000000, 0.000000, 0.000000, 1.000000), r0.xyzw
					mad r0.xyzw, r0.xyzw, cb0[3].xyxy, cb0[3].zwzw
					mad r2.xyzw, r2.xyzw, cb0[3].xyxy, cb0[3].zwzw
					sample r3.xyzw, r2.xyxx, t0.xyzw, s1
					sample r4.xyzw, r2.xyxx, t1.xyzw, s0
					mul r3.xyz, r3.xxxx, r4.xyzx
					min r3.xyz, r3.xyzx, l(65504.000000, 65504.000000, 65504.000000, 0.000000)
					add r4.xyz, r1.xyzx, r3.xyzx
					sample r5.xyzw, r0.xyxx, t0.xyzw, s1
					sample r6.xyzw, r0.xyxx, t1.xyzw, s0
					mul r5.xyz, r5.xxxx, r6.xyzx
					min r5.xyz, r5.xyzx, l(65504.000000, 65504.000000, 65504.000000, 0.000000)
					add r4.xyz, r4.xyzx, r5.xyzx
					min r6.xyz, r1.xyzx, r3.xyzx
					max r1.xyz, r1.xyzx, r3.xyzx
					max r1.xyz, r5.xyzx, r1.xyzx
					min r3.xyz, r5.xyzx, r6.xyzx
					add r3.xyz, -r3.xyzx, r4.xyzx
					add r1.xyz, -r1.xyzx, r3.xyzx
					sample r3.xyzw, r2.zwzz, t0.xyzw, s1
					sample r2.xyzw, r2.zwzz, t1.xyzw, s0
					mul r2.xyz, r3.xxxx, r2.xyzx
					min r2.xyz, r2.xyzx, l(65504.000000, 65504.000000, 65504.000000, 0.000000)
					add r3.xyz, r1.xyzx, r2.xyzx
					sample r4.xyzw, r0.zwzz, t0.xyzw, s1
					sample r0.xyzw, r0.zwzz, t1.xyzw, s0
					mul r0.xyz, r4.xxxx, r0.xyzx
					min r0.xyz, r0.xyzx, l(65504.000000, 65504.000000, 65504.000000, 0.000000)
					add r3.xyz, r0.xyzx, r3.xyzx
					min r4.xyz, r1.xyzx, r2.xyzx
					max r1.xyz, r1.xyzx, r2.xyzx
					max r1.xyz, r0.xyzx, r1.xyzx
					min r0.xyz, r0.xyzx, r4.xyzx
					add r0.xyz, -r0.xyzx, r3.xyzx
					add r0.xyz, -r1.xyzx, r0.xyzx
					mad r1.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r1.xyz, r0.xyzx, r1.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r0.xyz, r0.xyzx, r1.xyzx
					max r0.w, r0.z, r0.y
					max r0.w, r0.w, r0.x
					add r1.x, r0.w, -cb0[5].x
					max r1.x, r1.x, l(0.000000)
					min r1.x, r1.x, cb0[5].y
					mul r1.y, r1.x, cb0[5].z
					mul r1.x, r1.x, r1.y
					add r1.y, r0.w, -cb0[4].w
					max r0.w, r0.w, l(0.000010)
					max r1.x, r1.y, r1.x
					div r0.w, r1.x, r0.w
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, l(0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 67271
			Program "vp" {
				SubProgram "d3d9 " {
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_ST         c8       1
					//
					
					    vs_3_0
					    def c9, 1, 0, 0, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    mad r0, v0.xyzx, c9.xxxy, c9.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mad o2.xy, v1, c8, c8.zwzw
					    mov o1.xy, v1
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 13 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mad o1.zw, v1.xxxy, cb0[3].xxxy, cb0[3].zzzw
					mov o1.xy, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d9 " {
					Keywords { "ANTI_FLICKER" }
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_ST         c8       1
					//
					
					    vs_3_0
					    def c9, 1, 0, 0, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    mad r0, v0.xyzx, c9.xxxy, c9.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mad o2.xy, v1, c8, c8.zwzw
					    mov o1.xy, v1
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 13 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "ANTI_FLICKER" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mad o1.zw, v1.xxxy, cb0[3].xxxy, cb0[3].zzzw
					mov o1.xy, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _MainTex;
					//   float4 _MainTex_TexelSize;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   _MainTex_TexelSize c0       1
					//   _MainTex           s0       1
					//
					
					    ps_3_0
					    def c1, -1, 1, 0.25, 0
					    dcl_texcoord1 v0.xy
					    dcl_2d s0
					    mov r0.xy, c1
					    mad r1, c0.xyxy, r0.xxyx, v0.xyxy
					    texld_pp r2, r1, s0
					    texld_pp r1, r1.zwzw, s0
					    add_pp r1.xyz, r1, r2
					    mad r0, c0.xyxy, r0.xyyy, v0.xyxy
					    texld_pp r2, r0, s0
					    texld_pp r0, r0.zwzw, s0
					    add_pp r1.xyz, r1, r2
					    add_pp r0.xyz, r0, r1
					    mul_pp oC0.xyz, r0, c1.z
					    mov_pp oC0.w, c1.w
					
					// approximately 12 instruction slots used (4 texture, 8 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float       
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.zw
					dcl_output o0.xyzw
					dcl_temps 3
					mad r0.xyzw, cb0[2].xyxy, l(-1.000000, -1.000000, 1.000000, -1.000000), v1.zwzw
					sample r1.xyzw, r0.xyxx, t0.xyzw, s0
					sample r0.xyzw, r0.zwzz, t0.xyzw, s0
					add r0.xyz, r0.xyzx, r1.xyzx
					mad r1.xyzw, cb0[2].xyxy, l(-1.000000, 1.000000, 1.000000, 1.000000), v1.zwzw
					sample r2.xyzw, r1.xyxx, t0.xyzw, s0
					sample r1.xyzw, r1.zwzz, t0.xyzw, s0
					add r0.xyz, r0.xyzx, r2.xyzx
					add r0.xyz, r1.xyzx, r0.xyzx
					mul o0.xyz, r0.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)
					mov o0.w, l(0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d9 " {
					Keywords { "ANTI_FLICKER" }
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _MainTex;
					//   float4 _MainTex_TexelSize;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   _MainTex_TexelSize c0       1
					//   _MainTex           s0       1
					//
					
					    ps_3_0
					    def c1, -1, 1, 0, 0
					    dcl_texcoord1 v0.xy
					    dcl_2d s0
					    mov r0.xy, c1
					    mad r1, c0.xyxy, r0.xxyx, v0.xyxy
					    texld_pp r2, r1.zwzw, s0
					    texld_pp r1, r1, s0
					    max_pp r0.z, r2.y, r2.z
					    max_pp r1.w, r2.x, r0.z
					    add_pp r0.z, r1.w, c1.y
					    rcp_pp r0.z, r0.z
					    mul_pp r2.xyz, r0.z, r2
					    max_pp r0.w, r1.y, r1.z
					    max_pp r2.w, r1.x, r0.w
					    add_pp r0.w, r2.w, c1.y
					    rcp_pp r0.w, r0.w
					    mad_pp r1.xyz, r1, r0.w, r2
					    add_pp r0.z, r0.z, r0.w
					    mad r2, c0.xyxy, r0.xyyy, v0.xyxy
					    texld_pp r3, r2, s0
					    texld_pp r2, r2.zwzw, s0
					    max_pp r0.x, r3.y, r3.z
					    max_pp r1.w, r3.x, r0.x
					    add_pp r0.x, r1.w, c1.y
					    rcp_pp r0.x, r0.x
					    mad_pp r1.xyz, r3, r0.x, r1
					    add_pp r0.x, r0.x, r0.z
					    max_pp r0.y, r2.y, r2.z
					    max_pp r1.w, r2.x, r0.y
					    add_pp r0.y, r1.w, c1.y
					    rcp_pp r0.y, r0.y
					    mad_pp r1.xyz, r2, r0.y, r1
					    add_pp r0.x, r0.y, r0.x
					    rcp_pp r0.x, r0.x
					    mul_pp oC0.xyz, r0.x, r1
					    mov_pp oC0.w, c1.z
					
					// approximately 33 instruction slots used (4 texture, 29 arithmetic)"
				}
				SubProgram "d3d11 " {
					Keywords { "ANTI_FLICKER" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float       
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.zw
					dcl_output o0.xyzw
					dcl_temps 3
					mad r0.xyzw, cb0[2].xyxy, l(-1.000000, -1.000000, 1.000000, -1.000000), v1.zwzw
					sample r1.xyzw, r0.zwzz, t0.xyzw, s0
					sample r0.xyzw, r0.xyxx, t0.xyzw, s0
					max r0.w, r1.z, r1.y
					max r0.w, r0.w, r1.x
					add r0.w, r0.w, l(1.000000)
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					max r1.w, r0.z, r0.y
					max r1.w, r0.x, r1.w
					add r1.w, r1.w, l(1.000000)
					div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
					mad r0.xyz, r0.xyzx, r1.wwww, r1.xyzx
					add r0.w, r0.w, r1.w
					mad r1.xyzw, cb0[2].xyxy, l(-1.000000, 1.000000, 1.000000, 1.000000), v1.zwzw
					sample r2.xyzw, r1.xyxx, t0.xyzw, s0
					sample r1.xyzw, r1.zwzz, t0.xyzw, s0
					max r1.w, r2.z, r2.y
					max r1.w, r1.w, r2.x
					add r1.w, r1.w, l(1.000000)
					div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
					mad r0.xyz, r2.xyzx, r1.wwww, r0.xyzx
					add r0.w, r0.w, r1.w
					max r1.w, r1.z, r1.y
					max r1.w, r1.w, r1.x
					add r1.w, r1.w, l(1.000000)
					div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
					mad r0.xyz, r1.xyzx, r1.wwww, r0.xyzx
					add r0.w, r0.w, r1.w
					div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
					mul o0.xyz, r0.wwww, r0.xyzx
					mov o0.w, l(0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 170058
			Program "vp" {
				SubProgram "d3d9 " {
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float4 _MainTex_ST;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_ST         c8       1
					//
					
					    vs_3_0
					    def c9, 1, 0, 0, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    mad r0, v0.xyzx, c9.xxxy, c9.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mad o2.xy, v1, c8, c8.zwzw
					    mov o1.xy, v1
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 13 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[4], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					mad o1.zw, v1.xxxy, cb0[3].xxxy, cb0[3].zzzw
					mov o1.xy, v1.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _MainTex;
					//   float4 _MainTex_TexelSize;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   _MainTex_TexelSize c0       1
					//   _MainTex           s0       1
					//
					
					    ps_3_0
					    def c1, -1, 1, 0.25, 0
					    dcl_texcoord1 v0.xy
					    dcl_2d s0
					    mov r0.xy, c1
					    mad r1, c0.xyxy, r0.xxyx, v0.xyxy
					    texld_pp r2, r1, s0
					    texld_pp r1, r1.zwzw, s0
					    add_pp r1.xyz, r1, r2
					    mad r0, c0.xyxy, r0.xyyy, v0.xyxy
					    texld_pp r2, r0, s0
					    texld_pp r0, r0.zwzw, s0
					    add_pp r1.xyz, r1, r2
					    add_pp r0.xyz, r0, r1
					    mul_pp oC0.xyz, r0, c1.z
					    mov_pp oC0.w, c1.w
					
					// approximately 12 instruction slots used (4 texture, 8 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float       
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[3], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.zw
					dcl_output o0.xyzw
					dcl_temps 3
					mad r0.xyzw, cb0[2].xyxy, l(-1.000000, -1.000000, 1.000000, -1.000000), v1.zwzw
					sample r1.xyzw, r0.xyxx, t0.xyzw, s0
					sample r0.xyzw, r0.zwzz, t0.xyzw, s0
					add r0.xyz, r0.xyzx, r1.xyzx
					mad r1.xyzw, cb0[2].xyxy, l(-1.000000, 1.000000, 1.000000, 1.000000), v1.zwzw
					sample r2.xyzw, r1.xyxx, t0.xyzw, s0
					sample r1.xyzw, r1.zwzz, t0.xyzw, s0
					add r0.xyz, r0.xyzx, r2.xyzx
					add r0.xyz, r1.xyzx, r0.xyzx
					mul o0.xyz, r0.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)
					mov o0.w, l(0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			ZClip Off
			ZTest Always
			ZWrite Off
			Cull Off
			GpuProgramID 201666
			Program "vp" {
				SubProgram "d3d9 " {
					"!!vs_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   float2 _BaseTex_TexelSize;
					//   float4 _MainTex_ST;
					//   row_major float4x4 unity_MatrixVP;
					//   row_major float4x4 unity_ObjectToWorld;
					//
					//
					// Registers:
					//
					//   Name                Reg   Size
					//   ------------------- ----- ----
					//   unity_ObjectToWorld c0       4
					//   unity_MatrixVP      c4       4
					//   _MainTex_ST         c8       1
					//   _BaseTex_TexelSize  c9       1
					//
					
					    vs_3_0
					    def c10, 1, 0, -2, 0
					    dcl_position v0
					    dcl_texcoord v1
					    dcl_position o0
					    dcl_texcoord o1.xy
					    dcl_texcoord1 o2.xy
					    mad r0, v0.xyzx, c10.xxxy, c10.yyyx
					    dp4 r1.x, c0, r0
					    dp4 r1.y, c1, r0
					    dp4 r1.z, c2, r0
					    dp4 r1.w, c3, r0
					    dp4 r2.x, c4, r1
					    dp4 r2.y, c5, r1
					    dp4 r2.z, c6, r1
					    dp4 r2.w, c7, r1
					    mad r0.xy, v1, c8, c8.zwzw
					    mov o1.xy, r0
					    mov r1.y, c10.y
					    slt r0.w, c9.y, r1.y
					    mad r1.x, r0.y, c10.z, c10.x
					    mad r0.z, r0.w, r1.x, r0.y
					    mov o2.xy, r0.xzzw
					    mad o0.xy, r2.w, c255, r2
					    mov o0.zw, r2
					
					// approximately 18 instruction slots used"
				}
				SubProgram "d3d11 " {
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        1     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[4], immediateIndexed
					dcl_constantbuffer CB2[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v1.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb1[1].xyzw
					mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb1[3].xyzw
					mul r1.xyzw, r0.yyyy, cb2[18].xyzw
					mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
					mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
					lt r0.x, cb0[4].y, l(0.000000)
					mad r0.yzw, v1.xxyx, cb0[3].xxyx, cb0[3].zzwz
					add r1.x, -r0.z, l(1.000000)
					movc o1.w, r0.x, r1.x, r0.z
					mov o1.xyz, r0.yzwy
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					"!!ps_3_0
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 10.1
					//
					// Parameters:
					//
					//   sampler2D _BaseTex;
					//   sampler2D _MainTex;
					//   float4 _MainTex_TexelSize;
					//   float _SampleScale;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   _MainTex_TexelSize c0       1
					//   _SampleScale       c1       1
					//   _MainTex           s0       1
					//   _BaseTex           s1       1
					//
					
					    ps_3_0
					    def c2, 0, 1, -1, 2
					    def c3, 4, 0.0625, 0, 0
					    dcl_texcoord v0.xy
					    dcl_texcoord1 v1.xy
					    dcl_2d s0
					    dcl_2d s1
					    mov r0.xyz, c2
					    mad r1, c1.x, r0.xxyy, r0.yyxx
					    mul r1, r1, c0.xyxy
					    mad r0, c1.x, r0.yyxx, r0.xxzx
					    mad r2, r1.xywy, -r0.xywy, v0.xyxy
					    texld_pp r3, r2, s0
					    texld_pp r2, r2.zwzw, s0
					    mad_pp r2.xyz, r2, c2.w, r3
					    mad r3.xy, r1.zyzw, -r0.zyzw, v0
					    texld_pp r3, r3, s0
					    add_pp r2.xyz, r2, r3
					    mad r3, r1.zwxw, r0.zwxw, v0.xyxy
					    texld_pp r4, r3, s0
					    texld_pp r3, r3.zwzw, s0
					    mad_pp r2.xyz, r4, c2.w, r2
					    texld_pp r4, v0, s0
					    mad_pp r2.xyz, r4, c3.x, r2
					    mad_pp r2.xyz, r3, c2.w, r2
					    mad r3, r1.zywy, r0.zywy, v0.xyxy
					    mad r0.xy, r1, r0, v0
					    texld_pp r0, r0, s0
					    texld_pp r1, r3, s0
					    texld_pp r3, r3.zwzw, s0
					    add_pp r1.xyz, r1, r2
					    mad_pp r1.xyz, r3, c2.w, r1
					    add_pp r0.xyz, r0, r1
					    texld_pp r1, v1, s1
					    mad_pp oC0.xyz, r0, c3.y, r1
					    mov_pp oC0.w, c2.x
					
					// approximately 29 instruction slots used (10 texture, 19 arithmetic)"
				}
				SubProgram "d3d11 " {
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xy          1     NONE   float   xy  
					// TEXCOORD                 1     zw        1     NONE   float     zw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[6], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v1.zw
					dcl_output o0.xyzw
					dcl_temps 5
					mov r0.x, l(1.000000)
					mov r0.z, cb0[5].w
					mul r0.xyzw, r0.xxzz, cb0[2].xyxy
					mov r1.zw, l(0,0,-1.000000,0)
					mov r1.x, cb0[5].w
					mad r2.xyzw, -r0.xywy, r1.xxwx, v1.xyxy
					sample r3.xyzw, r2.xyxx, t1.xyzw, s0
					sample r2.xyzw, r2.zwzz, t1.xyzw, s0
					mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
					mad r3.xy, -r0.zyzz, r1.zxzz, v1.xyxx
					sample r3.xyzw, r3.xyxx, t1.xyzw, s0
					add r2.xyz, r2.xyzx, r3.xyzx
					mad r3.xyzw, r0.zwxw, r1.zwxw, v1.xyxy
					mad r4.xyzw, r0.zywy, r1.zxwx, v1.xyxy
					mad r0.xy, r0.xyxx, r1.xxxx, v1.xyxx
					sample r0.xyzw, r0.xyxx, t1.xyzw, s0
					sample r1.xyzw, r3.xyxx, t1.xyzw, s0
					sample r3.xyzw, r3.zwzz, t1.xyzw, s0
					mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r2.xyzx
					sample r2.xyzw, v1.xyxx, t1.xyzw, s0
					mad r1.xyz, r2.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), r1.xyzx
					mad r1.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r1.xyzx
					sample r2.xyzw, r4.xyxx, t1.xyzw, s0
					sample r3.xyzw, r4.zwzz, t1.xyzw, s0
					add r1.xyz, r1.xyzx, r2.xyzx
					mad r1.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r1.xyzx
					add r0.xyz, r0.xyzx, r1.xyzx
					sample r1.xyzw, v1.zwzz, t0.xyzw, s1
					mad o0.xyz, r0.xyzx, l(0.062500, 0.062500, 0.062500, 0.000000), r1.xyzx
					mov o0.w, l(0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
}